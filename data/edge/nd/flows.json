[
    {
        "id": "7c7a09edf982e2f4",
        "type": "tab",
        "label": "全局配置(边缘)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e93bbc67912b9178",
        "type": "tab",
        "label": "订阅/发布",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "46a5ba0d798d87c3",
        "type": "tab",
        "label": "接口调用",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f7e96a32e56d72eb",
        "type": "tab",
        "label": "接口处理",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "95249172.4f419",
        "type": "tab",
        "label": "Z2M服务",
        "disabled": false,
        "info": ""
    },
    {
        "id": "02363c72749a98be",
        "type": "tab",
        "label": "Z2M消息处理",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "73824c52c204153b",
        "type": "mqtt-broker",
        "name": "push",
        "broker": "push-access.sdp.101.com",
        "port": "1780",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "2",
        "birthRetain": "true",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "2",
        "willRetain": "true",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "562dca499de9d04d",
        "type": "mqtt-broker",
        "name": "z2m",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "f544f205.d51a7",
        "type": "inject",
        "z": "7c7a09edf982e2f4",
        "name": "初始化",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "683f9c514d3dc3f8"
            ]
        ]
    },
    {
        "id": "52f82eb73840e302",
        "type": "OS",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "x": 410,
        "y": 100,
        "wires": [
            [
                "705cd1a4e7548610"
            ]
        ]
    },
    {
        "id": "705cd1a4e7548610",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "OS",
        "rules": [
            {
                "t": "set",
                "p": "os",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 100,
        "wires": [
            [
                "c27b74647cc92e82"
            ]
        ]
    },
    {
        "id": "c27b74647cc92e82",
        "type": "home-dir",
        "z": "7c7a09edf982e2f4",
        "x": 700,
        "y": 100,
        "wires": [
            [
                "3e822ed879b8777e"
            ]
        ]
    },
    {
        "id": "3e822ed879b8777e",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "datadir",
        "rules": [
            {
                "t": "set",
                "p": "os.datadir",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 100,
        "wires": [
            [
                "a6a4ebf94a8b8924"
            ]
        ]
    },
    {
        "id": "f70a2bb4819417da",
        "type": "link out",
        "z": "7c7a09edf982e2f4",
        "name": "配置完成",
        "mode": "link",
        "links": [
            "3fdb98726d73125a",
            "906bb62a708b4c0c"
        ],
        "x": 825,
        "y": 560,
        "wires": []
    },
    {
        "id": "4aa5b949a197bcb7",
        "type": "inject",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "data",
        "payloadType": "global",
        "x": 180,
        "y": 900,
        "wires": [
            [
                "61299e55f08ac3e1"
            ]
        ]
    },
    {
        "id": "61299e55f08ac3e1",
        "type": "debug",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 900,
        "wires": []
    },
    {
        "id": "a6a4ebf94a8b8924",
        "type": "switch",
        "z": "7c7a09edf982e2f4",
        "name": "是否激活边缘？",
        "property": "IOT_ENABLE_EDG",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 300,
        "y": 200,
        "wires": [
            [
                "c0624055eec65ac4"
            ]
        ]
    },
    {
        "id": "c0624055eec65ac4",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "配置文件",
        "func": "\nreturn {\n    filename: env.get(\"IOT_CONFIG_FILE\")\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 200,
        "wires": [
            [
                "387bc8ba683df91f"
            ]
        ]
    },
    {
        "id": "874e2ff0304f3dd7",
        "type": "json",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 830,
        "y": 200,
        "wires": [
            [
                "292cc7137106f66e"
            ]
        ]
    },
    {
        "id": "387bc8ba683df91f",
        "type": "file in",
        "z": "7c7a09edf982e2f4",
        "name": "读配置文件",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 670,
        "y": 200,
        "wires": [
            [
                "874e2ff0304f3dd7"
            ]
        ]
    },
    {
        "id": "292cc7137106f66e",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "数据初始化",
        "func": "let config = msg.payload.edge;\n\nlet _ids = global.get(\"ids\");\n\nObject.keys(config.global).forEach(key => {\n    global.set(key, config.global[key])\n})\n\nlet data = global.get(\"data\");\nif (_ids) global.set(\"ids\", _ids);\nlet ids = global.get(\"ids\");\n\n\n// let host = env.get(\"HOSTNAME\") || env.get(\"COMPUTERNAME\");\n// ids.edg = ids.edg.replace(\"{HOSTNAME}\", host);\n\nlet app = data.app;\nlet dom = app.domain;\nlet dsp = dom.dispatcher;\nlet edg = dsp.edge;\n\n\ndata.dispatcher = dsp;\ndata.edge = edg;\ndata.devices = edg.devices;\ndata.mqtt = edg.mqtt;\ndata.topics = edg.mqtt.topics;\ndata.ids = ids;\n\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 360,
        "wires": [
            [
                "32b635bc5bbe8de1"
            ]
        ]
    },
    {
        "id": "068d75ddb00dcc52",
        "type": "debug",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 640,
        "wires": []
    },
    {
        "id": "32b635bc5bbe8de1",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "展开主题函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet gids = global.get(\"ids\");\n\n\nlet expandTopic = {\n    expandStr : function(v, _ids) {\n        let ids = Object.assign({}, gids);\n        ids = Object.assign(ids, _ids || {});\n\n        if (typeof v == \"string\") {\n            v = v.replace(/\\{APP_ID\\}/g, env.get(\"IOT_APP_ID\") || \"\");\n            v = v.replace(/\\{DOM_ID\\}/g, env.get(\"IOT_DOM_ID\") || \"\");\n            v = v.replace(/\\{DSP_ID\\}/g, env.get(\"IOT_DSP_ID\") || \"\");\n            v = v.replace(/\\{EDG_ID\\}/g, env.get(\"IOT_EDG_ID\") || \"\");\n            v = v.replace(/\\{DIO_ID\\}/g, env.get(\"IOT_DIO_ID\") || \"\");\n            v = v.replace(/\\{PLF_ID\\}/g, env.get(\"IOT_PLF_ID\") || \"\");\n            v = v.replace(/\\{HOSTNAME\\}/g, env.get(\"HOSTNAME\") || env.get(\"COMPUTERNAME\") || \"\");\n            \n            v = v.replace(/\\{app\\}/g, ids.app || \"\");\n            v = v.replace(/\\{dom\\}/g, ids.dom || \"\");\n            v = v.replace(/\\{dsp\\}/g, ids.dsp || \"\");\n            v = v.replace(/\\{edg\\}/g, ids.edg || \"\");\n            v = v.replace(/\\{dio\\}/g, ids.dio || \"\");\n            v = v.replace(/\\{plf\\}/g, ids.plf || \"\");\n            if (ids.dev)\n                v = v.replace(/\\{dev\\}/g, ids.dev || \"\");\n        }\n        return v;\n    },\n    expandArray : function(v, _ids) {\n        if (Array.isArray(v)) {\n            for(let i=0; i < v.length; i++) {\n                v[i] = this.expand(v[i], _ids);\n            }\n        }\n        return arr;\n    },\n    expandObj : function(v, _ids) {\n        if (typeof v == \"object\") {\n            let keys = Object.keys(v);\n            keys.forEach(k => {\n                v[k] = this.expand(v[k], _ids);\n            });\n        }\n        return v;        \n    },\n    expand : function(v, _ids) {\n        if (typeof v == \"string\")\n            v = this.expandStr(v, _ids);\n                    \n        if (Array.isArray(v)) {\n            v = expandArray(v, _ids);\n        }\n        \n        if (typeof v == \"object\") {\n            v = this.expandObj(v, _ids)\n        }\n                \n        return v\n    }\n}\n    \n\n\ncommon.expandTopic = expandTopic;\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 360,
        "wires": [
            [
                "28f0789e7c6d7af0"
            ]
        ]
    },
    {
        "id": "28f0789e7c6d7af0",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "缓存数据函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet online = function(){\n    let events = this.events;\n    if (events && events.status)\n        return events.status.pld.online;\n    return 0;\n}\n\nlet cachePayload = function(payload) {\n    let hd = payload.hd;\n    let pld = payload.pld;\n    if (hd.from.type == \"dev\") {\n        let dysub = false;\n        let dev = data.devices[hd.from.id];\n        if (!dev) {\n            dev = {};\n            dysub = true;\n        }\n        dev.id = hd.from.id;\n        dev.events = dev.events || {};\n        if (hd.from.pid)\n            dev.pid = hd.from.pid;\n        dev.events[hd.entry.id] = payload;\n        dev.online = online;\n        data.devices[hd.from.id] = dev;\n        if (dysub) node.send({device: dev}, null);\n    }\n    \n    let dsp = data.dispatcher;\n    if (hd.from.type == \"dsp\" && hd.from.id == dsp.id ) {\n        if (hd.entry.type == \"evt\"){\n            dsp.events = dsp.events || {};\n            dsp.events[hd.entry.id] = payload;\n            dsp.online = online;\n        }\n    }\n}\n\ncommon.cachePayload = cachePayload;\n\nreturn [null, {payload: data}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 400,
        "wires": [
            [
                "b15bbbcec428c762"
            ],
            [
                "53f8f8933a1a8726"
            ]
        ]
    },
    {
        "id": "53f8f8933a1a8726",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "键值转ID函数",
        "func": "let common = global.get(\"common\");\n\nlet keyToObjId = function(objs) {\n        let keys = Object.keys(objs);\n        keys.forEach(key => {\n            let obj = objs[key];\n            if (typeof obj == \"object\") \n                obj.id = key;\n        })        \n    }\n\n\ncommon.keyToObjId = keyToObjId;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "c983ab7963d0f975"
            ]
        ]
    },
    {
        "id": "c983ab7963d0f975",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "获取HD主题函数",
        "func": "let common = global.get(\"common\");\nlet ids = global.get(\"data\").ids;\n\nlet getHDTopic = function(hd) {\n    let tpc = \"\";\n    if (!hd.pref) hd.pref = {};\n    if (!hd.pref.app) hd.pref.app = (ids.app ? ids.app : \"0\");\n    if (!hd.pref.dom) hd.pref.dom = (ids.dom ? ids.dom : \"0\");\n    \n    if (!hd.from) hd.from = {};\n    if (!hd.from.type) hd.from.type = \"edg\";\n    if (!hd.from.id) hd.from.id = ids.edg;\n    if (!hd.to) hd.to = {};\n    if (!hd.to.type) hd.to.type = \"0\";\n    if (!hd.to.id) hd.to.id = \"0\";\n    if (!hd.entry) hd.entry = {};\n    if (!hd.entry.type) hd.entry.type = \"0\";\n    if (!hd.entry.id) hd.entry.id = \"0\";\n    if (!hd.sid) hd.sid = \"0\";\n    if (!hd.stp) hd.stp = 0;\n    if (!hd.version) hd.version = global.get(\"version\")\n\n    tpc =   hd.pref.app + \"/\" + hd.pref.dom + \"/\" + \n            hd.from.type + \"/\" + hd.from.id + \"/\" + \n            hd.to.type + \"/\" + hd.to.id + \"/\" + \n            hd.entry.type + \"/\" + hd.entry.id;\n    return tpc;\n}\n\n\ncommon.getHDTopic = getHDTopic;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 480,
        "wires": [
            [
                "a135c4a79efe2dc9"
            ]
        ]
    },
    {
        "id": "a135c4a79efe2dc9",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "Z3协调器初始化函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet os = global.get(\"os\");\nlet devices = data.devices;\nlet topics = data.topics;\nlet edgz2m =  data.edge.z2m;\nlet tcpPort = edgz2m.tcpPort;\nlet frontendPort = edgz2m.frontendPort;\nlet z2mDir = edgz2m.z2mDir;\nlet dataDir = edgz2m.dataDir;\nif (os.platform == \"win32\") {\n    z2mDir = edgz2m.z2mDir_win;\n    dataDir = edgz2m.dataDir_win;   \n}\n\nlet running = function() {\n    return  this.z2m && this.z2m.status && \n            (this.z2m.status == \"running\" || this.z2m.status == \"online\")\n}\n\nlet setDevice = (device) => {\n    let devDataDir = dataDir + \"/\" + device.id; \n    let spawnArgs = \"../zigbee2mqtt/index.js\";\n    let execStr = \"cd \" + z2mDir;\n    if (os.platform == \"win32\"){\n        execStr =execStr + \"&& set ZIGBEE2MQTT_DATA=\" + devDataDir;\n        execStr =execStr + \"&& npm start\";\n    } else {\n        execStr =execStr + \"&& ZIGBEE2MQTT_DATA=\" + devDataDir;\n        execStr =execStr + \" npm start\";\n    }\n\n    let z2m = device.z2m || {};\n    z2m.tcp = {\n            port: tcpPort,\n            status: null\n        };\n    z2m.z2m = {\n            configuration: {\n                mqtt: {\n                    base_topic: device.id,\n                    server: \"mqtt://127.0.0.1:1883\",\n                    user: \"device\"\n                },\n                serial: {\n                    port: \"tcp://127.0.0.1:\" + (tcpPort++)\n                },\n                frontend: {\n                    port: (frontendPort++)\n                }\n            },\n\n            datadir: devDataDir,\n            configfile: \"configuration.yaml\",\n            configfullfile: devDataDir + \"/configuration.yaml\",\n            databasefile: \"database.db\",\n            databasefullfile: devDataDir + \"/database.db\",\n            backfilenames:[\"configuration.yaml\",\"database.db\", \"coordinator_backup.json\"],\n            backfiles: {},\n            exec: execStr,\n            spawn: spawnArgs,\n            status: null,\n            datafile: z2m.z2m && z2m.z2m.datafile\n        };\n    z2m.running = running;\n    device.z2m = z2m;\n}\n\n\nlet initZ2MDevice = function(did) {\n    let device = devices[did];\n    if (device && (!device.z2m || !device.z2m.tcp || !device.z2m.z2m)) {\n        setDevice(device);\n    }\n    \n    return device;\n}\n\n\nlet getZ2MStatus = function(did, status) {\n    let device = devices[did];\n    if (device && device.z2m && device.z2m.z2m) {\n        return device.z2m.z2m.status\n    }\n}\n\nlet setZ2MStatus = function(did, status) {\n    let device = devices[did];\n    if (device && device.z2m && device.z2m.z2m) {\n        device.z2m.z2m.status = status\n    }\n    \n    return device;\n}\n\n\ncommon.initZ2MDevice = initZ2MDevice;\ncommon.setZ2MStatus = setZ2MStatus;\ncommon.getZ2MStatus = getZ2MStatus;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 520,
        "wires": [
            [
                "f77d15f0cc88c3d7"
            ]
        ]
    },
    {
        "id": "f77d15f0cc88c3d7",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "数据补全",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\ncommon.expandTopic.expand(data.ids);    \ncommon.expandTopic.expand(data.topics.subs);\ncommon.expandTopic.expand(data.topics.services);\ncommon.keyToObjId(data.devices);\n\ndata.app.id = data.ids.app;\ndata.domain.id = data.ids.dom;\ndata.dispatcher.id = data.ids.dsp;\ndata.edge.id = data.ids.edg;\n\n\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 560,
        "wires": [
            [
                "068d75ddb00dcc52",
                "f70a2bb4819417da"
            ]
        ]
    },
    {
        "id": "741bfe14448d5710",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "缓存原始配置",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ac60446b2e2fd797",
        "type": "link in",
        "z": "7c7a09edf982e2f4",
        "name": "重载配置",
        "links": [
            "3be6aa741efc38c0"
        ],
        "x": 135,
        "y": 200,
        "wires": [
            [
                "85b2a20bb5e50604",
                "a6a4ebf94a8b8924"
            ]
        ]
    },
    {
        "id": "85b2a20bb5e50604",
        "type": "debug",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 250,
        "y": 260,
        "wires": []
    },
    {
        "id": "683f9c514d3dc3f8",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "version",
        "rules": [
            {
                "t": "set",
                "p": "version",
                "pt": "global",
                "to": "0.0.1",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "ids",
                "pt": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 100,
        "wires": [
            [
                "52f82eb73840e302"
            ]
        ]
    },
    {
        "id": "2a5bed3b693562e4",
        "type": "link out",
        "z": "7c7a09edf982e2f4",
        "name": "设备状态订阅",
        "mode": "link",
        "links": [
            "1fbea7baf2a0c450"
        ],
        "x": 825,
        "y": 400,
        "wires": []
    },
    {
        "id": "b15bbbcec428c762",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "订阅上下线主题",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet topic;\nlet ids = {};\nif (msg.dispatcher) {\n    topic = data.topics.dysubs.dsp_evt_status;\n    ids.dsp = msg.dispatcher.id;\n}\n\nif (msg.edge) {\n    topic = data.topics.dysubs.edg_evt_status;\n    ids.edg = msg.edge.id;    \n}\n\nif (msg.device) {\n    topic = data.topics.dysubs.dev_evt_status;\n    ids.dev = msg.device.id;    \n}\n\nif (msg.platform) {\n    topic = data.topics.dysubs.plf_evt_status;\n    ids.plf = msg.platform.id;      \n}\n\nif (topic) {\n    topic = common.expandTopic.expandStr(topic, ids);\n\n    node.send({\n            action: \"unsubscribe\",\n            topic: topic\n    })\n    \n    node.send({\n            action: \"subscribe\",\n            topic: topic\n    })\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 400,
        "wires": [
            [
                "2a5bed3b693562e4"
            ]
        ]
    },
    {
        "id": "0f989c13f4e0c1cb",
        "type": "mqtt in",
        "z": "e93bbc67912b9178",
        "name": "mqtt订阅",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "73824c52c204153b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 460,
        "y": 200,
        "wires": [
            [
                "0050c31c1969d8ff",
                "c503d35a9ca051ed"
            ]
        ]
    },
    {
        "id": "906bb62a708b4c0c",
        "type": "link in",
        "z": "e93bbc67912b9178",
        "name": "",
        "links": [
            "f70a2bb4819417da"
        ],
        "x": 185,
        "y": 260,
        "wires": [
            [
                "e4534314a7bcd4b3"
            ]
        ]
    },
    {
        "id": "589883c5ddd06e17",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "订阅主题",
        "func": "let data = global.get(\"data\")\nlet topics = data.topics;\nlet ids = data.ids;\nif (ids.app && ids.dom && ids.dsp) {\n    node.send({\n            action: \"unsubscribe\",\n            topic: Object.values(topics.subs)\n    })\n    node.send({\n            action: \"unsubscribe\",\n            topic: Object.values(topics.services)\n    })    \n    \n    node.send({\n            action: \"subscribe\",\n            topic: Object.values(topics.subs)\n    })\n    \n    node.send({\n            action: \"subscribe\",\n            topic: Object.values(topics.services)\n    })\n  \n} else {\n    node.send({\n            action: \"subscribe\",\n            topic: topics.services.edg_svc_login\n    })      \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 200,
        "wires": [
            [
                "0f989c13f4e0c1cb",
                "f6ce25be1914c84e"
            ]
        ]
    },
    {
        "id": "745ba2affb87c4cd",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 120,
        "wires": []
    },
    {
        "id": "ee0217ceba515222",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "缓存数据",
        "func": "msg.topics = msg.topic.split(\"/\");\nlet hd = msg.payload.hd;\nif (!hd.pref) {\n    hd.pref = {\n        app: msg.topics[0],\n        dom: msg.topics[1]\n    }\n}\n\n\nlet common = global.get(\"common\");\ncommon.cachePayload(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 200,
        "wires": [
            [
                "be8cd487c69c6c5a"
            ]
        ]
    },
    {
        "id": "be8cd487c69c6c5a",
        "type": "link out",
        "z": "e93bbc67912b9178",
        "name": "订阅输出",
        "mode": "link",
        "links": [
            "2ff5101df1ab6584",
            "b909128e182d46da"
        ],
        "x": 1025,
        "y": 200,
        "wires": []
    },
    {
        "id": "47f3ed4e61a01a5c",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "发布主题",
        "func": "let common = global.get(\"common\")\nmsg.topic = common.getHDTopic(msg.payload.hd);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 520,
        "wires": [
            [
                "8990876a77a537e8",
                "d5db30b412aaf4ae",
                "a83fbf51e61bce78"
            ]
        ]
    },
    {
        "id": "8990876a77a537e8",
        "type": "mqtt out",
        "z": "e93bbc67912b9178",
        "name": "mqtt发布",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "73824c52c204153b",
        "x": 480,
        "y": 520,
        "wires": []
    },
    {
        "id": "f4460e5db856239e",
        "type": "link in",
        "z": "e93bbc67912b9178",
        "name": "主题发布",
        "links": [
            "5002cb933f4b4eb5",
            "befe5b1ac4389423",
            "cb5a80219ea82576",
            "cecd0debcb823e0f",
            "005af7c67cff4282",
            "c9eb4957d50481a9",
            "f25dd30a6d3bf86b"
        ],
        "x": 205,
        "y": 520,
        "wires": [
            [
                "47f3ed4e61a01a5c"
            ]
        ]
    },
    {
        "id": "d5db30b412aaf4ae",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 600,
        "wires": []
    },
    {
        "id": "13403285d1db57b7",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "时间戳",
        "func": "let date = new Date()\nmsg.payload.hd.tpc = msg.topic;\nmsg.payload.hd.tms=date.valueOf();\nmsg.payload.hd.tm=date.toLocaleString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 200,
        "wires": [
            [
                "745ba2affb87c4cd",
                "ee0217ceba515222"
            ]
        ]
    },
    {
        "id": "a83fbf51e61bce78",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 680,
        "wires": []
    },
    {
        "id": "1fbea7baf2a0c450",
        "type": "link in",
        "z": "e93bbc67912b9178",
        "name": "动态订阅主题",
        "links": [
            "83c403b1c017c665",
            "9df668438b39a15c",
            "2a5bed3b693562e4"
        ],
        "x": 185,
        "y": 160,
        "wires": [
            [
                "0f989c13f4e0c1cb",
                "f6ce25be1914c84e"
            ]
        ]
    },
    {
        "id": "f6ce25be1914c84e",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 120,
        "wires": []
    },
    {
        "id": "6b6a7c7b19998294",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "broker",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 260,
        "wires": []
    },
    {
        "id": "a74f2eeda3fa9bc1",
        "type": "json",
        "z": "e93bbc67912b9178",
        "name": "",
        "property": "broker.will.payload",
        "action": "str",
        "pretty": false,
        "x": 610,
        "y": 260,
        "wires": [
            [
                "6b6a7c7b19998294",
                "589883c5ddd06e17",
                "0f989c13f4e0c1cb"
            ]
        ]
    },
    {
        "id": "b920e31b90166791",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "出生消息",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet hd = {\n    pref: {\n        app: \"0\",\n        dom: \"0\"\n    },\n    from: {\n        type: \"edg\",\n        id: data.ids.edg\n    },\n    to: {\n        type: \"0\",\n        id: \"0\"\n    },\n    entry: {\n        type: \"evt\",\n        id: \"status\"\n    },\n    version: global.get(\"version\")\n};\n\nlet pld = {\n    id: data.ids.edg,\n    online: 1\n};\n\nlet topic = common.getHDTopic(hd);\n\n\nlet birth = {\n    topic: topic,\n    qos: 2,\n    retain: true,\n    payload: {\n        hd: hd,\n        pld: pld\n    }\n}\n\n\nmsg.broker.birth = birth;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "e4534314a7bcd4b3",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "自动连接",
        "func": "let data = global.get(\"data\");\nmsg = {};\nmsg.action = \"connect\";\nmsg.broker = {\n    autoConnect: true,\n    force: false,\n    // clientid: \"edg_\" + data.ids.edg\n}\n\nObject.assign(msg.broker, data.mqtt.broker);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 260,
        "wires": [
            [
                "45838fa67f1ea02a"
            ]
        ]
    },
    {
        "id": "45838fa67f1ea02a",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "遗嘱消息",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet hd = {\n    pref: {\n      app: \"0\",\n      dom: \"0\"\n    },\n    from: {\n        type: \"edg\",\n        id: data.ids.edg\n    },\n    to: {\n        type: \"0\",\n        id: \"0\"\n    },\n    entry: {\n        type: \"evt\",\n        id: \"status\"\n    },\n    version: global.get(\"version\")\n};\n\nlet pld = {\n    id: data.ids.edg,\n    online: 0\n};\n\nlet topic = common.getHDTopic(hd);\n\n\nlet will = {\n    topic: topic,\n    qos: 2,\n    retain: true,\n    payload: {\n        hd: hd,\n        pld: pld\n    }\n}\n\n\nmsg.broker.will = will;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 260,
        "wires": [
            [
                "a74f2eeda3fa9bc1"
            ]
        ]
    },
    {
        "id": "0050c31c1969d8ff",
        "type": "json",
        "z": "e93bbc67912b9178",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 610,
        "y": 200,
        "wires": [
            [
                "13403285d1db57b7"
            ]
        ]
    },
    {
        "id": "c503d35a9ca051ed",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 120,
        "wires": []
    },
    {
        "id": "bb13c1e5ab2b6792",
        "type": "mqtt in",
        "z": "e93bbc67912b9178",
        "name": "z2m订阅",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "562dca499de9d04d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 520,
        "y": 1140,
        "wires": [
            [
                "d5520896f23cdeb4",
                "f1814229a350f28f"
            ]
        ]
    },
    {
        "id": "9d10928bc56e32f8",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "Z2M订阅",
        "func": "node.send({\n    action: \"subscribe\",\n    topic: msg.payload.pld.id + \"/#\"\n})",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1140,
        "wires": [
            [
                "bb13c1e5ab2b6792"
            ]
        ]
    },
    {
        "id": "69ff69f2f7c73cfa",
        "type": "comment",
        "z": "e93bbc67912b9178",
        "name": "push",
        "info": "",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "66aad7c80cac1d02",
        "type": "comment",
        "z": "e93bbc67912b9178",
        "name": "z2m",
        "info": "",
        "x": 130,
        "y": 1000,
        "wires": []
    },
    {
        "id": "b628b7caedd1cf93",
        "type": "link in",
        "z": "e93bbc67912b9178",
        "name": "z2m主题订阅输入",
        "links": [
            "20f49d8e60d749d6"
        ],
        "x": 155,
        "y": 1080,
        "wires": [
            [
                "9d10928bc56e32f8",
                "70ca0f52b5127c70"
            ]
        ]
    },
    {
        "id": "d5520896f23cdeb4",
        "type": "link out",
        "z": "e93bbc67912b9178",
        "name": "z2m主题订阅输出",
        "mode": "link",
        "links": [
            "fbab28506ca8e627",
            "1c893e7137666c65"
        ],
        "x": 745,
        "y": 1140,
        "wires": []
    },
    {
        "id": "f1814229a350f28f",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1180,
        "wires": []
    },
    {
        "id": "70ca0f52b5127c70",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "PUSH订阅",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet hd = msg.payload.hd;\nlet topic = common.expandTopic.expand(data.topics.dysubs.z3co_svc_request, {dev: hd.from.id});\n\nnode.send({\n    action: \"unsubscribe\",\n    topic: topic\n})\n\nnode.send({\n    action: \"subscribe\",\n    topic: topic\n})",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1040,
        "wires": [
            [
                "01f1dbfb048fc8b1"
            ]
        ]
    },
    {
        "id": "01f1dbfb048fc8b1",
        "type": "mqtt in",
        "z": "e93bbc67912b9178",
        "name": "协调器订阅",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "73824c52c204153b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 520,
        "y": 1040,
        "wires": [
            [
                "f307492012213297",
                "6c4ee2bf37a492ba"
            ]
        ]
    },
    {
        "id": "8f351621757399ad",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "断开",
        "func": "\nmsg = {};\nmsg.action = \"disconnect\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 360,
        "wires": [
            [
                "e631c502013e282a"
            ]
        ]
    },
    {
        "id": "e631c502013e282a",
        "type": "delay",
        "z": "e93bbc67912b9178",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "952a21e20fa16b35",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "Z2M发布",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1320,
        "wires": [
            [
                "d65f0abbb98ed75f",
                "7468b62e9b1440a6",
                "314d05ed4b14a006"
            ]
        ]
    },
    {
        "id": "d65f0abbb98ed75f",
        "type": "mqtt out",
        "z": "e93bbc67912b9178",
        "name": "z2m发布",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "562dca499de9d04d",
        "x": 520,
        "y": 1320,
        "wires": []
    },
    {
        "id": "64ae5c8b47fafc17",
        "type": "link in",
        "z": "e93bbc67912b9178",
        "name": "z2m发布输入",
        "links": [
            "a8a2be716f1d660d"
        ],
        "x": 165,
        "y": 1320,
        "wires": [
            [
                "952a21e20fa16b35"
            ]
        ]
    },
    {
        "id": "f307492012213297",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1080,
        "wires": []
    },
    {
        "id": "6c4ee2bf37a492ba",
        "type": "link out",
        "z": "e93bbc67912b9178",
        "name": "",
        "mode": "link",
        "links": [
            "7e11c0dae412283f"
        ],
        "x": 745,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7468b62e9b1440a6",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 1380,
        "wires": []
    },
    {
        "id": "314d05ed4b14a006",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1440,
        "wires": []
    },
    {
        "id": "6abe85752f7acd88",
        "type": "inject",
        "z": "e93bbc67912b9178",
        "name": "定时检查连接",
        "props": [
            {
                "p": "action",
                "v": "connect",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "x": 280,
        "y": 300,
        "wires": [
            [
                "0f989c13f4e0c1cb"
            ]
        ]
    },
    {
        "id": "3fdb98726d73125a",
        "type": "link in",
        "z": "46a5ba0d798d87c3",
        "name": "请求",
        "links": [
            "a56686e93c3108ed",
            "f70a2bb4819417da"
        ],
        "x": 105,
        "y": 120,
        "wires": [
            [
                "dbc6ca860bba37fa"
            ]
        ]
    },
    {
        "id": "dbc6ca860bba37fa",
        "type": "delay",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 120,
        "wires": [
            [
                "dd8448c09ec803d1"
            ]
        ]
    },
    {
        "id": "dd8448c09ec803d1",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "登入请求",
        "func": "let data = global.get(\"data\");\nlet ids = data.ids;\nlet to = {\n    type: \"0\",\n    id: \"0\"\n};\nif (ids.app && ids.dom && ids.dsp) {\n    to = {\n        type: \"dsp\",\n        id: ids.dsp\n    }\n}\n\nreturn {\n    payload: {\n        hd: {\n            to: to,\n            entry: {\n                type: \"svc\",\n                id: \"login\"\n            }\n        },\n        pld: {\n            id: ids.edg\n        }\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 120,
        "wires": [
            [
                "808567bfe13fcc45",
                "5002cb933f4b4eb5",
                "5ce5f7201f6a379a"
            ]
        ]
    },
    {
        "id": "5002cb933f4b4eb5",
        "type": "link out",
        "z": "46a5ba0d798d87c3",
        "name": "请求",
        "mode": "link",
        "links": [
            "f4460e5db856239e"
        ],
        "x": 935,
        "y": 380,
        "wires": []
    },
    {
        "id": "808567bfe13fcc45",
        "type": "trigger",
        "z": "46a5ba0d798d87c3",
        "name": "超时5秒",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "overrideDelay": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 380,
        "y": 180,
        "wires": [
            [],
            [
                "dbc6ca860bba37fa"
            ]
        ]
    },
    {
        "id": "35f58eaf5d9015fb",
        "type": "change",
        "z": "46a5ba0d798d87c3",
        "name": "重置",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 180,
        "wires": [
            [
                "808567bfe13fcc45"
            ]
        ]
    },
    {
        "id": "ea899d2e95e95576",
        "type": "link in",
        "z": "46a5ba0d798d87c3",
        "name": "重置登入请求",
        "links": [
            "87bda24bd97b90b7",
            "7cc27320956b5354",
            "fc4a82d0dbe49740"
        ],
        "x": 105,
        "y": 180,
        "wires": [
            [
                "35f58eaf5d9015fb"
            ]
        ]
    },
    {
        "id": "d99eb11998d5f458",
        "type": "comment",
        "z": "46a5ba0d798d87c3",
        "name": "登入",
        "info": "",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "e1a4e92e2667f00e",
        "type": "comment",
        "z": "46a5ba0d798d87c3",
        "name": "获取Z2M数据文件",
        "info": "",
        "x": 150,
        "y": 800,
        "wires": []
    },
    {
        "id": "c257b644a9f3904f",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "Z2M数据获取请求",
        "func": "let data = global.get(\"data\");\nlet topics = data.topics;\nlet pld = msg.payload.pld\n\nlet _msg = {\n    payload: {\n        hd: {\n            to: {\n                type: \"0\",\n                id: \"0\"\n            },\n            entry: {\n                type: \"svc\",\n                id: \"get_z2m_datafile\"\n            }\n        },\n        pld: {\n            id: msg.payload.id || pld && pld.id\n        }\n    }\n}\nreturn _msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 880,
        "wires": [
            [
                "5002cb933f4b4eb5",
                "01a7527df6414170",
                "bc75bb376d4198ba"
            ]
        ]
    },
    {
        "id": "04d3f9487a2fb418",
        "type": "link in",
        "z": "46a5ba0d798d87c3",
        "name": "请求Z2M数据文件",
        "links": [
            "ee014620f54577ec"
        ],
        "x": 95,
        "y": 880,
        "wires": [
            [
                "c257b644a9f3904f"
            ]
        ]
    },
    {
        "id": "89082bd768ce94d2",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "获取设备数据",
        "func": "let data = global.get(\"data\");\nlet device = msg.device;\nif (!device) {\n    let pld = msg.payload.pld;\n    let did = msg.payload.id || pld && pld.id\n    let device = data.devices[did];\n}\nif (device && device.z2m && device.z2m.z2m) {\n    device.z2m.z2m.backfiles = {};\n    return {\n        device: device\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1120,
        "wires": [
            [
                "4f9e50c2f35544be",
                "f22d03acc6b5a368"
            ]
        ]
    },
    {
        "id": "93b0b280ccede552",
        "type": "link in",
        "z": "46a5ba0d798d87c3",
        "name": "设置Z2M数据文件",
        "links": [
            "8ffe717629a8bf5f"
        ],
        "x": 95,
        "y": 1180,
        "wires": [
            [
                "eb415de95c3d0cd0"
            ]
        ]
    },
    {
        "id": "16f80bed07a957db",
        "type": "link in",
        "z": "46a5ba0d798d87c3",
        "name": "重置请求Z2M数据",
        "links": [
            "2eac5508a3f5feed",
            "eae402e7be305a7f"
        ],
        "x": 95,
        "y": 920,
        "wires": [
            [
                "c38ada1c4ce06636"
            ]
        ]
    },
    {
        "id": "f240b4ecdd0b88f3",
        "type": "debug",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 920,
        "wires": []
    },
    {
        "id": "e8c6f9bd3be73a7d",
        "type": "comment",
        "z": "46a5ba0d798d87c3",
        "name": "握手",
        "info": "",
        "x": 110,
        "y": 320,
        "wires": []
    },
    {
        "id": "1873e4c1eab22fec",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "握手请求",
        "func": "let data = global.get(\"data\");\nlet did = msg.payload.id;\nif (did) {\n    return {\n        payload: {\n            hd: {\n                to: {\n                    type: \"dev\",\n                    id: did\n                },\n                entry: {\n                    type: \"svc\",\n                    id: \"handshake\"\n                }\n            },\n            pld: {\n                id: did\n            }\n        }\n    };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 380,
        "wires": [
            [
                "5002cb933f4b4eb5",
                "1383524c0b13eb78"
            ]
        ]
    },
    {
        "id": "8b0eacacfd0fe129",
        "type": "link in",
        "z": "46a5ba0d798d87c3",
        "name": "握手请求输入",
        "links": [
            "62b3ca59dea6f8fb",
            "7491a8dc5781b402"
        ],
        "x": 95,
        "y": 380,
        "wires": [
            [
                "1873e4c1eab22fec"
            ]
        ]
    },
    {
        "id": "5191a783cec57042",
        "type": "trigger",
        "z": "46a5ba0d798d87c3",
        "name": "超时5秒",
        "op1": "1",
        "op2": "",
        "op1type": "str",
        "op2type": "pay",
        "duration": "5",
        "extend": true,
        "overrideDelay": true,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 2,
        "x": 380,
        "y": 920,
        "wires": [
            [],
            [
                "f240b4ecdd0b88f3"
            ]
        ]
    },
    {
        "id": "c38ada1c4ce06636",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "重置",
        "func": "\nreturn {\n    topic: msg.payload.pld.id,\n    reset: true\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 920,
        "wires": [
            [
                "5191a783cec57042"
            ]
        ]
    },
    {
        "id": "01a7527df6414170",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "超时数据",
        "func": "\nreturn {\n    topic: msg.payload.pld.id,\n    payload: msg.payload\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 880,
        "wires": [
            [
                "5191a783cec57042"
            ]
        ]
    },
    {
        "id": "1383524c0b13eb78",
        "type": "debug",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "5ce5f7201f6a379a",
        "type": "debug",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 120,
        "wires": []
    },
    {
        "id": "bc75bb376d4198ba",
        "type": "debug",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 740,
        "wires": []
    },
    {
        "id": "6daf1af57e46df30",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "状态发布",
        "func": "let data = global.get(\"data\");\n\nlet hd = {\n    pref: {\n        app: \"0\",\n        dom: \"0\"\n    },\n    from: {\n        type: \"edg\",\n        id: data.ids.edg\n    },\n    to: {\n        type: \"0\",\n        id: \"0\"\n    },\n    entry: {\n        type: \"evt\",\n        id: \"status\"\n    },\n    version: global.get(\"version\")\n};\n\nlet pld = {\n    id: data.ids.edg,\n    online: 1\n};\n\n\nreturn {\n    payload:{\n        hd: hd,\n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 460,
        "wires": [
            [
                "5002cb933f4b4eb5",
                "9579ca626a886c07"
            ]
        ]
    },
    {
        "id": "b784350e948a9e8b",
        "type": "link in",
        "z": "46a5ba0d798d87c3",
        "name": "状态发布输入",
        "links": [
            "62b3ca59dea6f8fb",
            "0e5b3bc6e3952f26"
        ],
        "x": 95,
        "y": 460,
        "wires": [
            [
                "6daf1af57e46df30"
            ]
        ]
    },
    {
        "id": "782751952a79926b",
        "type": "file in",
        "z": "46a5ba0d798d87c3",
        "name": "读取配置文件",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 600,
        "y": 1740,
        "wires": [
            [
                "9f24a5aa47351c9d",
                "f0bcb6ec54c32b86"
            ]
        ]
    },
    {
        "id": "589a6d62e1c4fbea",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "设置配置文件名",
        "func": "let device = msg.device;\nlet z2m = device.z2m.z2m;\nmsg.filename = z2m.configfullfile;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1740,
        "wires": [
            [
                "782751952a79926b"
            ]
        ]
    },
    {
        "id": "9f24a5aa47351c9d",
        "type": "yaml",
        "z": "46a5ba0d798d87c3",
        "property": "payload",
        "name": "",
        "x": 770,
        "y": 1740,
        "wires": [
            [
                "bfe1b042c44c232d"
            ]
        ]
    },
    {
        "id": "bfe1b042c44c232d",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "缓存配置数据",
        "func": "let device = msg.device;\nlet z2m = device.z2m.z2m;\nz2m.datafile = z2m.datafile || {};\nz2m.datafile[z2m.configfile] = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1740,
        "wires": [
            [
                "07541d6c5a038634"
            ]
        ]
    },
    {
        "id": "77e4c9a44a37668d",
        "type": "file in",
        "z": "46a5ba0d798d87c3",
        "name": "读取数据库文件",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 600,
        "y": 1800,
        "wires": [
            [
                "9f815d9df98488fb",
                "52587f04bc98091d"
            ]
        ]
    },
    {
        "id": "07541d6c5a038634",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "设置数据库文件名",
        "func": "let device = msg.device;\nlet z2m = device.z2m.z2m;\nmsg.filename = z2m.databasefullfile;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1800,
        "wires": [
            [
                "77e4c9a44a37668d"
            ]
        ]
    },
    {
        "id": "52587f04bc98091d",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "缓存数据库数据",
        "func": "let device = msg.device;\nlet z2m = device.z2m.z2m;\nz2m.datafile = z2m.datafile || {};\nz2m.datafile[z2m.databasefile] = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "8e1a98b3ed335a36",
        "type": "change",
        "z": "46a5ba0d798d87c3",
        "name": "设置Z2M数据",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 1120,
        "wires": [
            [
                "89082bd768ce94d2"
            ]
        ]
    },
    {
        "id": "0204d733c674f307",
        "type": "comment",
        "z": "46a5ba0d798d87c3",
        "name": "设置Z2M数据",
        "info": "",
        "x": 130,
        "y": 1060,
        "wires": []
    },
    {
        "id": "ab0fc8457f064674",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "Z2M数据设置请求",
        "func": "let device = msg.device;\nlet z2m = device.z2m.z2m;\nif (z2m.datafile) {\n    let _msg = {\n        payload: {\n            hd: {\n                to: {\n                    type: \"0\",\n                    id: \"0\"\n                },\n                entry: {\n                    type: \"svc\",\n                    id: \"set_z2m_datafile\"\n                }\n            },\n            pld: {\n                id: device.id,\n                datafile: z2m.datafile\n            }\n        }\n    }\n    return _msg;    \n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1120,
        "wires": [
            [
                "5002cb933f4b4eb5"
            ]
        ]
    },
    {
        "id": "4f9e50c2f35544be",
        "type": "debug",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 1020,
        "wires": []
    },
    {
        "id": "2dcbae4fab13b66c",
        "type": "inject",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "props": [
            {
                "p": "payload.id",
                "v": "ESP8266x0006dbe5",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 290,
        "y": 1020,
        "wires": [
            [
                "8e1a98b3ed335a36"
            ]
        ]
    },
    {
        "id": "f0bcb6ec54c32b86",
        "type": "debug",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 1660,
        "wires": []
    },
    {
        "id": "9f815d9df98488fb",
        "type": "debug",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1860,
        "wires": []
    },
    {
        "id": "f22d03acc6b5a368",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "初始化",
        "func": "msg.device.z2m.z2m.backfiles = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1180,
        "wires": [
            [
                "1e1f30ec5d2902d9"
            ]
        ]
    },
    {
        "id": "1e1f30ec5d2902d9",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "加载文件",
        "func": "let device = msg.device;\nlet z2m = device.z2m.z2m;\nlet result = true;\nz2m.backfilenames.every(key => {\n    if (!z2m.backfiles.hasOwnProperty(key)) {\n        //未加载\n        z2m.backfiles[key] = null;\n        result = false;\n        let _msg = {\n            filename: z2m.datadir + \"/\" + key,\n            shortfilename: key,\n            device: device\n        }\n        node.send([_msg, null])\n        return false;\n    } else {\n        //已加载\n        return true;\n    }\n})\n\nif (result) {\n    //加载完成\n    return [null, msg]\n    \n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1180,
        "wires": [
            [
                "27ed73508891fc20"
            ],
            [
                "6117b05e55432005"
            ]
        ]
    },
    {
        "id": "27ed73508891fc20",
        "type": "file in",
        "z": "46a5ba0d798d87c3",
        "name": "读取数据库文件",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 720,
        "y": 1180,
        "wires": [
            [
                "46431bed0a3886ae"
            ]
        ]
    },
    {
        "id": "fd1fa304ccdf643d",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "缓存数据",
        "func": "let device = msg.device;\nlet z2m = device.z2m.z2m;\nz2m.backfiles[msg.shortfilename] = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1180,
        "wires": [
            [
                "1e1f30ec5d2902d9"
            ]
        ]
    },
    {
        "id": "6117b05e55432005",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "加载完成",
        "func": "let device = msg.device;\nlet z2m = device.z2m.z2m;\nz2m.datafile = Object.assign({}, z2m.backfiles);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1120,
        "wires": [
            [
                "084eb193c1d18615",
                "ab0fc8457f064674"
            ]
        ]
    },
    {
        "id": "46431bed0a3886ae",
        "type": "switch",
        "z": "46a5ba0d798d87c3",
        "name": "是否配置文件？",
        "property": "shortfilename",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "device.z2m.z2m.configfile",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 920,
        "y": 1180,
        "wires": [
            [
                "f70c37ada7d64d84"
            ],
            [
                "fd1fa304ccdf643d"
            ]
        ]
    },
    {
        "id": "f70c37ada7d64d84",
        "type": "yaml",
        "z": "46a5ba0d798d87c3",
        "property": "payload",
        "name": "",
        "x": 1050,
        "y": 1240,
        "wires": [
            [
                "fd1fa304ccdf643d",
                "78be22193fa7a21e"
            ]
        ]
    },
    {
        "id": "084eb193c1d18615",
        "type": "debug",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "device",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 1060,
        "wires": []
    },
    {
        "id": "78be22193fa7a21e",
        "type": "debug",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 1280,
        "wires": []
    },
    {
        "id": "eb415de95c3d0cd0",
        "type": "trigger",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "op1": "1",
        "op2": "",
        "op1type": "str",
        "op2type": "pay",
        "duration": "10",
        "extend": true,
        "overrideDelay": true,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 2,
        "x": 200,
        "y": 1180,
        "wires": [
            [],
            [
                "8e1a98b3ed335a36"
            ]
        ]
    },
    {
        "id": "9579ca626a886c07",
        "type": "debug",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 520,
        "wires": []
    },
    {
        "id": "e2fdad0ddac0973d",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "状态发布ToDSP",
        "func": "let data = global.get(\"data\");\nlet edg = data.edge;\n\nif (data.ids.dsp) {\n    let hd = {\n        to: {\n            type: \"dsp\",\n            id: data.ids.dsp\n        },\n        entry: {\n            type: \"evt\",\n            id: \"status\"\n        },\n        stp:1,\n        version: global.get(\"version\")\n    };\n    \n    \n    let pld = {\n        id: edg.id,\n        online: 1,\n        full: 0\n    };\n    return {\n        payload:{\n            hd: hd,\n            pld: pld\n        }\n    };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 520,
        "wires": [
            [
                "9579ca626a886c07",
                "5002cb933f4b4eb5"
            ]
        ]
    },
    {
        "id": "befe0fced79c1e94",
        "type": "link in",
        "z": "46a5ba0d798d87c3",
        "name": "状态发布ToDSP输入",
        "links": [
            "6f4ea3b14159efe0"
        ],
        "x": 95,
        "y": 520,
        "wires": [
            [
                "e2fdad0ddac0973d"
            ]
        ]
    },
    {
        "id": "75f02d7892d5c309",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "状态上线ToDIO",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nif (data.ids.dio) {\n    let hd = {\n        to: {\n            type: \"dio\",\n            id: data.ids.dio\n        },\n        entry: {\n            type: \"evt\",\n            id: \"status\"\n        },\n        stp: 1,\n        version: global.get(\"version\")\n    };\n    \n    let pld = {\n        id: data.ids.edg,\n        online: 1\n    };\n    \n    return {\n        payload:{\n            hd: hd,\n            pld: pld\n        }\n    };\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 600,
        "wires": [
            [
                "5002cb933f4b4eb5"
            ]
        ]
    },
    {
        "id": "8a57ac32f524bf5e",
        "type": "inject",
        "z": "46a5ba0d798d87c3",
        "name": "定时上报",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "x": 170,
        "y": 600,
        "wires": [
            [
                "75f02d7892d5c309",
                "e2fdad0ddac0973d"
            ]
        ]
    },
    {
        "id": "b909128e182d46da",
        "type": "link in",
        "z": "f7e96a32e56d72eb",
        "name": "接口处理",
        "links": [
            "be8cd487c69c6c5a"
        ],
        "x": 135,
        "y": 360,
        "wires": [
            [
                "f3fbccc82b509675",
                "d8d882d5af4ddaed",
                "22cd4677983364bd",
                "02855ee3faffeba7"
            ]
        ]
    },
    {
        "id": "f3fbccc82b509675",
        "type": "function",
        "z": "f7e96a32e56d72eb",
        "name": "数据服务响应",
        "func": "let hd = msg.payload.hd;\nif (hd.stp == 1 && hd.entry.type == \"svc\" && hd.from.type == \"dio\" ) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 300,
        "wires": [
            [
                "43bd55a5970c54c2"
            ]
        ]
    },
    {
        "id": "43bd55a5970c54c2",
        "type": "switch",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "property": "payload.hd.entry.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "login",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "get_z2m_datafile",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "set_z2m_datafile",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 510,
        "y": 300,
        "wires": [
            [
                "c3275c69d557b333"
            ],
            [
                "fe8fe202b8cbf2d7"
            ],
            []
        ]
    },
    {
        "id": "c3275c69d557b333",
        "type": "function",
        "z": "f7e96a32e56d72eb",
        "name": "登入响应处理",
        "func": "let data = global.get(\"data\");\nlet pld = msg.payload.pld;\nif (pld.app_id && pld.dom_id && pld.dsp_id && pld.edg_id) {\n    data.ids.app = pld.app_id;\n    data.ids.dom = pld.dom_id;\n    data.ids.dsp = pld.dsp_id;\n    data.ids.edg = pld.edg_id;\n    data.ids.dio = pld.dio_id;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 180,
        "wires": [
            [
                "7cc27320956b5354",
                "3be6aa741efc38c0"
            ]
        ]
    },
    {
        "id": "7cc27320956b5354",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "重置登入请求",
        "mode": "link",
        "links": [
            "ea899d2e95e95576"
        ],
        "x": 1005,
        "y": 180,
        "wires": []
    },
    {
        "id": "3be6aa741efc38c0",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "重载配置",
        "mode": "link",
        "links": [
            "ac60446b2e2fd797"
        ],
        "x": 1005,
        "y": 140,
        "wires": []
    },
    {
        "id": "d8d882d5af4ddaed",
        "type": "function",
        "z": "f7e96a32e56d72eb",
        "name": "调度服务响应",
        "func": "let hd = msg.payload.hd;\nif (hd.stp == 1 && hd.entry.type == \"svc\" && hd.from.type == \"dsp\" ) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 360,
        "wires": [
            [
                "6c8995898221459b"
            ]
        ]
    },
    {
        "id": "6c8995898221459b",
        "type": "switch",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "property": "payload.hd.entry.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "login",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "3c2636695bc1a25e",
                "fc4a82d0dbe49740"
            ]
        ]
    },
    {
        "id": "22cd4677983364bd",
        "type": "function",
        "z": "f7e96a32e56d72eb",
        "name": "调度事件请求",
        "func": "let hd = msg.payload.hd;\nif (hd.stp == 0 && hd.entry.type == \"evt\" && hd.from.type == \"dsp\" ) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 420,
        "wires": [
            [
                "468427eacf115c22"
            ]
        ]
    },
    {
        "id": "468427eacf115c22",
        "type": "switch",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "property": "payload.hd.entry.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "status",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 420,
        "wires": [
            [
                "3c2636695bc1a25e",
                "ec1a4cd5dac8dbf6"
            ]
        ]
    },
    {
        "id": "3c2636695bc1a25e",
        "type": "function",
        "z": "f7e96a32e56d72eb",
        "name": "调度上线处理",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 400,
        "wires": [
            [
                "0e5b3bc6e3952f26",
                "6f4ea3b14159efe0"
            ]
        ]
    },
    {
        "id": "0e5b3bc6e3952f26",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "状态发布",
        "mode": "link",
        "links": [
            "b784350e948a9e8b"
        ],
        "x": 995,
        "y": 380,
        "wires": []
    },
    {
        "id": "02855ee3faffeba7",
        "type": "function",
        "z": "f7e96a32e56d72eb",
        "name": "设备服务请求",
        "func": "let hd = msg.payload.hd;\nif (hd.stp == 0 && hd.entry.type == \"svc\" && hd.from.type == \"dev\" ) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 500,
        "wires": [
            [
                "f0de474fa94e1aa7"
            ]
        ]
    },
    {
        "id": "f0de474fa94e1aa7",
        "type": "switch",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "property": "payload.hd.entry.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "handshake",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 500,
        "wires": [
            [
                "8e73165886e9d694",
                "bc052bb98a2655eb"
            ]
        ]
    },
    {
        "id": "8e73165886e9d694",
        "type": "function",
        "z": "f7e96a32e56d72eb",
        "name": "握手",
        "func": "let data = global.get(\"data\")\nlet hd = msg.payload.hd;\nreturn {\n    payload: msg.payload,\n    device: data.devices[hd.from.id]\n}\n// let common = global.get(\"common\")\n// let topics = data.topics;\n// let hd = msg.payload.hd;\n\n\n\n// let topic = common.expandTopic.expand(topics.dysubs.dev_evt_status, {dev: hd.from.id});\n\n\n// node.send([\n//     {\n//         action: \"subscribe\",\n//         topic: topic\n//     }, \n\n//     msg    \n//     ])\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 500,
        "wires": [
            [
                "9883a4ad409c9141",
                "c9e9d547ed815f9a"
            ]
        ]
    },
    {
        "id": "c9e9d547ed815f9a",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "握手请求输出",
        "mode": "link",
        "links": [
            "aa6930a5c2fc2bf5"
        ],
        "x": 995,
        "y": 500,
        "wires": []
    },
    {
        "id": "9883a4ad409c9141",
        "type": "function",
        "z": "f7e96a32e56d72eb",
        "name": "响应",
        "func": "let hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet _hd = Object.assign({}, hd);\nlet _pld = Object.assign({}, pld);\n_hd.from = hd.to;\n_hd.to = hd.from;\n_hd.stp = 1;\ndelete _hd.tm;\ndelete _hd.tms;\ndelete _hd.tpc;\n\nreturn {\n    payload: {\n        hd: _hd,\n        pld: _pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 540,
        "wires": [
            [
                "c9eb4957d50481a9",
                "57c2e6e63e4d9cb9"
            ]
        ]
    },
    {
        "id": "c9eb4957d50481a9",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "mode": "link",
        "links": [
            "f4460e5db856239e"
        ],
        "x": 995,
        "y": 540,
        "wires": []
    },
    {
        "id": "fe8fe202b8cbf2d7",
        "type": "function",
        "z": "f7e96a32e56d72eb",
        "name": "Z2M数据响应处理",
        "func": "let data = global.get(\"data\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet device = data.devices[pld.id];\nif (pld.datafile || pld.defaultDatafile) {\n    device.z2m = device.z2m || {};\n    device.z2m.z2m = device.z2m.z2m || {};\n    device.z2m.z2m.datafile = pld.datafile\n    device.z2m.z2m.defaultDatafile = pld.defaultDatafile\n}\nmsg.device = device;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 260,
        "wires": [
            [
                "eae402e7be305a7f",
                "aa5978ed114d3a14"
            ]
        ]
    },
    {
        "id": "aa5978ed114d3a14",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "获取Z2M文件输出",
        "mode": "link",
        "links": [
            "513b3d3f8ecdd3f3"
        ],
        "x": 1005,
        "y": 280,
        "wires": []
    },
    {
        "id": "eae402e7be305a7f",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "重置请求Z2M数据",
        "mode": "link",
        "links": [
            "16f80bed07a957db"
        ],
        "x": 1005,
        "y": 240,
        "wires": []
    },
    {
        "id": "fc4a82d0dbe49740",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "重置登入请求",
        "mode": "link",
        "links": [
            "ea899d2e95e95576"
        ],
        "x": 1005,
        "y": 340,
        "wires": []
    },
    {
        "id": "57c2e6e63e4d9cb9",
        "type": "debug",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 620,
        "wires": []
    },
    {
        "id": "bc052bb98a2655eb",
        "type": "debug",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 620,
        "wires": []
    },
    {
        "id": "ec1a4cd5dac8dbf6",
        "type": "debug",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 440,
        "wires": []
    },
    {
        "id": "6f4ea3b14159efe0",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "状态发布ToDSP",
        "mode": "link",
        "links": [
            "befe0fced79c1e94"
        ],
        "x": 995,
        "y": 420,
        "wires": []
    },
    {
        "id": "8266808a.876a4",
        "type": "mtcp-server",
        "z": "95249172.4f419",
        "action": "action",
        "actionType": "msg",
        "port": "port",
        "portType": "msg",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "xmlAttrkey": "$",
        "xmlCharkey": "_",
        "xmlStrip": false,
        "xmlArray": false,
        "xmlNormalizeTags": false,
        "xmlNormalize": false,
        "write": "payload",
        "writeType": "msg",
        "writeHost": "",
        "writeHostType": "str",
        "writePort": "",
        "writePortType": "str",
        "closeHost": "",
        "closeHostType": "str",
        "closePort": "",
        "closePortType": "str",
        "topic": "",
        "name": "",
        "x": 750,
        "y": 1180,
        "wires": [
            [
                "537afca6.898714"
            ]
        ]
    },
    {
        "id": "c29a577.4922ba8",
        "type": "function",
        "z": "95249172.4f419",
        "name": "退出TCP",
        "func": "\nreturn {\n    action: \"kill\",\n    topic: msg.device.id,\n    device: msg.device\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1120,
        "wires": [
            [
                "8266808a.876a4"
            ]
        ]
    },
    {
        "id": "a7b7f33e.4f6d6",
        "type": "function",
        "z": "95249172.4f419",
        "name": "初始化设备数据",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet did = pld.id;\n\ncommon.initZ2MDevice(did);\n\nreturn {device: data.devices[did]}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 580,
        "wires": [
            [
                "4786d4b1.54a20c",
                "b61ee9f9.8487a8"
            ]
        ]
    },
    {
        "id": "a8206207.d4a2f",
        "type": "function",
        "z": "95249172.4f419",
        "name": "启动TCP",
        "func": "let device = msg.device;\nlet z2m = device.z2m.z2m;\n\nif (!z2m.status || z2m.status == \"killed\" ) {\n    z2m.status = \"starting\";\n    return {\n        action: \"listen\",\n        port: device.z2m.tcp.port,\n        topic: device.id,\n        device: device\n    };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1180,
        "wires": [
            [
                "8266808a.876a4"
            ]
        ]
    },
    {
        "id": "537afca6.898714",
        "type": "base64",
        "z": "95249172.4f419",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 880,
        "y": 1180,
        "wires": [
            [
                "7037af16.822b6"
            ]
        ]
    },
    {
        "id": "7037af16.822b6",
        "type": "function",
        "z": "95249172.4f419",
        "name": "下行数据",
        "func": "\nlet hd = {\n    to: {\n        type: \"dev\",\n        id: msg.topic\n    },\n    entry: {\n        type: \"svc\",\n        id: \"penet\"\n    }\n}\nlet pld = {\n    raw: msg.payload\n}\n\nreturn {\n    payload:{\n        hd: hd, \n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 680,
        "wires": [
            [
                "befe5b1ac4389423",
                "3aae7033fe07259c"
            ]
        ]
    },
    {
        "id": "d84ccae0.262b08",
        "type": "mqtt in",
        "z": "95249172.4f419",
        "name": "mqtt订阅",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "73824c52c204153b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 440,
        "y": 680,
        "wires": [
            [
                "52445c3.9f9dea4"
            ]
        ]
    },
    {
        "id": "4786d4b1.54a20c",
        "type": "function",
        "z": "95249172.4f419",
        "name": "主题订阅",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet topics = data.topics;\nlet device = msg.device;\nlet topic = common.expandTopic.expand(topics.dysubs.dev_evt_penet, {dev: device.id});\n\nnode.send({\n    action: \"subscribe\",\n    topic: topic,\n    device: device\n})",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 680,
        "wires": [
            [
                "2011f1524bc4f124",
                "b532891899181833",
                "c29a577.4922ba8",
                "d84ccae0.262b08"
            ]
        ]
    },
    {
        "id": "52445c3.9f9dea4",
        "type": "base64",
        "z": "95249172.4f419",
        "name": "",
        "action": "",
        "property": "payload.pld.raw",
        "x": 600,
        "y": 680,
        "wires": [
            [
                "d56a9ae7.a6b1c8"
            ]
        ]
    },
    {
        "id": "d56a9ae7.a6b1c8",
        "type": "function",
        "z": "95249172.4f419",
        "name": "上行数据",
        "func": "\nreturn {\n    action: \"write\",\n    topic: msg.payload.hd.from.id,\n    payload: msg.payload.pld.raw\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 680,
        "wires": [
            [
                "8266808a.876a4"
            ]
        ]
    },
    {
        "id": "896f46b2.ba73b8",
        "type": "exec",
        "z": "95249172.4f419",
        "command": "node",
        "addpay": "payload",
        "append": "../zigbee2mqtt/index.js",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 1620,
        "wires": [
            [
                "1e6e835c.3f47ed",
                "341b08e05963a500"
            ],
            [
                "1e6e835c.3f47ed",
                "341b08e05963a500"
            ],
            [
                "1e6e835c.3f47ed",
                "5955260e9fe173e8",
                "341b08e05963a500"
            ]
        ]
    },
    {
        "id": "67d7f878.3c3c08",
        "type": "function",
        "z": "95249172.4f419",
        "name": "启动Z2M",
        "func": "let data = global.get(\"data\")\nlet common = global.get(\"common\");\nlet topic = msg.topic;\nlet devices = data.devices;\nlet device = devices[topic];\nif (device) {\n    let z2m = device.z2m.z2m;\n    common.setZ2MStatus(device.id, \"running\");\n\n    // let payload = z2m.exec;\n    // payload = z2m.spawn;\n    let env = {\"ZIGBEE2MQTT_DATA\": z2m.datadir}\n    node.send({\n        env: env,\n        topic: topic,\n        // payload: payload,\n        device: device\n    })\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1620,
        "wires": [
            [
                "943d31abebb6e73f"
            ]
        ]
    },
    {
        "id": "b61ee9f9.8487a8",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "device",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 560,
        "wires": []
    },
    {
        "id": "1e6e835c.3f47ed",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1560,
        "wires": []
    },
    {
        "id": "2fa53b7.d29f1c4",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "device.z2m.z2m.status",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1480,
        "wires": []
    },
    {
        "id": "bb31c090.5dcbc",
        "type": "status",
        "z": "95249172.4f419",
        "name": "TCP状态变化",
        "scope": [
            "8266808a.876a4"
        ],
        "x": 290,
        "y": 1280,
        "wires": [
            [
                "c6fc7efe.a865a"
            ]
        ]
    },
    {
        "id": "c6fc7efe.a865a",
        "type": "json",
        "z": "95249172.4f419",
        "name": "",
        "property": "status.text",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 1280,
        "wires": [
            [
                "6ef3855c.50f5fc"
            ]
        ]
    },
    {
        "id": "6ef3855c.50f5fc",
        "type": "function",
        "z": "95249172.4f419",
        "name": "刷新状态",
        "func": "let data = global.get(\"data\")\nlet devices = data.devices;\nmsg = msg.status.text;\nif (msg) {\n    let device = devices[msg.topic];\n    if (device)\n        device.z2m.tcp.status = msg.status;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1280,
        "wires": [
            [
                "51413c75.748364",
                "f9c655b1.ce7eb8"
            ]
        ]
    },
    {
        "id": "51413c75.748364",
        "type": "switch",
        "z": "95249172.4f419",
        "name": "listened",
        "property": "status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "listened",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 720,
        "y": 1280,
        "wires": [
            [
                "dc8cc2b55ea3047f",
                "221a6fa46f68d798"
            ]
        ]
    },
    {
        "id": "f9c655b1.ce7eb8",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "status",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1320,
        "wires": []
    },
    {
        "id": "7e9f0a57.055c94",
        "type": "inject",
        "z": "95249172.4f419",
        "name": "kill all",
        "props": [
            {
                "p": "action",
                "v": "kill",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 750,
        "y": 1120,
        "wires": [
            [
                "8266808a.876a4"
            ]
        ]
    },
    {
        "id": "aa6930a5c2fc2bf5",
        "type": "link in",
        "z": "95249172.4f419",
        "name": "启动协调器输入",
        "links": [
            "0c75cd8a739aa826",
            "c9e9d547ed815f9a"
        ],
        "x": 135,
        "y": 100,
        "wires": [
            [
                "c67b416fd4b80313"
            ]
        ]
    },
    {
        "id": "c67b416fd4b80313",
        "type": "switch",
        "z": "95249172.4f419",
        "name": "是否Z3协调器",
        "property": "payload.pld.model",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Z3CO2652ESP8266",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "259011be7bbb4ede",
                "20f49d8e60d749d6"
            ],
            []
        ]
    },
    {
        "id": "2011f1524bc4f124",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 620,
        "wires": []
    },
    {
        "id": "7f5fec758583e328",
        "type": "file in",
        "z": "95249172.4f419",
        "name": "读取配置文件",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 700,
        "y": 820,
        "wires": [
            [
                "a62c3d0e9815f172"
            ]
        ]
    },
    {
        "id": "7739fabb1797a8aa",
        "type": "function",
        "z": "95249172.4f419",
        "name": "有无缓存配置？",
        "func": "let z2m = msg.device.z2m.z2m;\nlet datafile = msg.device.z2m.z2m.datafile;\nlet filename = z2m.configfile;\nif (!datafile || !datafile[filename]) {\n    //无缓存配置\n    msg.filename = z2m.configfullfile;\n    return [msg, null];  \n} else {\n    //有缓存配置\n    return [null, msg];  \n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 820,
        "wires": [
            [
                "7f5fec758583e328"
            ],
            [
                "0c5ad8a0c21631aa"
            ]
        ]
    },
    {
        "id": "b532891899181833",
        "type": "delay",
        "z": "95249172.4f419",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 320,
        "y": 820,
        "wires": [
            [
                "7739fabb1797a8aa"
            ]
        ]
    },
    {
        "id": "bb0f2b105e35f00e",
        "type": "inject",
        "z": "95249172.4f419",
        "name": "",
        "props": [
            {
                "p": "payload.pld.id",
                "v": "ESP8266x0006dbe5",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 800,
        "wires": [
            [
                "a7b7f33e.4f6d6"
            ]
        ]
    },
    {
        "id": "9449cc87f0ea1999",
        "type": "catch",
        "z": "95249172.4f419",
        "name": "文件不存在",
        "scope": [
            "7f5fec758583e328"
        ],
        "uncaught": false,
        "x": 520,
        "y": 860,
        "wires": [
            [
                "0c5ad8a0c21631aa"
            ]
        ]
    },
    {
        "id": "a62c3d0e9815f172",
        "type": "yaml",
        "z": "95249172.4f419",
        "property": "payload",
        "name": "",
        "x": 870,
        "y": 820,
        "wires": [
            [
                "3bdd43d8255bbc81"
            ]
        ]
    },
    {
        "id": "3bdd43d8255bbc81",
        "type": "function",
        "z": "95249172.4f419",
        "name": "",
        "func": "let device = msg.device;\nlet z2m = device.z2m.z2m;\nz2m.datafile = z2m.datafile || {};\nz2m.datafile[z2m.configfile] = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 820,
        "wires": [
            [
                "0c5ad8a0c21631aa"
            ]
        ]
    },
    {
        "id": "0c5ad8a0c21631aa",
        "type": "function",
        "z": "95249172.4f419",
        "name": "写配置文件",
        "func": "let z2m = msg.device.z2m.z2m;\nlet datafile = msg.device.z2m.z2m.datafile || msg.device.z2m.z2m.defaultDatafile;\nlet filename = z2m.configfile;\nif (datafile && datafile[filename]) {\n    let config = datafile[filename];\n    config.mqtt = z2m.configuration.mqtt;\n    config.serial = z2m.configuration.serial;\n    config.frontend = z2m.configuration.frontend;\n    \n    msg.filename = z2m.configfullfile;\n    msg.payload = datafile[filename];\n    return msg;  \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 860,
        "wires": [
            [
                "29d7bc0ce9adf4c3"
            ]
        ]
    },
    {
        "id": "e1c7d0801e4969d2",
        "type": "file",
        "z": "95249172.4f419",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1020,
        "y": 860,
        "wires": [
            [
                "f811af1c9437ea6d"
            ]
        ]
    },
    {
        "id": "29d7bc0ce9adf4c3",
        "type": "yaml",
        "z": "95249172.4f419",
        "property": "payload",
        "name": "",
        "x": 870,
        "y": 860,
        "wires": [
            [
                "e1c7d0801e4969d2"
            ]
        ]
    },
    {
        "id": "8f945fdc1ab78574",
        "type": "function",
        "z": "95249172.4f419",
        "name": "缓存至队列",
        "func": "let queue = flow.get(\"z2mWaitQueue\") || {};\nqueue[msg.device.id] = msg;\nflow.set(\"z2mWaitQueue\", queue)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1120,
        "wires": [
            [
                "c29a577.4922ba8",
                "221a6fa46f68d798"
            ]
        ]
    },
    {
        "id": "5955260e9fe173e8",
        "type": "function",
        "z": "95249172.4f419",
        "name": "更新状态",
        "func": "let common = global.get(\"common\");\nlet device = common.setZ2MStatus(msg.device.id, \"killed\");\nmsg.device = device;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1680,
        "wires": [
            [
                "138da46316ede501"
            ]
        ]
    },
    {
        "id": "befe5b1ac4389423",
        "type": "link out",
        "z": "95249172.4f419",
        "name": "",
        "mode": "link",
        "links": [
            "f4460e5db856239e"
        ],
        "x": 1175,
        "y": 680,
        "wires": []
    },
    {
        "id": "7c34d2644f86076f",
        "type": "function",
        "z": "95249172.4f419",
        "name": "需要重启？",
        "func": "let data = global.get(\"data\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet device = data.devices[pld.id];\nlet z2m = device.z2m;\nif (pld.handshake_count == 0 ||\n    !z2m || !z2m.running || !z2m.running()) {\n    msg.device = device\n    return msg;        \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 100,
        "wires": [
            [
                "f1a6eb115fd88a36"
            ]
        ]
    },
    {
        "id": "3aae7033fe07259c",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 740,
        "wires": []
    },
    {
        "id": "dc8cc2b55ea3047f",
        "type": "switch",
        "z": "95249172.4f419",
        "name": "Z2M未启动?",
        "property": "device.z2m.z2m.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "running",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 1520,
        "wires": [
            [
                "67d7f878.3c3c08",
                "2fa53b7.d29f1c4"
            ]
        ]
    },
    {
        "id": "f1a6eb115fd88a36",
        "type": "switch",
        "z": "95249172.4f419",
        "name": "有无配置文件？",
        "property": "device.z2m.z2m.datafile",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "device.z2m.z2m.configfile",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 900,
        "y": 100,
        "wires": [
            [
                "74dcdef0a677e6c5"
            ],
            [
                "ee014620f54577ec",
                "2bfd8f403f1ee462"
            ]
        ]
    },
    {
        "id": "ee014620f54577ec",
        "type": "link out",
        "z": "95249172.4f419",
        "name": "",
        "mode": "link",
        "links": [
            "04d3f9487a2fb418"
        ],
        "x": 1175,
        "y": 100,
        "wires": []
    },
    {
        "id": "513b3d3f8ecdd3f3",
        "type": "link in",
        "z": "95249172.4f419",
        "name": "已获取Z2M文件",
        "links": [
            "d02853ba90eee1de",
            "aa5978ed114d3a14"
        ],
        "x": 135,
        "y": 160,
        "wires": [
            [
                "f6e6b79444715553"
            ]
        ]
    },
    {
        "id": "e95eb997e17b4dca",
        "type": "switch",
        "z": "95249172.4f419",
        "name": "有无配置文件？",
        "property": "device.z2m.z2m.datafile",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "device.z2m.z2m.configfile",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 900,
        "y": 160,
        "wires": [
            [
                "74dcdef0a677e6c5"
            ],
            [
                "2424915cd59d9274"
            ]
        ]
    },
    {
        "id": "f6e6b79444715553",
        "type": "function",
        "z": "95249172.4f419",
        "name": "需要重启？",
        "func": "let data = global.get(\"data\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet device = data.devices[pld.id];\nif (device) {\n    let z2m = device.z2m;\n    if (pld.handshake_count == 0 ||\n        !z2m || !z2m.running || !z2m.running()) {\n        msg.device = device\n        return msg;        \n    }\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 160,
        "wires": [
            [
                "e95eb997e17b4dca",
                "4837b9c47424b3f2"
            ]
        ]
    },
    {
        "id": "74dcdef0a677e6c5",
        "type": "change",
        "z": "95249172.4f419",
        "name": "重启",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 140,
        "wires": [
            [
                "a7b7f33e.4f6d6"
            ]
        ]
    },
    {
        "id": "4837b9c47424b3f2",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "device",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 200,
        "wires": []
    },
    {
        "id": "259011be7bbb4ede",
        "type": "function",
        "z": "95249172.4f419",
        "name": "初始化设备数据",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet did = pld.id;\n\ncommon.initZ2MDevice(did);\n\nmsg.device = data.devices[did];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 100,
        "wires": [
            [
                "7c34d2644f86076f"
            ]
        ]
    },
    {
        "id": "138da46316ede501",
        "type": "function",
        "z": "95249172.4f419",
        "name": "握手请求",
        "func": "\nreturn {\n    payload: {\n        id:  msg.device.id\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1680,
        "wires": [
            [
                "62b3ca59dea6f8fb"
            ]
        ]
    },
    {
        "id": "62b3ca59dea6f8fb",
        "type": "link out",
        "z": "95249172.4f419",
        "name": "握手请求",
        "mode": "link",
        "links": [
            "8b0eacacfd0fe129",
            "b784350e948a9e8b"
        ],
        "x": 1045,
        "y": 1680,
        "wires": []
    },
    {
        "id": "20f49d8e60d749d6",
        "type": "link out",
        "z": "95249172.4f419",
        "name": "",
        "mode": "link",
        "links": [
            "b628b7caedd1cf93"
        ],
        "x": 545,
        "y": 40,
        "wires": []
    },
    {
        "id": "2424915cd59d9274",
        "type": "switch",
        "z": "95249172.4f419",
        "name": "有无默认配置文件？",
        "property": "device.z2m.z2m.defaultDatafile",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "device.z2m.z2m.configfile",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 920,
        "y": 220,
        "wires": [
            [
                "74dcdef0a677e6c5"
            ],
            []
        ]
    },
    {
        "id": "ee2bd2515d7bd294",
        "type": "function",
        "z": "95249172.4f419",
        "name": "写备份文件",
        "func": "let z2m = msg.device.z2m.z2m;\nlet datafile = msg.device.z2m.z2m.datafile || msg.device.z2m.z2m.defaultDatafile;\nlet filename = z2m.databasefile;\nif (datafile && datafile[filename]) {\n    //有数据库缓存\n    msg.filename = z2m.databasefullfile;\n    msg.payload = datafile[filename];\n    return [msg, null];  \n} else {\n    //无数据库缓存\n    return [null, msg]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 960,
        "wires": [
            [],
            [
                "8f945fdc1ab78574"
            ]
        ]
    },
    {
        "id": "c46dc8ef2e104b76",
        "type": "file",
        "z": "95249172.4f419",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1020,
        "y": 920,
        "wires": [
            [
                "fc08116e70d8f40f"
            ]
        ]
    },
    {
        "id": "221a6fa46f68d798",
        "type": "trigger",
        "z": "95249172.4f419",
        "name": "",
        "op1": "0",
        "op2": "1",
        "op1type": "str",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 260,
        "y": 1180,
        "wires": [
            [],
            [
                "748851f3c3edba06"
            ]
        ]
    },
    {
        "id": "748851f3c3edba06",
        "type": "function",
        "z": "95249172.4f419",
        "name": "取队列",
        "func": "let queue = flow.get(\"z2mWaitQueue\") || {};\nlet keys = Object.keys(queue);\n\nlet _msg;\nkeys.every(key => {\n    _msg = queue[key];\n    let device = _msg.device;\n    let z2m = device.z2m.z2m;    \n    if (!z2m.status || z2m.status == \"killed\" ) {\n        //Z2M已停止\n        delete queue[key];\n        return false;\n    } else {\n        //Z2M未停止\n        _msg = null;\n        return true;\n    }\n})\n\nif (_msg) {\n    return [null, _msg];\n} else {\n    return [_msg, null]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1180,
        "wires": [
            [
                "8f945fdc1ab78574"
            ],
            [
                "a8206207.d4a2f"
            ]
        ]
    },
    {
        "id": "f811af1c9437ea6d",
        "type": "function",
        "z": "95249172.4f419",
        "name": "初始化",
        "func": "msg.device.z2m.z2m.backfiles = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 920,
        "wires": [
            [
                "fc08116e70d8f40f"
            ]
        ]
    },
    {
        "id": "fc08116e70d8f40f",
        "type": "function",
        "z": "95249172.4f419",
        "name": "写备份文件",
        "func": "let device = msg.device;\nlet z2m = device.z2m.z2m;\nlet result = true;\nObject.keys(z2m.datafile || {}).every(key => {\n    if (key != z2m.configfile && (!z2m.backfiles.hasOwnProperty(key))) {\n        let pld = z2m.datafile[key];\n        z2m.backfiles[key] = pld;\n        if (pld) {\n            result = false;\n            let _msg = {\n                filename: z2m.datadir + \"/\" + key,\n                payload: pld,\n                shortfilename: key,\n                device: device\n            }\n            node.send([_msg, null])\n            return false;\n        }\n    }\n    \n    return true;\n    \n})\n\nif (result) {\n    //加载完成\n    return [null, msg]\n    \n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 920,
        "wires": [
            [
                "c46dc8ef2e104b76"
            ],
            [
                "8f945fdc1ab78574"
            ]
        ]
    },
    {
        "id": "1cdb31d6b687bda6",
        "type": "switch",
        "z": "95249172.4f419",
        "name": "是否Z3协调器",
        "property": "payload.pld.model",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Z3CO2652ESP8266",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 300,
        "y": 260,
        "wires": [
            [
                "7f4b947e280345b6"
            ],
            []
        ]
    },
    {
        "id": "7f4b947e280345b6",
        "type": "function",
        "z": "95249172.4f419",
        "name": "需要重启？",
        "func": "let data = global.get(\"data\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet device = data.devices[pld.id];\nlet z2m = device.z2m;\nif (pld.handshake_count == 0 ||\n    !z2m || !z2m.running || !z2m.running()) {\n    msg.device = device\n    return msg;        \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 260,
        "wires": [
            [
                "48fb2801f38009e5"
            ]
        ]
    },
    {
        "id": "6619a733042257d7",
        "type": "link in",
        "z": "95249172.4f419",
        "name": "上报检测",
        "links": [
            "1844f69659f40c71"
        ],
        "x": 135,
        "y": 260,
        "wires": [
            [
                "1cdb31d6b687bda6"
            ]
        ]
    },
    {
        "id": "48fb2801f38009e5",
        "type": "function",
        "z": "95249172.4f419",
        "name": "握手请求",
        "func": "\nreturn {\n    payload: {\n        id:  msg.device.id\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 260,
        "wires": [
            [
                "7491a8dc5781b402",
                "6d1194edab83f92f"
            ]
        ]
    },
    {
        "id": "7491a8dc5781b402",
        "type": "link out",
        "z": "95249172.4f419",
        "name": "握手请求",
        "mode": "link",
        "links": [
            "8b0eacacfd0fe129"
        ],
        "x": 1165,
        "y": 260,
        "wires": []
    },
    {
        "id": "6d1194edab83f92f",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 360,
        "wires": []
    },
    {
        "id": "2bfd8f403f1ee462",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 60,
        "wires": []
    },
    {
        "id": "943d31abebb6e73f",
        "type": "nd-set-env",
        "z": "95249172.4f419",
        "name": "",
        "x": 480,
        "y": 1620,
        "wires": [
            [
                "896f46b2.ba73b8"
            ]
        ]
    },
    {
        "id": "341b08e05963a500",
        "type": "function",
        "z": "95249172.4f419",
        "name": "转字符",
        "func": "msg.payload = msg.payload.toString()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1620,
        "wires": [
            [
                "ed1e7b9dbdb2efba"
            ]
        ]
    },
    {
        "id": "ed1e7b9dbdb2efba",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1620,
        "wires": []
    },
    {
        "id": "17a6d87202b7967e",
        "type": "comment",
        "z": "02363c72749a98be",
        "name": "Z2M消息处理",
        "info": "",
        "x": 170,
        "y": 120,
        "wires": []
    },
    {
        "id": "1c893e7137666c65",
        "type": "link in",
        "z": "02363c72749a98be",
        "name": "",
        "links": [
            "d5520896f23cdeb4"
        ],
        "x": 145,
        "y": 180,
        "wires": [
            [
                "f87edfed5b246e21"
            ]
        ]
    },
    {
        "id": "f87edfed5b246e21",
        "type": "function",
        "z": "02363c72749a98be",
        "name": "主题数组",
        "func": "msg.topics = msg.topic.split(\"/\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 180,
        "wires": [
            [
                "30ed05f19c96563a"
            ]
        ]
    },
    {
        "id": "30ed05f19c96563a",
        "type": "switch",
        "z": "02363c72749a98be",
        "name": "",
        "property": "topics[1]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "bridge",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 150,
        "y": 580,
        "wires": [
            [
                "eea537c107f01c77"
            ],
            [
                "754c728a4022a0a5"
            ]
        ]
    },
    {
        "id": "292188c3915691f6",
        "type": "switch",
        "z": "02363c72749a98be",
        "name": "消息类型",
        "property": "topics[2]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "event",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "response",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 500,
        "y": 400,
        "wires": [
            [
                "ae5c8f54ba488d8e"
            ],
            [
                "c59f99a72669659e",
                "1398e2fd637fae3f"
            ],
            []
        ]
    },
    {
        "id": "ae5c8f54ba488d8e",
        "type": "function",
        "z": "02363c72749a98be",
        "name": "状态",
        "func": "let device = msg.device\nif (device) {\n    let z2m = device.z2m && device.z2m.z2m;\n    if (z2m) {\n        z2m.online = msg.payload == \"online\" ? 1 : 0;\n        if ( z2m.online)\n            z2m.online_count = z2m.online_count ? (z2m.online_count + 1) : 1;\n        else\n            z2m.offline_count = z2m.offline_count ? (z2m.offline_count + 1) : 1;\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 260,
        "wires": [
            [
                "fb44d80efd918ade",
                "d30874e085dcd69d"
            ]
        ]
    },
    {
        "id": "d30874e085dcd69d",
        "type": "debug",
        "z": "02363c72749a98be",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 160,
        "wires": []
    },
    {
        "id": "6a6d241273101adb",
        "type": "function",
        "z": "02363c72749a98be",
        "name": "属性上报",
        "func": "let data = global.get(\"data\");\n\nlet ids = Object.assign({}, data.ids);\nids.dev = msg.topics[1];\nids.pdev = msg.topics[0];\ndelete ids.mqtt;\n\nlet hd =  {\n    from: {\n        type: \"dev\",\n        id: ids.dev,\n        pid: ids.pdev\n    },\n    to: {\n        type: \"edg\",\n        id: data.ids.edg\n    },\n    entry: {\n        type: \"evt\",\n        id: \"report\"\n    },\n    ids: ids\n};\n\n\n\nlet pld = msg.payload;\n\n\nreturn {\n    payload:{\n        hd: hd,\n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 760,
        "wires": [
            [
                "030bc786674d7e65",
                "cecd0debcb823e0f"
            ]
        ]
    },
    {
        "id": "754c728a4022a0a5",
        "type": "json",
        "z": "02363c72749a98be",
        "name": "子设备",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 760,
        "wires": [
            [
                "6a6d241273101adb"
            ]
        ]
    },
    {
        "id": "030bc786674d7e65",
        "type": "debug",
        "z": "02363c72749a98be",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 820,
        "wires": []
    },
    {
        "id": "cecd0debcb823e0f",
        "type": "link out",
        "z": "02363c72749a98be",
        "name": "",
        "mode": "link",
        "links": [
            "f4460e5db856239e"
        ],
        "x": 675,
        "y": 760,
        "wires": []
    },
    {
        "id": "fb44d80efd918ade",
        "type": "switch",
        "z": "02363c72749a98be",
        "name": "上线",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "online",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 990,
        "y": 240,
        "wires": [
            [
                "576e43c4c093d86f"
            ]
        ]
    },
    {
        "id": "8ffe717629a8bf5f",
        "type": "link out",
        "z": "02363c72749a98be",
        "name": "",
        "mode": "link",
        "links": [
            "93b0b280ccede552"
        ],
        "x": 1445,
        "y": 300,
        "wires": []
    },
    {
        "id": "39026b74247d659f",
        "type": "switch",
        "z": "02363c72749a98be",
        "name": "事件",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "device_interview",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "device_announce",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "device_leave",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "device_joined",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 790,
        "y": 400,
        "wires": [
            [
                "132bc6ac97ce0bae"
            ],
            [
                "106e892cd5b15369"
            ],
            [
                "04a70e960eff791a"
            ],
            [
                "cdc5c51826b2cc7c"
            ]
        ]
    },
    {
        "id": "04a70e960eff791a",
        "type": "change",
        "z": "02363c72749a98be",
        "name": "device_leave",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 440,
        "wires": [
            [
                "6fc378926c28e0bd",
                "8c0daf9769535c9e",
                "4c8296c42e885144"
            ]
        ]
    },
    {
        "id": "106e892cd5b15369",
        "type": "change",
        "z": "02363c72749a98be",
        "name": "device_announce",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 400,
        "wires": [
            [
                "6fc378926c28e0bd",
                "8c0daf9769535c9e",
                "4c8296c42e885144"
            ]
        ]
    },
    {
        "id": "bc35260b44f4813e",
        "type": "switch",
        "z": "02363c72749a98be",
        "name": "服务响应",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "response/permit_join",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "response/device/remove",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 780,
        "y": 580,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "cdc5c51826b2cc7c",
        "type": "change",
        "z": "02363c72749a98be",
        "name": "device_joined",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 480,
        "wires": [
            [
                "6fc378926c28e0bd",
                "8c0daf9769535c9e",
                "4c8296c42e885144"
            ]
        ]
    },
    {
        "id": "35bccd8642b6162c",
        "type": "comment",
        "z": "02363c72749a98be",
        "name": "PUSH消息处理",
        "info": "",
        "x": 160,
        "y": 1020,
        "wires": []
    },
    {
        "id": "7e11c0dae412283f",
        "type": "link in",
        "z": "02363c72749a98be",
        "name": "PUSH消息输入",
        "links": [
            "6c4ee2bf37a492ba"
        ],
        "x": 115,
        "y": 1240,
        "wires": [
            [
                "4690f1991179454d"
            ]
        ]
    },
    {
        "id": "4690f1991179454d",
        "type": "function",
        "z": "02363c72749a98be",
        "name": "设备服务请求",
        "func": "let hd = msg.payload.hd;\nif (hd.stp == 0 && hd.entry.type == \"svc\" && hd.to.type == \"dev\" ) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1240,
        "wires": [
            [
                "23bd62cf07c48bc9"
            ]
        ]
    },
    {
        "id": "4461487986d16c78",
        "type": "function",
        "z": "02363c72749a98be",
        "name": "协调器",
        "func": "let _hd = Object.assign({}, msg.payload.hd);\nlet _pld = Object.assign({}, msg.payload.pld);\n\nlet topic = _hd.to.id + \"/bridge\" + \n            (_hd.entry.id ?  (\"/\" + _hd.entry.id) : \"\") +\n            (_hd.entry.func ?  (\"/\" + _hd.entry.func) : \"\");\n_pld.transaction = _hd.sid;\nreturn {\n    topic: topic,\n    payload: _pld,\n    _payload: msg.payload\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1200,
        "wires": [
            [
                "a8a2be716f1d660d",
                "25103be1987c2f5a",
                "f25337acd3b44472"
            ]
        ]
    },
    {
        "id": "bd7434e48a772de3",
        "type": "function",
        "z": "02363c72749a98be",
        "name": "子设备",
        "func": "let _hd = Object.assign({}, msg.payload.hd);\nlet _pld = Object.assign({}, msg.payload.pld);\n\nlet pid = _hd.to.pid ? _hd.to.pid : _hd.to.id;\nlet id = _hd.to.cid ? _hd.to.cid : _hd.to.id;\n\nlet topic = pid + \"/\" + id +  \n            (_hd.entry.func ?  (\"/\" + _hd.entry.func) : \"\") ;\n\nreturn {\n    topic: topic,\n    payload: _pld,\n    _payload: msg.payload\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1280,
        "wires": [
            [
                "a8a2be716f1d660d",
                "f25337acd3b44472",
                "1dee194274a7a071"
            ]
        ]
    },
    {
        "id": "a8a2be716f1d660d",
        "type": "link out",
        "z": "02363c72749a98be",
        "name": "",
        "mode": "link",
        "links": [
            "64ae5c8b47fafc17"
        ],
        "x": 945,
        "y": 1240,
        "wires": []
    },
    {
        "id": "25103be1987c2f5a",
        "type": "debug",
        "z": "02363c72749a98be",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1180,
        "wires": []
    },
    {
        "id": "23bd62cf07c48bc9",
        "type": "function",
        "z": "02363c72749a98be",
        "name": "是否协调器",
        "func": "let hd = msg.payload.hd;\nif (hd.to.id && !hd.to.cid && !hd.to.pid) {\n    return [msg, null];\n} else {\n    return [null, msg];    \n    \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1240,
        "wires": [
            [
                "4461487986d16c78"
            ],
            [
                "bd7434e48a772de3"
            ]
        ]
    },
    {
        "id": "75a283974a7bd0cd",
        "type": "trigger",
        "z": "02363c72749a98be",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "pay",
        "duration": "10",
        "extend": true,
        "overrideDelay": true,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 2,
        "x": 1080,
        "y": 1120,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f25337acd3b44472",
        "type": "function",
        "z": "02363c72749a98be",
        "name": "等待响应队列",
        "func": "let topic = msg.payload.transaction;\nif (topic) {\n    return {\n        topic: topic,\n        payload: msg\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 1120,
        "wires": [
            [
                "75a283974a7bd0cd"
            ]
        ]
    },
    {
        "id": "132bc6ac97ce0bae",
        "type": "change",
        "z": "02363c72749a98be",
        "name": "device_interview",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 360,
        "wires": [
            [
                "6fc378926c28e0bd",
                "8c0daf9769535c9e",
                "4c8296c42e885144"
            ]
        ]
    },
    {
        "id": "6fc378926c28e0bd",
        "type": "debug",
        "z": "02363c72749a98be",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 580,
        "wires": []
    },
    {
        "id": "c59f99a72669659e",
        "type": "debug",
        "z": "02363c72749a98be",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 500,
        "wires": []
    },
    {
        "id": "1398e2fd637fae3f",
        "type": "json",
        "z": "02363c72749a98be",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 400,
        "wires": [
            [
                "39026b74247d659f"
            ]
        ]
    },
    {
        "id": "eea537c107f01c77",
        "type": "function",
        "z": "02363c72749a98be",
        "name": "协调器",
        "func": "let data = global.get(\"data\");\nlet device = data.devices[msg.topics[0]];\nmsg.device = device;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 460,
        "wires": [
            [
                "292188c3915691f6"
            ]
        ]
    },
    {
        "id": "1dee194274a7a071",
        "type": "debug",
        "z": "02363c72749a98be",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1360,
        "wires": []
    },
    {
        "id": "8c0daf9769535c9e",
        "type": "function",
        "z": "02363c72749a98be",
        "name": "发布事件",
        "func": "let data = global.get(\"data\");\n\nlet _hd = {\n    from: {\n        type: \"dev\",\n        id: msg.topics[0],\n        cid: msg.payload.data.ieee_address\n    },\n    to: {\n        type: \"dio\",\n        id: data.ids.dio\n    },\n    entry: {\n        type: \"evt\",\n        id: msg.payload.type\n    }\n}\nlet _pld = msg.payload;\n\nreturn {\n    payload: {\n        hd: _hd,\n        pld: _pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 460,
        "wires": [
            [
                "f25dd30a6d3bf86b"
            ]
        ]
    },
    {
        "id": "f25dd30a6d3bf86b",
        "type": "link out",
        "z": "02363c72749a98be",
        "name": "",
        "mode": "link",
        "links": [
            "f4460e5db856239e"
        ],
        "x": 1445,
        "y": 460,
        "wires": []
    },
    {
        "id": "4c8296c42e885144",
        "type": "function",
        "z": "02363c72749a98be",
        "name": "设置Z2M数据",
        "func": "let _msg = Object.assign({}, msg);\n_msg.topic = msg.topics[0]\nreturn _msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 300,
        "wires": [
            [
                "8ffe717629a8bf5f"
            ]
        ]
    },
    {
        "id": "576e43c4c093d86f",
        "type": "function",
        "z": "02363c72749a98be",
        "name": "是否需要上传？",
        "func": "let device = msg.device\nif (device) {\n    let z2m = device.z2m && device.z2m.z2m;\n    if (z2m && z2m.online_count <=2) {\n        return msg;\n    }\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 240,
        "wires": [
            [
                "4c8296c42e885144"
            ]
        ]
    }
]