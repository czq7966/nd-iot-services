[
    {
        "id": "7c7a09edf982e2f4",
        "type": "tab",
        "label": "全局配置(边缘)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e93bbc67912b9178",
        "type": "tab",
        "label": "订阅/发布",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "46a5ba0d798d87c3",
        "type": "tab",
        "label": "接口调用",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f7e96a32e56d72eb",
        "type": "tab",
        "label": "接口处理",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "95249172.4f419",
        "type": "tab",
        "label": "Z2M服务",
        "disabled": false,
        "info": ""
    },
    {
        "id": "02363c72749a98be",
        "type": "tab",
        "label": "Z2M消息处理",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "73824c52c204153b",
        "type": "mqtt-broker",
        "name": "push",
        "broker": "push-access.sdp.101.com",
        "port": "1780",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "2",
        "birthRetain": "true",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "2",
        "willRetain": "true",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "562dca499de9d04d",
        "type": "mqtt-broker",
        "name": "z2m",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "f544f205.d51a7",
        "type": "inject",
        "z": "7c7a09edf982e2f4",
        "name": "初始化",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "52f82eb73840e302"
            ]
        ]
    },
    {
        "id": "d6802406.a5a078",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "数据",
        "rules": [
            {
                "t": "set",
                "p": "data",
                "pt": "global",
                "to": "{\"app\":{\"ndiot\":{\"id\":\"ndiot\",\"name\":\"网龙物联网\",\"domain\":{\"nd\":{\"id\":\"nd\",\"name\":\"网龙公司\",\"dispatchers\":{\"nd\":{\"name\":\"调度器\",\"events\":{},\"edges\":{\"xxxx\":{\"id\":\"\",\"name\":\"边缘服务\",\"events\":{\"login\":{},\"heartbeat\":{}},\"devices\":{}}},\"devices\":{},\"topics\":{\"subs\":{\"dev_evt_report\":\"{app}/{dom}/dev/+/edg/{edg}/evt/report\",\"dsp_evt_status\":\"{app}/{dom}/dsp/{dsp}/0/0/evt/status\"},\"dysubs\":{\"dev_evt_status\":\"{app}/{dom}/dev/{dev}/0/0/evt/status\",\"dev_evt_penet\":\"{app}/{dom}/dev/{dev}/edg/{edg}/evt/penet\"},\"services\":{\"edg_svc_login\":\"{app}/{dom}/dsp/{dsp}/edg/{edg}/svc/login\",\"edg_svc_handshake\":\"{app}/{dom}/dev/+/edg/{edg}/svc/handshake\",\"edg_svc_get_z2m_datafile\":\"{app}/{dom}/dsp/{dsp}/edg/{edg}/svc/get_z2m_datafile\",\"edg_svc_set_z2m_datafile\":\"{app}/{dom}/dsp/{dsp}/edg/{edg}/svc/set_z2m_datafile\"},\"pubs\":{\"dsp_svc_login\":\"login\",\"dsp_svc_get_z2m_datafile\":\"get_z2m_datafile\",\"dsp_svc_set_z2m_datafile\":\"set_z2m_datafile\",\"edg_evt_status\":\"status\",\"dev_svc_get\":\"get\",\"dev_svc_set\":\"set\",\"dev_svc_penet\":\"penet\",\"dev_svc_handshake\":\"handshake\"}}}}}}}},\"disps\":{},\"edges\":{},\"devices\":{},\"topics\":{},\"ids\":{}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "common",
                "pt": "global",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "ids",
                "pt": "global",
                "to": "{\"app\":\"ndiot\",\"dom\":\"nd\",\"dsp\":\"nd\",\"edg\":\"{HOSTNAME}\",\"mqtt\":\"{app}_{dom}_edg_{edg}\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 1180,
        "wires": [
            [
                "49c8c1cb0342d9c7"
            ]
        ]
    },
    {
        "id": "52f82eb73840e302",
        "type": "OS",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "x": 270,
        "y": 100,
        "wires": [
            [
                "705cd1a4e7548610"
            ]
        ]
    },
    {
        "id": "705cd1a4e7548610",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "OS",
        "rules": [
            {
                "t": "set",
                "p": "os",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 100,
        "wires": [
            [
                "c27b74647cc92e82"
            ]
        ]
    },
    {
        "id": "c27b74647cc92e82",
        "type": "home-dir",
        "z": "7c7a09edf982e2f4",
        "x": 560,
        "y": 100,
        "wires": [
            [
                "3e822ed879b8777e"
            ]
        ]
    },
    {
        "id": "3e822ed879b8777e",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "datadir",
        "rules": [
            {
                "t": "set",
                "p": "os.datadir",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 100,
        "wires": [
            [
                "a6a4ebf94a8b8924"
            ]
        ]
    },
    {
        "id": "f70a2bb4819417da",
        "type": "link out",
        "z": "7c7a09edf982e2f4",
        "name": "配置完成",
        "mode": "link",
        "links": [
            "3fdb98726d73125a",
            "906bb62a708b4c0c"
        ],
        "x": 825,
        "y": 560,
        "wires": []
    },
    {
        "id": "4aa5b949a197bcb7",
        "type": "inject",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "data",
        "payloadType": "global",
        "x": 180,
        "y": 1060,
        "wires": [
            [
                "61299e55f08ac3e1"
            ]
        ]
    },
    {
        "id": "61299e55f08ac3e1",
        "type": "debug",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 1060,
        "wires": []
    },
    {
        "id": "5aa147a907c230dc",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "缓存数据函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet online = function(){\n    let events = this.events;\n    if (events && events.status)\n        return events.status.pld.online;\n    return 0;\n}\n\nlet cachePayload = function(payload) {\n    let hd = payload.hd;\n    let pld = payload.pld;\n    if (hd.from.type == \"dev\") {\n        let dev = data.devices[hd.from.id] || {events:{}};\n        dev.id = hd.from.id;\n        if (hd.from.pid)\n            dev.pid = hd.from.pid;\n        dev.events[hd.entry.id] = payload;\n        dev.online = online;\n        data.devices[hd.from.id] = dev;\n    }\n    \n    if (hd.from.type == \"dsp\" ) {\n        if (hd.entry.type == \"evt\"){\n            let dsp = data.disps[hd.from.id];\n            dsp.events = dsp.events || {};\n            dsp.events[hd.entry.id] = payload;\n            dsp.online = online;\n        }\n    }\n}\n\ncommon.cachePayload = cachePayload;\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1300,
        "wires": [
            [
                "8a150c4e39780822"
            ]
        ]
    },
    {
        "id": "8f9fd53894d1e41e",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "展开主题函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet ids = global.get(\"ids\");\n\n\nlet expandTopic = {\n    expandStr : function(v, devId) {\n        if (typeof v == \"string\") {\n            v = v.replace(/\\{app\\}/g, ids.app);\n            v = v.replace(/\\{dom\\}/g, ids.dom);\n            v = v.replace(/\\{dsp\\}/g, ids.dsp);\n            v = v.replace(/\\{edg\\}/g, ids.edg);\n            if (devId)\n                v = v.replace(/\\{dev\\}/g, devId);\n        }\n        return v;\n    },\n    expandArray : function(v, devId) {\n        if (Array.isArray(v)) {\n            for(let i=0; i < v.length; i++) {\n                v[i] = this.expand(v[i], devId);\n            }\n        }\n        return arr;\n    },\n    expandObj : function(v, devId) {\n        if (typeof v == \"object\") {\n            let keys = Object.keys(v);\n            keys.forEach(k => {\n                v[k] = this.expand(v[k], devId);\n            });\n        }\n        return v;        \n    },\n    expand : function(v, devId) {\n        if (typeof v == \"string\")\n            v = this.expandStr(v, devId);\n                    \n        if (Array.isArray(v)) {\n            v = expandArray(v, devId);\n        }\n        \n        if (typeof v == \"object\") {\n            v = this.expandObj(v, devId)\n        }\n                \n        return v\n    }\n}\n    \n\n\ncommon.expandTopic = expandTopic;\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1240,
        "wires": [
            [
                "5aa147a907c230dc"
            ]
        ]
    },
    {
        "id": "49c8c1cb0342d9c7",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "数据初始化",
        "func": "let data = global.get(\"data\");\nlet ids = global.get(\"ids\");\nlet host = env.get(\"HOSTNAME\") || env.get(\"COMPUTERNAME\");\nids.edg = ids.edg.replace(\"{HOSTNAME}\", host);\n\nlet app = data.app[ids.app];\nlet dom = app.domain[ids.dom];\nlet dsp = dom.dispatchers[ids.dsp];\nlet edg = dsp.edges[ids.edg] || {events: {}, devices:{}};\ndsp.edges[ids.edg] = edg;\n\napp.id = ids.app;\ndom.id = ids.dom;\ndsp.id = ids.dsp;\nedg.id = ids.edg;\n\ndata.disps = dom.dispatchers;\ndata.edges = dsp.edges;\ndata.devices = dsp.devices;\ndata.topics = dsp.topics;\ndata.ids = ids;\n\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1180,
        "wires": [
            [
                "8f9fd53894d1e41e"
            ]
        ]
    },
    {
        "id": "9dbcf892f20005a9",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "数据补全",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n    \ncommon.expandTopic.expand(data.topics);\ncommon.expandTopic.expand(data.ids);\ncommon.keyToObjId(data.edges);\ncommon.keyToObjId(data.devices);\n\n\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1580,
        "wires": [
            [
                "e73c2d75462f2932"
            ]
        ]
    },
    {
        "id": "8a150c4e39780822",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "键值转ID函数",
        "func": "let common = global.get(\"common\");\n\nlet keyToObjId = function(objs) {\n        let keys = Object.keys(objs);\n        keys.forEach(key => {\n            let obj = objs[key];\n            if (typeof obj == \"object\") \n                obj.id = key;\n        })        \n    }\n\n\ncommon.keyToObjId = keyToObjId;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1360,
        "wires": [
            [
                "d76bcc652b9720ca"
            ]
        ]
    },
    {
        "id": "d76bcc652b9720ca",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "获取HD主题函数",
        "func": "let common = global.get(\"common\");\nlet ids = global.get(\"data\").ids;\n\nlet getHDTopic = function(hd) {\n    let tpc = \"\";\n    if (!hd.from) hd.from = {};\n    if (!hd.from.type) hd.from.type = \"edg\";\n    if (!hd.from.id) hd.from.id = ids.edg;\n    if (!hd.to.type) hd.to.type = \"0\";\n    if (!hd.to.id) hd.to.id = \"0\";\n    if (!hd.entry.type) hd.entry.type = \"0\";\n    if (!hd.entry.id) hd.entry.id = \"0\";\n    if (!hd.sid) hd.sid = \"0\";\n    if (!hd.stp) hd.stp = 0;\n\n\n    tpc =   ids.app + \"/\" + ids.dom + \"/\" + \n            hd.from.type + \"/\" + hd.from.id + \"/\" + \n            hd.to.type + \"/\" + hd.to.id + \"/\" + \n            hd.entry.type + \"/\" + hd.entry.id;\n    return tpc;\n}\n\n\ncommon.getHDTopic = getHDTopic;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1420,
        "wires": [
            [
                "ac6d7c74caa09efb"
            ]
        ]
    },
    {
        "id": "e73c2d75462f2932",
        "type": "debug",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 1600,
        "wires": []
    },
    {
        "id": "ac6d7c74caa09efb",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "Z3协调器初始化函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet os = global.get(\"os\");\nlet devices = data.devices;\nlet topics = data.topics;\nlet tcpPort = 18190;\nlet z2mDir = os.datadir + \"/../../../../zigbee2mqtt\"\n\nlet running = function() {\n    return  this.z2m && this.z2m.status && \n            (this.z2m.status == \"running\" || this.z2m.status == \"online\")\n}\n\nlet setDevice = (device, tcpPort) => {\n    let dataDir = z2mDir + \"/data/\" + device.id; \n    let execStr = \"cd \" + z2mDir;\n    if (os.platform == \"win32\"){\n        execStr =execStr + \"&& set ZIGBEE2MQTT_DATA=\" + dataDir;\n        execStr =execStr + \"&& npm start\";\n    }\n\n    let z2m = device.z2m || {};\n    z2m.tcp = {\n            port: tcpPort,\n            status: null\n        };\n    z2m.z2m = {\n            configuration: {\n                mqtt: {\n                    base_topic: device.id,\n                    server: \"mqtt://127.0.0.1:1883\",\n                    user: \"device\"\n                },\n                serial: {\n                    port: \"tcp://127.0.0.1:\" + tcpPort\n                },\n                frontend: {\n                    port: tcpPort - 100\n                }\n            },\n            topics: {\n                sub: common.expandTopic.expand(topics.dysubs.dev_evt_raw, device.id),\n                pub: common.getHDTopic({to: {type: \"dev\", id: device.id}, \n                                        entry: {type: \"svc\", id: topics.pubs.dev_svc_raw}})\n            },\n            datadir: dataDir,\n            configfile: \"configuration.yaml\",\n            configfullfile: dataDir + \"/configuration.yaml\",\n            databasefile: \"database.db\",\n            databasefullfile: dataDir + \"/database.db\",\n            exec: execStr,\n            status: null,\n            datafile: z2m.z2m && z2m.z2m.datafile\n        };\n    z2m.running = running;\n    device.z2m = z2m;\n}\n\n\nlet initZ2MDevice = function(did) {\n    let device = devices[did];\n    if (device && (!device.z2m || !device.z2m.tcp || !device.z2m.z2m)) {\n        setDevice(device, tcpPort++);\n    }\n    \n    return device;\n}\n\n\nlet getZ2MStatus = function(did, status) {\n    let device = devices[did];\n    if (device && device.z2m && device.z2m.z2m) {\n        return device.z2m.z2m.status\n    }\n}\n\nlet setZ2MStatus = function(did, status) {\n    let device = devices[did];\n    if (device && device.z2m && device.z2m.z2m) {\n        device.z2m.z2m.status = status\n    }\n    \n    return device;\n}\n\n\ncommon.initZ2MDevice = initZ2MDevice;\ncommon.setZ2MStatus = setZ2MStatus;\ncommon.getZ2MStatus = getZ2MStatus;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1480,
        "wires": [
            [
                "9dbcf892f20005a9"
            ]
        ]
    },
    {
        "id": "a6a4ebf94a8b8924",
        "type": "switch",
        "z": "7c7a09edf982e2f4",
        "name": "是否激活调度？",
        "property": "IOT_ENABLE_EDG",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 180,
        "y": 220,
        "wires": [
            [
                "c0624055eec65ac4"
            ]
        ]
    },
    {
        "id": "c0624055eec65ac4",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "配置文件",
        "func": "\nreturn {\n    filename: env.get(\"IOT_CONFIG_FILE\")\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 220,
        "wires": [
            [
                "387bc8ba683df91f"
            ]
        ]
    },
    {
        "id": "874e2ff0304f3dd7",
        "type": "json",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 710,
        "y": 220,
        "wires": [
            [
                "292cc7137106f66e"
            ]
        ]
    },
    {
        "id": "387bc8ba683df91f",
        "type": "file in",
        "z": "7c7a09edf982e2f4",
        "name": "读配置文件",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 550,
        "y": 220,
        "wires": [
            [
                "874e2ff0304f3dd7"
            ]
        ]
    },
    {
        "id": "292cc7137106f66e",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "数据初始化",
        "func": "let config = msg.payload;\nlet disper = config.edge.global;\nlet keys = Object.keys(disper);\nkeys.forEach(key => {\n    global.set(key, disper[key])\n})\n\nlet data = global.get(\"data\");\nlet ids = global.get(\"ids\");\n\n\nlet host = env.get(\"HOSTNAME\") || env.get(\"COMPUTERNAME\");\nids.edg = ids.edg.replace(\"{HOSTNAME}\", host);\n\nlet app = data.app;\nlet dom = app.domain;\nlet dsp = dom.dispatcher;\nlet edg = dsp.edge;\n\n// app.id = ids.app;\n// dom.id = ids.dom;\n// dsp.id = ids.dsp;\n// edg.id = ids.edg;\n\ndata.dispatcher = dsp;\ndata.edge = edg;\ndata.devices = edg.devices;\ndata.mqtt = edg.mqtt;\ndata.topics = edg.mqtt.topics;\ndata.ids = ids;\n\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 360,
        "wires": [
            [
                "32b635bc5bbe8de1"
            ]
        ]
    },
    {
        "id": "068d75ddb00dcc52",
        "type": "debug",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 640,
        "wires": []
    },
    {
        "id": "32b635bc5bbe8de1",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "展开主题函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet ids = global.get(\"ids\");\n\n\nlet expandTopic = {\n    expandStr : function(v, did) {\n        if (typeof v == \"string\") {\n            v = v.replace(/\\{APP_ID\\}/g, env.get(\"IOT_APP_ID\"));\n            v = v.replace(/\\{DOM_ID\\}/g, env.get(\"IOT_DOM_ID\"));\n            v = v.replace(/\\{DSP_ID\\}/g, env.get(\"IOT_DSP_ID\"));\n            v = v.replace(/\\{app\\}/g, ids.app);\n            v = v.replace(/\\{dom\\}/g, ids.dom);\n            v = v.replace(/\\{dsp\\}/g, ids.dsp);\n            v = v.replace(/\\{edg\\}/g, ids.edg);\n            if (did)\n                v = v.replace(/\\{dev\\}/g, did);\n        }\n        return v;\n    },\n    expandArray : function(v, did) {\n        if (Array.isArray(v)) {\n            for(let i=0; i < v.length; i++) {\n                v[i] = this.expand(v[i], did);\n            }\n        }\n        return arr;\n    },\n    expandObj : function(v, did) {\n        if (typeof v == \"object\") {\n            let keys = Object.keys(v);\n            keys.forEach(k => {\n                v[k] = this.expand(v[k], did);\n            });\n        }\n        return v;        \n    },\n    expand : function(v, did) {\n        if (typeof v == \"string\")\n            v = this.expandStr(v, did);\n                    \n        if (Array.isArray(v)) {\n            v = expandArray(v, did);\n        }\n        \n        if (typeof v == \"object\") {\n            v = this.expandObj(v, did)\n        }\n                \n        return v\n    }\n}\n    \n\n\ncommon.expandTopic = expandTopic;\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 360,
        "wires": [
            [
                "28f0789e7c6d7af0"
            ]
        ]
    },
    {
        "id": "28f0789e7c6d7af0",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "缓存数据函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet online = function(){\n    let events = this.events;\n    if (events && events.status)\n        return events.status.pld.online;\n    return 0;\n}\n\nlet cachePayload = function(payload) {\n    let hd = payload.hd;\n    let pld = payload.pld;\n    if (hd.from.type == \"dev\") {\n        let dev = data.devices[hd.from.id] || {};\n        dev.id = hd.from.id;\n        dev.events = dev.events || {};\n        if (hd.from.pid)\n            dev.pid = hd.from.pid;\n        dev.events[hd.entry.id] = payload;\n        dev.online = online;\n        data.devices[hd.from.id] = dev;\n    }\n    \n    let dsp = data.dispatcher;\n    if (hd.from.type == \"dsp\" && hd.from.id == dsp.id ) {\n        if (hd.entry.type == \"evt\"){\n            dsp.events = dsp.events || {};\n            dsp.events[hd.entry.id] = payload;\n            dsp.online = online;\n        }\n    }\n}\n\ncommon.cachePayload = cachePayload;\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 400,
        "wires": [
            [
                "53f8f8933a1a8726"
            ]
        ]
    },
    {
        "id": "53f8f8933a1a8726",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "键值转ID函数",
        "func": "let common = global.get(\"common\");\n\nlet keyToObjId = function(objs) {\n        let keys = Object.keys(objs);\n        keys.forEach(key => {\n            let obj = objs[key];\n            if (typeof obj == \"object\") \n                obj.id = key;\n        })        \n    }\n\n\ncommon.keyToObjId = keyToObjId;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 440,
        "wires": [
            [
                "c983ab7963d0f975"
            ]
        ]
    },
    {
        "id": "c983ab7963d0f975",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "获取HD主题函数",
        "func": "let common = global.get(\"common\");\nlet ids = global.get(\"data\").ids;\n\nlet getHDTopic = function(hd) {\n    let tpc = \"\";\n    if (!hd.from) hd.from = {};\n    if (!hd.from.type) hd.from.type = \"edg\";\n    if (!hd.from.id) hd.from.id = ids.edg;\n    if (!hd.to.type) hd.to.type = \"0\";\n    if (!hd.to.id) hd.to.id = \"0\";\n    if (!hd.entry.type) hd.entry.type = \"0\";\n    if (!hd.entry.id) hd.entry.id = \"0\";\n    if (!hd.sid) hd.sid = \"0\";\n    if (!hd.stp) hd.stp = 0;\n\n\n    tpc =   ids.app + \"/\" + ids.dom + \"/\" + \n            hd.from.type + \"/\" + hd.from.id + \"/\" + \n            hd.to.type + \"/\" + hd.to.id + \"/\" + \n            hd.entry.type + \"/\" + hd.entry.id;\n    return tpc;\n}\n\n\ncommon.getHDTopic = getHDTopic;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 480,
        "wires": [
            [
                "a135c4a79efe2dc9"
            ]
        ]
    },
    {
        "id": "a135c4a79efe2dc9",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "Z3协调器初始化函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet os = global.get(\"os\");\nlet devices = data.devices;\nlet topics = data.topics;\nlet edgz2m =  data.edge.z2m;\nlet tcpPort = edgz2m.tcpPort;\nlet frontendPort = edgz2m.frontendPort;\nlet z2mDir = edgz2m.z2mDir;\nlet dataDir = edgz2m.dataDir;\nif (os.platform == \"win32\") {\n    z2mDir = edgz2m.z2mDir_win;\n    dataDir = edgz2m.dataDir_win;   \n}\n\nlet running = function() {\n    return  this.z2m && this.z2m.status && \n            (this.z2m.status == \"running\" || this.z2m.status == \"online\")\n}\n\nlet setDevice = (device) => {\n    let devDataDir = dataDir + \"/\" + device.id; \n    let execStr = \"cd \" + z2mDir;\n    if (os.platform == \"win32\"){\n        execStr =execStr + \"&& set ZIGBEE2MQTT_DATA=\" + devDataDir;\n        execStr =execStr + \"&& npm start\";\n    } else {\n        execStr =execStr + \"&& ZIGBEE2MQTT_DATA=\" + devDataDir;\n        execStr =execStr + \" npm start\";\n    }\n\n    let z2m = device.z2m || {};\n    z2m.tcp = {\n            port: tcpPort,\n            status: null\n        };\n    z2m.z2m = {\n            configuration: {\n                mqtt: {\n                    base_topic: device.id,\n                    server: \"mqtt://127.0.0.1:1883\",\n                    user: \"device\"\n                },\n                serial: {\n                    port: \"tcp://127.0.0.1:\" + (tcpPort++)\n                },\n                frontend: {\n                    port: (frontendPort++)\n                }\n            },\n            topics: {\n                sub: common.expandTopic.expand(topics.dysubs.dev_evt_raw, device.id),\n                pub: common.getHDTopic({to: {type: \"dev\", id: device.id}, \n                                        entry: {type: \"svc\", id: topics.pubs.dev_svc_raw}})\n            },\n            datadir: devDataDir,\n            configfile: \"configuration.yaml\",\n            configfullfile: devDataDir + \"/configuration.yaml\",\n            databasefile: \"database.db\",\n            databasefullfile: devDataDir + \"/database.db\",\n            exec: execStr,\n            status: null,\n            datafile: z2m.z2m && z2m.z2m.datafile\n        };\n    z2m.running = running;\n    device.z2m = z2m;\n}\n\n\nlet initZ2MDevice = function(did) {\n    let device = devices[did];\n    if (device && (!device.z2m || !device.z2m.tcp || !device.z2m.z2m)) {\n        setDevice(device);\n    }\n    \n    return device;\n}\n\n\nlet getZ2MStatus = function(did, status) {\n    let device = devices[did];\n    if (device && device.z2m && device.z2m.z2m) {\n        return device.z2m.z2m.status\n    }\n}\n\nlet setZ2MStatus = function(did, status) {\n    let device = devices[did];\n    if (device && device.z2m && device.z2m.z2m) {\n        device.z2m.z2m.status = status\n    }\n    \n    return device;\n}\n\n\ncommon.initZ2MDevice = initZ2MDevice;\ncommon.setZ2MStatus = setZ2MStatus;\ncommon.getZ2MStatus = getZ2MStatus;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 520,
        "wires": [
            [
                "f77d15f0cc88c3d7"
            ]
        ]
    },
    {
        "id": "f77d15f0cc88c3d7",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "数据补全",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\ncommon.expandTopic.expand(data.ids);    \ncommon.expandTopic.expand(data.topics);\ncommon.keyToObjId(data.devices);\n\ndata.app.id = data.ids.app;\ndata.domain.id = data.ids.dom;\ndata.dispatcher.id = data.ids.dsp;\ndata.edge.id = data.ids.edg;\n\n\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 560,
        "wires": [
            [
                "068d75ddb00dcc52",
                "f70a2bb4819417da"
            ]
        ]
    },
    {
        "id": "0f989c13f4e0c1cb",
        "type": "mqtt in",
        "z": "e93bbc67912b9178",
        "name": "mqtt订阅",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "73824c52c204153b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 460,
        "y": 200,
        "wires": [
            [
                "0050c31c1969d8ff",
                "c503d35a9ca051ed"
            ]
        ]
    },
    {
        "id": "906bb62a708b4c0c",
        "type": "link in",
        "z": "e93bbc67912b9178",
        "name": "",
        "links": [
            "f70a2bb4819417da"
        ],
        "x": 185,
        "y": 200,
        "wires": [
            [
                "589883c5ddd06e17",
                "e4534314a7bcd4b3"
            ]
        ]
    },
    {
        "id": "589883c5ddd06e17",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "订阅主题",
        "func": "let data = global.get(\"data\")\nlet topics = data.topics;\n\nnode.send({\n        action: \"subscribe\",\n        topic: Object.values(topics.subs)\n})\n\nnode.send({\n        action: \"subscribe\",\n        topic: Object.values(topics.services)\n})\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 200,
        "wires": [
            [
                "0f989c13f4e0c1cb",
                "f6ce25be1914c84e"
            ]
        ]
    },
    {
        "id": "745ba2affb87c4cd",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 120,
        "wires": []
    },
    {
        "id": "ee0217ceba515222",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "缓存数据",
        "func": "let common = global.get(\"common\");\ncommon.cachePayload(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 200,
        "wires": [
            [
                "be8cd487c69c6c5a"
            ]
        ]
    },
    {
        "id": "be8cd487c69c6c5a",
        "type": "link out",
        "z": "e93bbc67912b9178",
        "name": "订阅输出",
        "mode": "link",
        "links": [
            "2ff5101df1ab6584"
        ],
        "x": 1025,
        "y": 200,
        "wires": []
    },
    {
        "id": "47f3ed4e61a01a5c",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "发布主题",
        "func": "let common = global.get(\"common\")\nmsg.topic = common.getHDTopic(msg.payload.hd);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 520,
        "wires": [
            [
                "8990876a77a537e8",
                "d5db30b412aaf4ae",
                "a83fbf51e61bce78"
            ]
        ]
    },
    {
        "id": "8990876a77a537e8",
        "type": "mqtt out",
        "z": "e93bbc67912b9178",
        "name": "mqtt发布",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "73824c52c204153b",
        "x": 480,
        "y": 520,
        "wires": []
    },
    {
        "id": "f4460e5db856239e",
        "type": "link in",
        "z": "e93bbc67912b9178",
        "name": "主题发布",
        "links": [
            "5002cb933f4b4eb5",
            "befe5b1ac4389423",
            "cb5a80219ea82576",
            "cecd0debcb823e0f",
            "005af7c67cff4282"
        ],
        "x": 205,
        "y": 520,
        "wires": [
            [
                "47f3ed4e61a01a5c"
            ]
        ]
    },
    {
        "id": "d5db30b412aaf4ae",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 600,
        "wires": []
    },
    {
        "id": "13403285d1db57b7",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "时间戳",
        "func": "let date = new Date()\nmsg.payload.hd.tpc = msg.topic;\nmsg.payload.hd.tms=date.valueOf();\nmsg.payload.hd.tm=date.toLocaleString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 200,
        "wires": [
            [
                "745ba2affb87c4cd",
                "ee0217ceba515222"
            ]
        ]
    },
    {
        "id": "a83fbf51e61bce78",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 680,
        "wires": []
    },
    {
        "id": "1fbea7baf2a0c450",
        "type": "link in",
        "z": "e93bbc67912b9178",
        "name": "动态订阅主题",
        "links": [
            "83c403b1c017c665"
        ],
        "x": 185,
        "y": 160,
        "wires": [
            [
                "0f989c13f4e0c1cb",
                "f6ce25be1914c84e"
            ]
        ]
    },
    {
        "id": "f6ce25be1914c84e",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 120,
        "wires": []
    },
    {
        "id": "04c398816ff958e8",
        "type": "inject",
        "z": "e93bbc67912b9178",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 380,
        "wires": [
            [
                "e4534314a7bcd4b3"
            ]
        ]
    },
    {
        "id": "6b6a7c7b19998294",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "broker",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 300,
        "wires": []
    },
    {
        "id": "a74f2eeda3fa9bc1",
        "type": "json",
        "z": "e93bbc67912b9178",
        "name": "",
        "property": "broker.will.payload",
        "action": "str",
        "pretty": false,
        "x": 770,
        "y": 280,
        "wires": [
            [
                "6b6a7c7b19998294",
                "0f989c13f4e0c1cb"
            ]
        ]
    },
    {
        "id": "b920e31b90166791",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "出生消息",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet hd = {\n    from: {\n        type: \"edg\",\n        id: data.ids.edg\n    },\n    to: {\n        type: \"0\",\n        id: \"0\"\n    },\n    entry: {\n        type: \"evt\",\n        id: data.topics.pubs.edg_evt_status\n    }\n};\n\nlet pld = {\n    id: hd.from.id,\n    online: 1\n};\n\nlet topic = common.getHDTopic(hd);\n\n\nlet birth = {\n    topic: topic,\n    qos: 2,\n    retain: true,\n    payload: {\n        hd: hd,\n        pld: pld\n    }\n}\n\n\nmsg.broker.birth = birth;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 280,
        "wires": [
            [
                "45838fa67f1ea02a"
            ]
        ]
    },
    {
        "id": "e4534314a7bcd4b3",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "自动连接",
        "func": "let data = global.get(\"data\");\nmsg = {};\nmsg.action = \"connect\";\nmsg.broker = {\n    autoConnect: true,\n    force: true,\n    clientid: data.ids.mqtt\n}\nObject.assign(msg.broker, data.mqtt.broker);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 280,
        "wires": [
            [
                "b920e31b90166791"
            ]
        ]
    },
    {
        "id": "45838fa67f1ea02a",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "遗嘱消息",
        "func": "let birth = msg.broker.birth;\n\nlet pld = {\n    id: birth.payload.pld.id,\n    online: 0\n};\n\n\n\nlet will = {\n    topic: birth.topic,\n    qos: 2,\n    retain: true,\n    payload: {\n        hd: birth.payload.hd,\n        pld: pld\n    }\n}\n\n\nmsg.broker.will = will;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 280,
        "wires": [
            [
                "a74f2eeda3fa9bc1"
            ]
        ]
    },
    {
        "id": "0050c31c1969d8ff",
        "type": "json",
        "z": "e93bbc67912b9178",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 610,
        "y": 200,
        "wires": [
            [
                "13403285d1db57b7"
            ]
        ]
    },
    {
        "id": "c503d35a9ca051ed",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 120,
        "wires": []
    },
    {
        "id": "bb13c1e5ab2b6792",
        "type": "mqtt in",
        "z": "e93bbc67912b9178",
        "name": "z2m订阅",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "562dca499de9d04d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 520,
        "y": 1140,
        "wires": [
            [
                "d5520896f23cdeb4",
                "f1814229a350f28f"
            ]
        ]
    },
    {
        "id": "9d10928bc56e32f8",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "Z2M订阅",
        "func": "node.send({\n    action: \"subscribe\",\n    topic: msg.payload.pld.id + \"/#\"\n})",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1140,
        "wires": [
            [
                "bb13c1e5ab2b6792"
            ]
        ]
    },
    {
        "id": "69ff69f2f7c73cfa",
        "type": "comment",
        "z": "e93bbc67912b9178",
        "name": "push",
        "info": "",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "66aad7c80cac1d02",
        "type": "comment",
        "z": "e93bbc67912b9178",
        "name": "z2m",
        "info": "",
        "x": 130,
        "y": 1000,
        "wires": []
    },
    {
        "id": "b628b7caedd1cf93",
        "type": "link in",
        "z": "e93bbc67912b9178",
        "name": "z2m主题订阅输入",
        "links": [
            "20f49d8e60d749d6"
        ],
        "x": 155,
        "y": 1140,
        "wires": [
            [
                "9d10928bc56e32f8"
            ]
        ]
    },
    {
        "id": "d5520896f23cdeb4",
        "type": "link out",
        "z": "e93bbc67912b9178",
        "name": "z2m主题订阅输出",
        "mode": "link",
        "links": [
            "fbab28506ca8e627",
            "1c893e7137666c65"
        ],
        "x": 745,
        "y": 1140,
        "wires": []
    },
    {
        "id": "f1814229a350f28f",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1060,
        "wires": []
    },
    {
        "id": "903c56eb120b27b2",
        "type": "mqtt in",
        "z": "e93bbc67912b9178",
        "name": "子设备订阅",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "73824c52c204153b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 520,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "70ca0f52b5127c70",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "PUSH订阅",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1040,
        "wires": [
            [
                "903c56eb120b27b2"
            ]
        ]
    },
    {
        "id": "01f1dbfb048fc8b1",
        "type": "mqtt in",
        "z": "e93bbc67912b9178",
        "name": "协调器订阅",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "73824c52c204153b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 520,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "3fdb98726d73125a",
        "type": "link in",
        "z": "46a5ba0d798d87c3",
        "name": "请求",
        "links": [
            "a56686e93c3108ed",
            "f70a2bb4819417da"
        ],
        "x": 105,
        "y": 120,
        "wires": [
            [
                "dbc6ca860bba37fa"
            ]
        ]
    },
    {
        "id": "dbc6ca860bba37fa",
        "type": "delay",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 120,
        "wires": [
            [
                "dd8448c09ec803d1"
            ]
        ]
    },
    {
        "id": "dd8448c09ec803d1",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "登入请求",
        "func": "let data = global.get(\"data\");\nreturn {\n    payload: {\n        hd: {\n            to: {\n                type: \"dsp\",\n                id: data.ids.dsp\n            },\n            entry: {\n                type: \"svc\",\n                id: data.topics.pubs.dsp_svc_login\n            }\n        },\n        pld: {\n            id: data.ids.dsp\n        }\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 120,
        "wires": [
            [
                "808567bfe13fcc45",
                "5002cb933f4b4eb5"
            ]
        ]
    },
    {
        "id": "7ff39a365708d337",
        "type": "change",
        "z": "46a5ba0d798d87c3",
        "name": "登入请求",
        "rules": [
            {
                "t": "set",
                "p": "payload.hd.to.type",
                "pt": "msg",
                "to": "dsp",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.hd.to.id",
                "pt": "msg",
                "to": "nd",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.hd.entry.type",
                "pt": "msg",
                "to": "svc",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.hd.entry.id",
                "pt": "msg",
                "to": "login",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 60,
        "wires": [
            [
                "5002cb933f4b4eb5"
            ]
        ]
    },
    {
        "id": "5002cb933f4b4eb5",
        "type": "link out",
        "z": "46a5ba0d798d87c3",
        "name": "请求",
        "mode": "link",
        "links": [
            "f4460e5db856239e"
        ],
        "x": 935,
        "y": 380,
        "wires": []
    },
    {
        "id": "808567bfe13fcc45",
        "type": "trigger",
        "z": "46a5ba0d798d87c3",
        "name": "超时5秒",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "overrideDelay": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 380,
        "y": 180,
        "wires": [
            [],
            [
                "dbc6ca860bba37fa"
            ]
        ]
    },
    {
        "id": "35f58eaf5d9015fb",
        "type": "change",
        "z": "46a5ba0d798d87c3",
        "name": "重置",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 180,
        "wires": [
            [
                "808567bfe13fcc45"
            ]
        ]
    },
    {
        "id": "ea899d2e95e95576",
        "type": "link in",
        "z": "46a5ba0d798d87c3",
        "name": "重置登入请求",
        "links": [
            "87bda24bd97b90b7"
        ],
        "x": 105,
        "y": 180,
        "wires": [
            [
                "35f58eaf5d9015fb"
            ]
        ]
    },
    {
        "id": "d99eb11998d5f458",
        "type": "comment",
        "z": "46a5ba0d798d87c3",
        "name": "登入",
        "info": "",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "e1a4e92e2667f00e",
        "type": "comment",
        "z": "46a5ba0d798d87c3",
        "name": "获取Z2M数据文件",
        "info": "",
        "x": 150,
        "y": 580,
        "wires": []
    },
    {
        "id": "c257b644a9f3904f",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "请求Z2M数据文件",
        "func": "let data = global.get(\"data\");\nlet topics = data.topics;\nlet pld = msg.payload.pld\n\nlet _msg = {\n    payload: {\n        hd: {\n            to: {\n                type: \"dsp\",\n                id: data.ids.dsp\n            },\n            entry: {\n                type: \"svc\",\n                id: topics.pubs.dsp_svc_get_z2m_datafile\n            }\n        },\n        pld: {\n            id: msg.payload.id || pld && pld.id\n        }\n    }\n}\nreturn _msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 660,
        "wires": [
            [
                "5002cb933f4b4eb5",
                "01a7527df6414170"
            ]
        ]
    },
    {
        "id": "04d3f9487a2fb418",
        "type": "link in",
        "z": "46a5ba0d798d87c3",
        "name": "请求Z2M数据文件",
        "links": [
            "ee014620f54577ec"
        ],
        "x": 95,
        "y": 660,
        "wires": [
            [
                "c257b644a9f3904f"
            ]
        ]
    },
    {
        "id": "89082bd768ce94d2",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "设置Z2M数据文件",
        "func": "let data = global.get(\"data\");\nlet topics = data.topics;\n\nlet _msg = {\n    payload: {\n        hd: {\n            to: {\n                type: \"dsp\",\n                id: data.ids.dsp\n            },\n            entry: {\n                type: \"svc\",\n                id: topics.pubs.dsp_svc_set_z2m_datafile\n            }\n        },\n        pld: msg.payload\n    }\n}\nreturn _msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 820,
        "wires": [
            [
                "5002cb933f4b4eb5"
            ]
        ]
    },
    {
        "id": "93b0b280ccede552",
        "type": "link in",
        "z": "46a5ba0d798d87c3",
        "name": "设置Z2M数据文件",
        "links": [],
        "x": 95,
        "y": 820,
        "wires": [
            [
                "89082bd768ce94d2"
            ]
        ]
    },
    {
        "id": "16f80bed07a957db",
        "type": "link in",
        "z": "46a5ba0d798d87c3",
        "name": "重置请求Z2M数据",
        "links": [
            "2eac5508a3f5feed"
        ],
        "x": 95,
        "y": 700,
        "wires": [
            [
                "c38ada1c4ce06636"
            ]
        ]
    },
    {
        "id": "f240b4ecdd0b88f3",
        "type": "debug",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 700,
        "wires": []
    },
    {
        "id": "e8c6f9bd3be73a7d",
        "type": "comment",
        "z": "46a5ba0d798d87c3",
        "name": "握手",
        "info": "",
        "x": 110,
        "y": 320,
        "wires": []
    },
    {
        "id": "1873e4c1eab22fec",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "握手请求",
        "func": "let data = global.get(\"data\");\nlet did = msg.payload.id;\nif (did) {\n    return {\n        payload: {\n            hd: {\n                to: {\n                    type: \"dev\",\n                    id: did\n                },\n                entry: {\n                    type: \"svc\",\n                    id: data.topics.pubs.dev_svc_handshake\n                }\n            },\n            pld: {\n                id: did\n            }\n        }\n    };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 380,
        "wires": [
            [
                "5002cb933f4b4eb5",
                "1383524c0b13eb78"
            ]
        ]
    },
    {
        "id": "8b0eacacfd0fe129",
        "type": "link in",
        "z": "46a5ba0d798d87c3",
        "name": "握手请求输入",
        "links": [
            "62b3ca59dea6f8fb"
        ],
        "x": 95,
        "y": 380,
        "wires": [
            [
                "1873e4c1eab22fec",
                "1383524c0b13eb78"
            ]
        ]
    },
    {
        "id": "5191a783cec57042",
        "type": "trigger",
        "z": "46a5ba0d798d87c3",
        "name": "超时5秒",
        "op1": "1",
        "op2": "",
        "op1type": "str",
        "op2type": "pay",
        "duration": "5",
        "extend": true,
        "overrideDelay": true,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 2,
        "x": 380,
        "y": 700,
        "wires": [
            [],
            [
                "f240b4ecdd0b88f3"
            ]
        ]
    },
    {
        "id": "c38ada1c4ce06636",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "重置",
        "func": "\nreturn {\n    topic: msg.payload.pld.id,\n    reset: true\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 700,
        "wires": [
            [
                "5191a783cec57042"
            ]
        ]
    },
    {
        "id": "01a7527df6414170",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "超时数据",
        "func": "\nreturn {\n    topic: msg.payload.pld.id,\n    payload: msg.payload\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 660,
        "wires": [
            [
                "5191a783cec57042"
            ]
        ]
    },
    {
        "id": "1383524c0b13eb78",
        "type": "debug",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "2ff5101df1ab6584",
        "type": "link in",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "links": [
            "be8cd487c69c6c5a"
        ],
        "x": 85,
        "y": 360,
        "wires": [
            [
                "2960d37440adb67d",
                "de530b4d9f0d838c"
            ]
        ]
    },
    {
        "id": "2960d37440adb67d",
        "type": "switch",
        "z": "f7e96a32e56d72eb",
        "name": "边缘",
        "property": "payload.hd.to.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "edg",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 170,
        "y": 140,
        "wires": [
            [
                "1faf71b0d9db29dd"
            ]
        ]
    },
    {
        "id": "a91a584b038a1d91",
        "type": "switch",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "property": "payload.hd.entry.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "login",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "handshake",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "get_z2m_datafile",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 550,
        "y": 100,
        "wires": [
            [
                "dbf743cc72de8237"
            ],
            [
                "25963405174891a1"
            ],
            [
                "1eab2bfb7c865d8c"
            ]
        ]
    },
    {
        "id": "d3b8d4ef2a9d44b5",
        "type": "switch",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "property": "payload.hd.stp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 80,
        "wires": [
            [
                "e52ee3fd0341a37b"
            ],
            [
                "779a1d618441696f"
            ]
        ]
    },
    {
        "id": "1faf71b0d9db29dd",
        "type": "switch",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "property": "payload.hd.entry.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "svc",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "evt",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 140,
        "wires": [
            [
                "cc10d1e9f14c0e00"
            ],
            [
                "6db56a0d40368db2"
            ]
        ]
    },
    {
        "id": "a56686e93c3108ed",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "mode": "link",
        "links": [
            "3fdb98726d73125a"
        ],
        "x": 1025,
        "y": 60,
        "wires": []
    },
    {
        "id": "e52ee3fd0341a37b",
        "type": "change",
        "z": "f7e96a32e56d72eb",
        "name": "请求",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 60,
        "wires": [
            [
                "a56686e93c3108ed"
            ]
        ]
    },
    {
        "id": "779a1d618441696f",
        "type": "change",
        "z": "f7e96a32e56d72eb",
        "name": "响应",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 100,
        "wires": [
            [
                "8bdefa0f693ad406"
            ]
        ]
    },
    {
        "id": "8bdefa0f693ad406",
        "type": "switch",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "property": "payload.pld.edg",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ids.edg",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 100,
        "wires": [
            [
                "de57035b17ce0c4f"
            ],
            [
                "b845798ff172e93d"
            ]
        ]
    },
    {
        "id": "de57035b17ce0c4f",
        "type": "change",
        "z": "f7e96a32e56d72eb",
        "name": "成功",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 80,
        "wires": [
            [
                "87bda24bd97b90b7"
            ]
        ]
    },
    {
        "id": "b845798ff172e93d",
        "type": "change",
        "z": "f7e96a32e56d72eb",
        "name": "失败",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "87bda24bd97b90b7",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "mode": "link",
        "links": [
            "ea899d2e95e95576"
        ],
        "x": 1305,
        "y": 80,
        "wires": []
    },
    {
        "id": "cc10d1e9f14c0e00",
        "type": "change",
        "z": "f7e96a32e56d72eb",
        "name": "服务",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 100,
        "wires": [
            [
                "a91a584b038a1d91"
            ]
        ]
    },
    {
        "id": "6db56a0d40368db2",
        "type": "switch",
        "z": "f7e96a32e56d72eb",
        "name": "事件",
        "property": "payload.hd.entry.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "status",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "report",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 440,
        "wires": [
            [
                "67a015670aa5bfcb"
            ],
            [
                "77be8c476ad23117"
            ]
        ]
    },
    {
        "id": "67a015670aa5bfcb",
        "type": "change",
        "z": "f7e96a32e56d72eb",
        "name": "上线",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "77be8c476ad23117",
        "type": "change",
        "z": "f7e96a32e56d72eb",
        "name": "上报",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "dbf743cc72de8237",
        "type": "change",
        "z": "f7e96a32e56d72eb",
        "name": "登入",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 80,
        "wires": [
            [
                "d3b8d4ef2a9d44b5"
            ]
        ]
    },
    {
        "id": "25963405174891a1",
        "type": "change",
        "z": "f7e96a32e56d72eb",
        "name": "握手",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 160,
        "wires": [
            [
                "b6ae5c1210b8dc15"
            ]
        ]
    },
    {
        "id": "b6ae5c1210b8dc15",
        "type": "switch",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "property": "payload.hd.stp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 160,
        "wires": [
            [
                "c15b8a633e8fdcb5"
            ],
            []
        ]
    },
    {
        "id": "c15b8a633e8fdcb5",
        "type": "change",
        "z": "f7e96a32e56d72eb",
        "name": "请求",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 160,
        "wires": [
            [
                "eddacdb42ea98435"
            ]
        ]
    },
    {
        "id": "7fa2a4320c33a0c6",
        "type": "function",
        "z": "f7e96a32e56d72eb",
        "name": "响应",
        "func": "let hd = msg.payload.hd;\nlet temp = hd.from;\nhd.from = hd.to;\nhd.to = temp;\nhd.stp = 1;\ndelete hd.tm;\ndelete hd.tms;\ndelete hd.tpc;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 220,
        "wires": [
            [
                "cb5a80219ea82576"
            ]
        ]
    },
    {
        "id": "cb5a80219ea82576",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "mode": "link",
        "links": [
            "f4460e5db856239e"
        ],
        "x": 1305,
        "y": 220,
        "wires": []
    },
    {
        "id": "eddacdb42ea98435",
        "type": "function",
        "z": "f7e96a32e56d72eb",
        "name": "订阅/输出",
        "func": "let data = global.get(\"data\")\nlet common = global.get(\"common\")\nlet topics = data.topics;\nlet hd = msg.payload.hd;\n\n\n\nlet topic = common.expandTopic.expand(topics.dysubs.dev_evt_status, hd.from.id);\n\n\nnode.send([\n    {\n        action: \"subscribe\",\n        topic: topic\n    }, \n\n    msg    \n    ])\n\n\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 160,
        "wires": [
            [
                "83c403b1c017c665"
            ],
            [
                "7fa2a4320c33a0c6",
                "0c75cd8a739aa826"
            ]
        ]
    },
    {
        "id": "83c403b1c017c665",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "mode": "link",
        "links": [
            "1fbea7baf2a0c450"
        ],
        "x": 1305,
        "y": 140,
        "wires": []
    },
    {
        "id": "0c75cd8a739aa826",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "握手请求输出",
        "mode": "link",
        "links": [
            "aa6930a5c2fc2bf5"
        ],
        "x": 1305,
        "y": 180,
        "wires": []
    },
    {
        "id": "1eab2bfb7c865d8c",
        "type": "change",
        "z": "f7e96a32e56d72eb",
        "name": "获取Z2M文件",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 300,
        "wires": [
            [
                "041e768f187327a8"
            ]
        ]
    },
    {
        "id": "041e768f187327a8",
        "type": "switch",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "property": "payload.hd.stp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 300,
        "wires": [
            [],
            [
                "a9d7a2c2d99965f3"
            ]
        ]
    },
    {
        "id": "3aeed170dad6a201",
        "type": "debug",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 400,
        "wires": []
    },
    {
        "id": "a9d7a2c2d99965f3",
        "type": "function",
        "z": "f7e96a32e56d72eb",
        "name": "响应处理",
        "func": "let data = global.get(\"data\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet device = data.devices[pld.id];\nif (pld.datafile) {\n    device.z2m = device.z2m || {};\n    device.z2m.z2m = device.z2m.z2m || {};\n    device.z2m.z2m.datafile = pld.datafile\n}\nmsg.device = device;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 300,
        "wires": [
            [
                "3aeed170dad6a201",
                "d02853ba90eee1de",
                "2eac5508a3f5feed"
            ]
        ]
    },
    {
        "id": "d02853ba90eee1de",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "获取Z2M文件输出",
        "mode": "link",
        "links": [
            "513b3d3f8ecdd3f3"
        ],
        "x": 1305,
        "y": 280,
        "wires": []
    },
    {
        "id": "2eac5508a3f5feed",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "重置请求Z2M数据",
        "mode": "link",
        "links": [
            "16f80bed07a957db"
        ],
        "x": 1305,
        "y": 320,
        "wires": []
    },
    {
        "id": "a62e066f9eef50c9",
        "type": "switch",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "de530b4d9f0d838c",
        "type": "switch",
        "z": "f7e96a32e56d72eb",
        "name": "调度上下线",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "data.topics.subs.dsp_evt_status",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 620,
        "wires": [
            [
                "eae2c54a2ef3b03a"
            ]
        ]
    },
    {
        "id": "eae2c54a2ef3b03a",
        "type": "function",
        "z": "f7e96a32e56d72eb",
        "name": "边缘上线",
        "func": "let data = global.get(\"data\");\n\nlet hd = {\n    to: msg.payload.hd.from,\n    entry: {\n        type: \"evt\",\n        id: data.topics.pubs.edg_evt_status\n    }\n};\n\nlet pld = {\n    id: data.ids.edg,\n    online: 1\n};\nreturn {\n    payload:{\n        hd: hd,\n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 620,
        "wires": [
            [
                "005af7c67cff4282"
            ]
        ]
    },
    {
        "id": "005af7c67cff4282",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "mode": "link",
        "links": [
            "f4460e5db856239e"
        ],
        "x": 635,
        "y": 620,
        "wires": []
    },
    {
        "id": "8266808a.876a4",
        "type": "mtcp-server",
        "z": "95249172.4f419",
        "action": "action",
        "actionType": "msg",
        "port": "port",
        "portType": "msg",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "xmlAttrkey": "$",
        "xmlCharkey": "_",
        "xmlStrip": false,
        "xmlArray": false,
        "xmlNormalizeTags": false,
        "xmlNormalize": false,
        "write": "payload",
        "writeType": "msg",
        "writeHost": "",
        "writeHostType": "str",
        "writePort": "",
        "writePortType": "str",
        "closeHost": "",
        "closeHostType": "str",
        "closePort": "",
        "closePortType": "str",
        "topic": "",
        "name": "",
        "x": 750,
        "y": 1180,
        "wires": [
            [
                "537afca6.898714"
            ]
        ]
    },
    {
        "id": "c29a577.4922ba8",
        "type": "function",
        "z": "95249172.4f419",
        "name": "退出TCP",
        "func": "\nreturn {\n    action: \"kill\",\n    topic: msg.device.id,\n    device: msg.device\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1120,
        "wires": [
            [
                "8266808a.876a4"
            ]
        ]
    },
    {
        "id": "a7b7f33e.4f6d6",
        "type": "function",
        "z": "95249172.4f419",
        "name": "初始化设备数据",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet did = pld.id;\n\ncommon.initZ2MDevice(did);\n\nreturn {device: data.devices[did]}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 580,
        "wires": [
            [
                "4786d4b1.54a20c",
                "b61ee9f9.8487a8"
            ]
        ]
    },
    {
        "id": "a8206207.d4a2f",
        "type": "function",
        "z": "95249172.4f419",
        "name": "启动TCP",
        "func": "let device = msg.device;\nlet z2m = device.z2m.z2m;\n\nif (!z2m.status || z2m.status == \"killed\" ) {\n    z2m.status = \"starting\";\n    return {\n        action: \"listen\",\n        port: device.z2m.tcp.port,\n        topic: device.id,\n        device: device\n    };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1180,
        "wires": [
            [
                "8266808a.876a4"
            ]
        ]
    },
    {
        "id": "a9b41f4c.9d5f",
        "type": "delay",
        "z": "95249172.4f419",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 270,
        "y": 1180,
        "wires": [
            [
                "a8206207.d4a2f"
            ]
        ]
    },
    {
        "id": "537afca6.898714",
        "type": "base64",
        "z": "95249172.4f419",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 880,
        "y": 1180,
        "wires": [
            [
                "7037af16.822b6"
            ]
        ]
    },
    {
        "id": "7037af16.822b6",
        "type": "function",
        "z": "95249172.4f419",
        "name": "下行数据",
        "func": "\nlet hd = {\n    to: {\n        type: \"dev\",\n        id: msg.topic\n    },\n    entry: {\n        type: \"svc\",\n        id: \"penet\"\n    }\n}\nlet pld = {\n    raw: msg.payload\n}\n\nreturn {\n    payload:{\n        hd: hd, \n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 680,
        "wires": [
            [
                "befe5b1ac4389423",
                "3aae7033fe07259c"
            ]
        ]
    },
    {
        "id": "d84ccae0.262b08",
        "type": "mqtt in",
        "z": "95249172.4f419",
        "name": "mqtt订阅",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "73824c52c204153b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 440,
        "y": 680,
        "wires": [
            [
                "52445c3.9f9dea4"
            ]
        ]
    },
    {
        "id": "4786d4b1.54a20c",
        "type": "function",
        "z": "95249172.4f419",
        "name": "主题订阅",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet topics = data.topics;\nlet device = msg.device;\nlet topic = common.expandTopic.expand(topics.dysubs.dev_evt_penet, device.id);\n\nnode.send({\n    action: \"subscribe\",\n    topic: topic,\n    device: device\n})",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 680,
        "wires": [
            [
                "2011f1524bc4f124",
                "b532891899181833",
                "c29a577.4922ba8",
                "d84ccae0.262b08"
            ]
        ]
    },
    {
        "id": "52445c3.9f9dea4",
        "type": "base64",
        "z": "95249172.4f419",
        "name": "",
        "action": "",
        "property": "payload.pld.raw",
        "x": 600,
        "y": 680,
        "wires": [
            [
                "d56a9ae7.a6b1c8"
            ]
        ]
    },
    {
        "id": "d56a9ae7.a6b1c8",
        "type": "function",
        "z": "95249172.4f419",
        "name": "上行数据",
        "func": "\nreturn {\n    action: \"write\",\n    topic: msg.payload.hd.from.id,\n    payload: msg.payload.pld.raw\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 680,
        "wires": [
            [
                "8266808a.876a4"
            ]
        ]
    },
    {
        "id": "896f46b2.ba73b8",
        "type": "exec",
        "z": "95249172.4f419",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 1620,
        "wires": [
            [
                "1e6e835c.3f47ed",
                "f1c7947f.fb1418"
            ],
            [
                "1e6e835c.3f47ed",
                "f1c7947f.fb1418"
            ],
            [
                "1e6e835c.3f47ed",
                "f1c7947f.fb1418",
                "5955260e9fe173e8"
            ]
        ]
    },
    {
        "id": "67d7f878.3c3c08",
        "type": "function",
        "z": "95249172.4f419",
        "name": "启动Z2M",
        "func": "let data = global.get(\"data\")\nlet common = global.get(\"common\");\nlet topic = msg.topic;\nlet devices = data.devices;\nlet device = devices[topic];\nif (device) {\n    common.setZ2MStatus(device.id, \"running\");\n    node.send({\n        topic: topic,\n        payload: device.z2m.z2m.exec,\n        device: device\n    })\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1620,
        "wires": [
            [
                "896f46b2.ba73b8"
            ]
        ]
    },
    {
        "id": "b61ee9f9.8487a8",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "device",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 560,
        "wires": []
    },
    {
        "id": "1e6e835c.3f47ed",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1560,
        "wires": []
    },
    {
        "id": "f1c7947f.fb1418",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1600,
        "wires": []
    },
    {
        "id": "2fa53b7.d29f1c4",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "device.z2m.z2m.status",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1480,
        "wires": []
    },
    {
        "id": "bb31c090.5dcbc",
        "type": "status",
        "z": "95249172.4f419",
        "name": "TCP状态变化",
        "scope": [
            "8266808a.876a4"
        ],
        "x": 290,
        "y": 1280,
        "wires": [
            [
                "c6fc7efe.a865a"
            ]
        ]
    },
    {
        "id": "c6fc7efe.a865a",
        "type": "json",
        "z": "95249172.4f419",
        "name": "",
        "property": "status.text",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 1280,
        "wires": [
            [
                "6ef3855c.50f5fc"
            ]
        ]
    },
    {
        "id": "6ef3855c.50f5fc",
        "type": "function",
        "z": "95249172.4f419",
        "name": "刷新状态",
        "func": "let data = global.get(\"data\")\nlet devices = data.devices;\nmsg = msg.status.text;\nif (msg) {\n    let device = devices[msg.topic];\n    if (device)\n        device.z2m.tcp.status = msg.status;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1280,
        "wires": [
            [
                "51413c75.748364",
                "f9c655b1.ce7eb8"
            ]
        ]
    },
    {
        "id": "51413c75.748364",
        "type": "switch",
        "z": "95249172.4f419",
        "name": "listened",
        "property": "status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "listened",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 720,
        "y": 1280,
        "wires": [
            [
                "dc8cc2b55ea3047f"
            ]
        ]
    },
    {
        "id": "f9c655b1.ce7eb8",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "status",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1320,
        "wires": []
    },
    {
        "id": "7e9f0a57.055c94",
        "type": "inject",
        "z": "95249172.4f419",
        "name": "kill all",
        "props": [
            {
                "p": "action",
                "v": "kill",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 750,
        "y": 1120,
        "wires": [
            [
                "8266808a.876a4"
            ]
        ]
    },
    {
        "id": "aa6930a5c2fc2bf5",
        "type": "link in",
        "z": "95249172.4f419",
        "name": "",
        "links": [
            "0c75cd8a739aa826"
        ],
        "x": 135,
        "y": 100,
        "wires": [
            [
                "c67b416fd4b80313"
            ]
        ]
    },
    {
        "id": "c67b416fd4b80313",
        "type": "switch",
        "z": "95249172.4f419",
        "name": "是否Z3协调器",
        "property": "payload.pld.model",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Z3CO2652ESP8266",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "259011be7bbb4ede",
                "20f49d8e60d749d6"
            ],
            []
        ]
    },
    {
        "id": "2011f1524bc4f124",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 620,
        "wires": []
    },
    {
        "id": "7f5fec758583e328",
        "type": "file in",
        "z": "95249172.4f419",
        "name": "读取配置文件",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 700,
        "y": 820,
        "wires": [
            [
                "a62c3d0e9815f172"
            ]
        ]
    },
    {
        "id": "7739fabb1797a8aa",
        "type": "function",
        "z": "95249172.4f419",
        "name": "设置文件名",
        "func": "let device = msg.device;\nlet z2m = device.z2m.z2m;\nmsg.filename = z2m.configfullfile;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 820,
        "wires": [
            [
                "7f5fec758583e328"
            ]
        ]
    },
    {
        "id": "b532891899181833",
        "type": "delay",
        "z": "95249172.4f419",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 820,
        "wires": [
            [
                "7739fabb1797a8aa"
            ]
        ]
    },
    {
        "id": "bb0f2b105e35f00e",
        "type": "inject",
        "z": "95249172.4f419",
        "name": "",
        "props": [
            {
                "p": "payload.pld.id",
                "v": "ESP8266x0006dbe5",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 800,
        "wires": [
            [
                "a7b7f33e.4f6d6"
            ]
        ]
    },
    {
        "id": "9449cc87f0ea1999",
        "type": "catch",
        "z": "95249172.4f419",
        "name": "文件不存在",
        "scope": [
            "7f5fec758583e328"
        ],
        "uncaught": false,
        "x": 520,
        "y": 900,
        "wires": [
            [
                "0c5ad8a0c21631aa"
            ]
        ]
    },
    {
        "id": "a62c3d0e9815f172",
        "type": "yaml",
        "z": "95249172.4f419",
        "property": "payload",
        "name": "",
        "x": 870,
        "y": 820,
        "wires": [
            [
                "3bdd43d8255bbc81"
            ]
        ]
    },
    {
        "id": "3bdd43d8255bbc81",
        "type": "function",
        "z": "95249172.4f419",
        "name": "",
        "func": "let device = msg.device;\nlet z2m = device.z2m.z2m;\nz2m.datafile = z2m.datafile || {};\nz2m.datafile[z2m.configfile] = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 820,
        "wires": [
            [
                "0c5ad8a0c21631aa"
            ]
        ]
    },
    {
        "id": "0c5ad8a0c21631aa",
        "type": "function",
        "z": "95249172.4f419",
        "name": "写配置文件",
        "func": "let z2m = msg.device.z2m.z2m;\nlet datafile = msg.device.z2m.z2m.datafile;\nlet filename = z2m.configfile;\nif (datafile && datafile[filename]) {\n    let config = datafile[filename];\n    config.mqtt = z2m.configuration.mqtt;\n    config.serial = z2m.configuration.serial;\n    config.frontend = z2m.configuration.frontend;\n\n    msg.payload = datafile[filename];\n    return msg;  \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 900,
        "wires": [
            [
                "29d7bc0ce9adf4c3"
            ]
        ]
    },
    {
        "id": "e1c7d0801e4969d2",
        "type": "file",
        "z": "95249172.4f419",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1020,
        "y": 900,
        "wires": [
            [
                "8f945fdc1ab78574"
            ]
        ]
    },
    {
        "id": "29d7bc0ce9adf4c3",
        "type": "yaml",
        "z": "95249172.4f419",
        "property": "payload",
        "name": "",
        "x": 870,
        "y": 900,
        "wires": [
            [
                "e1c7d0801e4969d2"
            ]
        ]
    },
    {
        "id": "8f945fdc1ab78574",
        "type": "function",
        "z": "95249172.4f419",
        "name": "重启TCP",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1120,
        "wires": [
            [
                "c29a577.4922ba8",
                "a9b41f4c.9d5f"
            ]
        ]
    },
    {
        "id": "5955260e9fe173e8",
        "type": "function",
        "z": "95249172.4f419",
        "name": "更新状态",
        "func": "let common = global.get(\"common\");\nlet device = common.setZ2MStatus(msg.device.id, \"killed\");\nmsg.device = device;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1680,
        "wires": [
            [
                "138da46316ede501"
            ]
        ]
    },
    {
        "id": "befe5b1ac4389423",
        "type": "link out",
        "z": "95249172.4f419",
        "name": "",
        "mode": "link",
        "links": [
            "f4460e5db856239e"
        ],
        "x": 1175,
        "y": 680,
        "wires": []
    },
    {
        "id": "7c34d2644f86076f",
        "type": "function",
        "z": "95249172.4f419",
        "name": "需要重启？",
        "func": "let data = global.get(\"data\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet device = data.devices[pld.id];\nlet z2m = device.z2m;\nif (pld.handshake_count == 0 ||\n    !z2m || !z2m.running || !z2m.running()) {\n    msg.device = device\n    return msg;        \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 100,
        "wires": [
            [
                "f1a6eb115fd88a36"
            ]
        ]
    },
    {
        "id": "3aae7033fe07259c",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 740,
        "wires": []
    },
    {
        "id": "dc8cc2b55ea3047f",
        "type": "switch",
        "z": "95249172.4f419",
        "name": "Z2M未启动?",
        "property": "device.z2m.z2m.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "running",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 1520,
        "wires": [
            [
                "67d7f878.3c3c08",
                "2fa53b7.d29f1c4"
            ]
        ]
    },
    {
        "id": "f1a6eb115fd88a36",
        "type": "switch",
        "z": "95249172.4f419",
        "name": "有无配置文件？",
        "property": "device.z2m.z2m.datafile",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "device.z2m.z2m.configfile",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 900,
        "y": 100,
        "wires": [
            [
                "74dcdef0a677e6c5"
            ],
            [
                "ee014620f54577ec"
            ]
        ]
    },
    {
        "id": "ee014620f54577ec",
        "type": "link out",
        "z": "95249172.4f419",
        "name": "",
        "mode": "link",
        "links": [
            "04d3f9487a2fb418"
        ],
        "x": 1175,
        "y": 100,
        "wires": []
    },
    {
        "id": "513b3d3f8ecdd3f3",
        "type": "link in",
        "z": "95249172.4f419",
        "name": "已获取Z2M文件",
        "links": [
            "d02853ba90eee1de"
        ],
        "x": 135,
        "y": 160,
        "wires": [
            [
                "f6e6b79444715553"
            ]
        ]
    },
    {
        "id": "e95eb997e17b4dca",
        "type": "switch",
        "z": "95249172.4f419",
        "name": "有无配置文件？",
        "property": "device.z2m.z2m.datafile",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "device.z2m.z2m.configfile",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 900,
        "y": 160,
        "wires": [
            [
                "74dcdef0a677e6c5"
            ],
            []
        ]
    },
    {
        "id": "f6e6b79444715553",
        "type": "function",
        "z": "95249172.4f419",
        "name": "需要重启？",
        "func": "let data = global.get(\"data\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet device = data.devices[pld.id];\nif (device) {\n    let z2m = device.z2m;\n    if (pld.handshake_count == 0 ||\n        !z2m || !z2m.running || !z2m.running()) {\n        msg.device = device\n        return msg;        \n    }\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 160,
        "wires": [
            [
                "e95eb997e17b4dca",
                "4837b9c47424b3f2"
            ]
        ]
    },
    {
        "id": "74dcdef0a677e6c5",
        "type": "change",
        "z": "95249172.4f419",
        "name": "重启",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 140,
        "wires": [
            [
                "a7b7f33e.4f6d6"
            ]
        ]
    },
    {
        "id": "4837b9c47424b3f2",
        "type": "debug",
        "z": "95249172.4f419",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "device",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 220,
        "wires": []
    },
    {
        "id": "259011be7bbb4ede",
        "type": "function",
        "z": "95249172.4f419",
        "name": "初始化设备数据",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet hd = msg.payload.hd;\nlet pld = msg.payload.pld;\nlet did = pld.id;\n\ncommon.initZ2MDevice(did);\n\nmsg.device = data.devices[did];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 100,
        "wires": [
            [
                "7c34d2644f86076f"
            ]
        ]
    },
    {
        "id": "138da46316ede501",
        "type": "function",
        "z": "95249172.4f419",
        "name": "握手请求",
        "func": "\nreturn {\n    payload: {\n        id:  msg.device.id\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1680,
        "wires": [
            [
                "62b3ca59dea6f8fb"
            ]
        ]
    },
    {
        "id": "62b3ca59dea6f8fb",
        "type": "link out",
        "z": "95249172.4f419",
        "name": "握手请求",
        "mode": "link",
        "links": [
            "8b0eacacfd0fe129"
        ],
        "x": 1045,
        "y": 1680,
        "wires": []
    },
    {
        "id": "20f49d8e60d749d6",
        "type": "link out",
        "z": "95249172.4f419",
        "name": "",
        "mode": "link",
        "links": [
            "b628b7caedd1cf93"
        ],
        "x": 545,
        "y": 40,
        "wires": []
    },
    {
        "id": "17a6d87202b7967e",
        "type": "comment",
        "z": "02363c72749a98be",
        "name": "Z2M消息处理",
        "info": "",
        "x": 170,
        "y": 120,
        "wires": []
    },
    {
        "id": "1c893e7137666c65",
        "type": "link in",
        "z": "02363c72749a98be",
        "name": "",
        "links": [
            "d5520896f23cdeb4"
        ],
        "x": 165,
        "y": 240,
        "wires": [
            [
                "f87edfed5b246e21"
            ]
        ]
    },
    {
        "id": "f87edfed5b246e21",
        "type": "function",
        "z": "02363c72749a98be",
        "name": "主题数组",
        "func": "msg.topics = msg.topic.split(\"/\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 240,
        "wires": [
            [
                "30ed05f19c96563a"
            ]
        ]
    },
    {
        "id": "30ed05f19c96563a",
        "type": "switch",
        "z": "02363c72749a98be",
        "name": "",
        "property": "topics[1]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "bridge",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 150,
        "y": 400,
        "wires": [
            [
                "292188c3915691f6"
            ],
            [
                "754c728a4022a0a5"
            ]
        ]
    },
    {
        "id": "292188c3915691f6",
        "type": "switch",
        "z": "02363c72749a98be",
        "name": "协调器",
        "property": "topics[2]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 380,
        "wires": [
            [
                "ae5c8f54ba488d8e"
            ],
            []
        ]
    },
    {
        "id": "ae5c8f54ba488d8e",
        "type": "function",
        "z": "02363c72749a98be",
        "name": "更新在线状态",
        "func": "let data = global.get(\"data\");\nlet did = msg.topics[0];\nlet device = data.devices[did];\nif (device) {\n    let z2m = device.z2m && device.z2m.z2m;\n    if (z2m) {\n        z2m.online = msg.payload == \"online\" ? 1 : 0;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 380,
        "wires": [
            [
                "d30874e085dcd69d"
            ]
        ]
    },
    {
        "id": "d30874e085dcd69d",
        "type": "debug",
        "z": "02363c72749a98be",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 380,
        "wires": []
    },
    {
        "id": "6a6d241273101adb",
        "type": "function",
        "z": "02363c72749a98be",
        "name": "属性上报",
        "func": "let data = global.get(\"data\");\n\nlet ids = Object.assign({}, data.ids);\nids.dev = msg.topics[1];\nids.pdev = msg.topics[0];\ndelete ids.mqtt;\n\nlet hd =  {\n    from: {\n        type: \"dev\",\n        id: ids.dev,\n        pid: ids.pdev\n    },\n    to: {\n        type: \"edg\",\n        id: data.ids.edg\n    },\n    entry: {\n        type: \"evt\",\n        id: \"report\"\n    },\n    ids: ids\n};\n\n\n\nlet pld = msg.payload;\n\n\nreturn {\n    payload:{\n        hd: hd,\n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 440,
        "wires": [
            [
                "030bc786674d7e65",
                "cecd0debcb823e0f"
            ]
        ]
    },
    {
        "id": "754c728a4022a0a5",
        "type": "json",
        "z": "02363c72749a98be",
        "name": "子设备",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 440,
        "wires": [
            [
                "6a6d241273101adb"
            ]
        ]
    },
    {
        "id": "030bc786674d7e65",
        "type": "debug",
        "z": "02363c72749a98be",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 500,
        "wires": []
    },
    {
        "id": "cecd0debcb823e0f",
        "type": "link out",
        "z": "02363c72749a98be",
        "name": "",
        "mode": "link",
        "links": [
            "f4460e5db856239e"
        ],
        "x": 655,
        "y": 440,
        "wires": []
    }
]