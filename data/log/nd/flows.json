[
    {
        "id": "7c7a09edf982e2f4",
        "type": "tab",
        "label": "全局配置(LOG)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e93bbc67912b9178",
        "type": "tab",
        "label": "NDV2数据存储",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6a12f38f815b4b86",
        "type": "tab",
        "label": "NDV1数据存储",
        "disabled": false,
        "info": ""
    },
    {
        "id": "edb25e171bdb8773",
        "type": "tab",
        "label": "MongoDB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "05ab6743f31497ca",
        "type": "tab",
        "label": "其它",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a94bd1cc5a6fde26",
        "type": "tab",
        "label": "影子数据存储",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4f298837cfcb1b75",
        "type": "mqtt-broker",
        "name": "push",
        "broker": "push-access.sdp.101.com",
        "port": "11883",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "8652d5d20cc13242",
        "type": "nd-mongodb",
        "hostname": "mongodb",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "",
        "name": "mongodb"
    },
    {
        "id": "acbe893ce0e86722",
        "type": "mqtt-broker",
        "name": "south_input",
        "broker": "push-access.sdp.101.com",
        "port": "11882",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "b5ef31a7a90ee4e8",
        "type": "mqtt-broker",
        "name": "north_input",
        "broker": "push-access.sdp.101.com",
        "port": "11882",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "790bcfc072decbef",
        "type": "mqtt-broker",
        "name": "south_output",
        "broker": "push-access.sdp.101.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "7a928bcc4b06cbcc",
        "type": "mqtt-broker",
        "name": "north_output",
        "broker": "push-access.sdp.101.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "50bb7e3aeb2787cf",
        "type": "nd-mongodb",
        "hostname": "m2.all.debug2.mongod3.sdp",
        "topology": "direct",
        "connectOptions": "",
        "port": "34005",
        "db": "qa_mdb_iot_edge",
        "name": ""
    },
    {
        "id": "f544f205.d51a7",
        "type": "inject",
        "z": "7c7a09edf982e2f4",
        "name": "初始化",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "683f9c514d3dc3f8"
            ]
        ]
    },
    {
        "id": "52f82eb73840e302",
        "type": "OS",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "x": 490,
        "y": 100,
        "wires": [
            [
                "705cd1a4e7548610"
            ]
        ]
    },
    {
        "id": "705cd1a4e7548610",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "OS",
        "rules": [
            {
                "t": "set",
                "p": "os",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 100,
        "wires": [
            [
                "c27b74647cc92e82"
            ]
        ]
    },
    {
        "id": "c27b74647cc92e82",
        "type": "home-dir",
        "z": "7c7a09edf982e2f4",
        "x": 780,
        "y": 100,
        "wires": [
            [
                "3e822ed879b8777e"
            ]
        ]
    },
    {
        "id": "3e822ed879b8777e",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "datadir",
        "rules": [
            {
                "t": "set",
                "p": "os.datadir",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 100,
        "wires": [
            [
                "a6a4ebf94a8b8924"
            ]
        ]
    },
    {
        "id": "4aa5b949a197bcb7",
        "type": "inject",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "data",
        "payloadType": "global",
        "x": 240,
        "y": 740,
        "wires": [
            [
                "61299e55f08ac3e1"
            ]
        ]
    },
    {
        "id": "61299e55f08ac3e1",
        "type": "debug",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 740,
        "wires": []
    },
    {
        "id": "1188b78d61e6e2a8",
        "type": "link out",
        "z": "7c7a09edf982e2f4",
        "name": "配置完成",
        "mode": "link",
        "links": [
            "59181471dbc6175b",
            "906bb62a708b4c0c",
            "fbd24133642ac624",
            "67526184107b3e32",
            "f0e01503ad0e1b42"
        ],
        "x": 975,
        "y": 580,
        "wires": []
    },
    {
        "id": "6423346762c80c34",
        "type": "debug",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 620,
        "wires": []
    },
    {
        "id": "4754da03d64fad4b",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "数据初始化",
        "func": "let config = msg.payload;\n\nObject.keys(config).forEach(key => {\n    global.set(key, config[key])\n})\n\nlet data = global.get(\"data\");\nlet ids = global.get(\"ids\");\n\nlet app = data.app;\n\ndata.mqtt = app.mqtt;\ndata.topics = app.mqtt.topics;\ndata.mongodb = app.mongodb;\ndata.shadows = app.shadows;\ndata.ids = ids;\n\nreturn {payload: data};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 380,
        "wires": [
            [
                "0666cb29a70a9804"
            ]
        ]
    },
    {
        "id": "fe1774a6b4d68308",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "展开主题函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet gids = global.get(\"ids\");\n\nlet expandTopic = {\n    expandStr : function(v, _ids) {\n        let ids = Object.assign({}, gids);\n        ids = Object.assign(ids, _ids || {});\n\n        if (typeof v == \"string\") {\n            v = v.replace(/\\{APP_ID\\}/g, env.get(\"IOT_APP_ID\") || \"\");\n            v = v.replace(/\\{DOM_ID\\}/g, env.get(\"IOT_DOM_ID\") || \"\");\n            v = v.replace(/\\{DSP_ID\\}/g, env.get(\"IOT_DSP_ID\") || \"\");\n            v = v.replace(/\\{EDG_ID\\}/g, env.get(\"IOT_EDG_ID\") || \"\");\n            v = v.replace(/\\{DIO_ID\\}/g, env.get(\"IOT_DIO_ID\") || \"\");\n            v = v.replace(/\\{PLF_ID\\}/g, env.get(\"IOT_PLF_ID\") || \"\");\n            v = v.replace(/\\{HOSTNAME\\}/g, env.get(\"HOSTNAME\") || env.get(\"COMPUTERNAME\") || \"\");\n            \n            v = v.replace(/\\{app\\}/g, ids.app || \"\");\n            v = v.replace(/\\{dom\\}/g, ids.dom || \"\");\n            v = v.replace(/\\{dsp\\}/g, ids.dsp || \"\");\n            v = v.replace(/\\{edg\\}/g, ids.edg || \"\");\n            v = v.replace(/\\{dio\\}/g, ids.dio || \"\");\n            v = v.replace(/\\{plf\\}/g, ids.plf || \"\");\n            if (ids.dev)\n                v = v.replace(/\\{dev\\}/g, ids.dev || \"\");\n        }\n        return v;\n    },\n    expandArray : function(v, _ids) {\n        if (Array.isArray(v)) {\n            for(let i=0; i < v.length; i++) {\n                v[i] = this.expand(v[i], _ids);\n            }\n        }\n        return arr;\n    },\n    expandObj : function(v, _ids) {\n        if (typeof v == \"object\") {\n            let keys = Object.keys(v);\n            keys.forEach(k => {\n                v[k] = this.expand(v[k], _ids);\n            });\n        }\n        return v;        \n    },\n    expand : function(v, _ids) {\n        if (typeof v == \"string\")\n            v = this.expandStr(v, _ids);\n                    \n        if (Array.isArray(v)) {\n            v = expandArray(v, _ids);\n        }\n        \n        if (typeof v == \"object\") {\n            v = this.expandObj(v, _ids)\n        }\n                \n        return v\n    }\n}\n    \n\n\ncommon.expandTopic = expandTopic;\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 420,
        "wires": [
            [
                "aea3af329e2e33ba"
            ]
        ]
    },
    {
        "id": "de1af31ddcf813b0",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "缓存数据函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet online = function(){\n    let events = this.events;\n    if (events && events.status)\n        return events.status.pld.online;\n    return 0;\n}\n\nlet cachePayload = function(payload) {\n    let hd = payload.hd;\n    if (hd.from.type == \"dev\") {\n        let dysub = false;\n        let dev = data.devices[hd.from.id];\n        if (!dev) {\n            dev = {};\n            dysub = true;\n        }\n        dev.id = hd.from.id;\n        dev.events = dev.events || {};\n        if (hd.from.pid)\n            dev.pid = hd.from.pid;\n        dev.events[hd.entry.id] = payload;\n        dev.online = online;\n        data.devices[hd.from.id] = dev;\n        if (dysub) node.send({device: dev}, null);\n    }\n\n}\n\ncommon.cachePayload = cachePayload;\n\nreturn [null, {payload: data}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 540,
        "wires": [
            [],
            [
                "fc89e9165d2ffb12"
            ]
        ]
    },
    {
        "id": "5cddc77aa8c606cd",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "获取HD主题函数",
        "func": "let common = global.get(\"common\");\nlet ids = global.get(\"data\").ids;\n\nlet getHDTopic = function(hd) {\n    let tpc = \"\";\n    if (!hd.pref) hd.pref = {};\n    if (!hd.pref.app) hd.pref.app = (ids.app ? ids.app : \"0\");\n    if (!hd.pref.dom) hd.pref.dom = (ids.dom ? ids.dom : \"0\");\n    \n    if (!hd.from) hd.from = {};\n    if (!hd.from.type) hd.from.type = \"plf\";\n    if (!hd.from.id) hd.from.id = ids.plf;\n    if (!hd.to) hd.to = {};\n    if (!hd.to.type) hd.to.type = \"0\";\n    if (!hd.to.id) hd.to.id = \"0\";\n    if (!hd.entry) hd.entry = {};\n    if (!hd.entry.type) hd.entry.type = \"0\";\n    if (!hd.entry.id) hd.entry.id = \"0\";\n    if (!hd.sid) hd.sid = \"0\";\n    if (!hd.stp) hd.stp = 0;\n    if (!hd.version) hd.version = global.get(\"version\");\n    \n    tpc =   hd.pref.app + \"/\" + hd.pref.dom + \"/\" + \n            hd.from.type + \"/\" + hd.from.id + \"/\" + \n            hd.to.type + \"/\" + hd.to.id + \"/\" + \n            hd.entry.type + \"/\" + hd.entry.id;\n    return tpc;\n}\n\n\ncommon.getHDTopic = getHDTopic;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 500,
        "wires": [
            [
                "de1af31ddcf813b0"
            ]
        ]
    },
    {
        "id": "aea3af329e2e33ba",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "键值转ID函数",
        "func": "let common = global.get(\"common\");\n\nlet keyToObjId = function(objs) {\n    let keys = Object.keys(objs);\n    keys.forEach(key => {\n        let obj = objs[key];\n        if (typeof obj == \"object\") \n            obj.id = key;\n    })        \n}\n    \nlet keyDot2DUnder = function (objs, recu) {\n    Object.keys(objs).forEach(key => {\n        let obj = objs[key];\n        delete objs[key];\n        key = key.replace(/\\./g, \"__\");\n        objs[key] = obj;\n        if (typeof obj == \"object\" && recu) \n            this.keyDot2DUnder(obj, recu);\n    })     \n}\n\nlet keyDUnder2Dot = function (objs, recu) {\n    Object.keys(objs).forEach(key => {\n        let obj = objs[key];\n        delete objs[key];\n        key = key.replace(/__/g, \".\");\n        objs[key] = obj;\n        if (typeof obj == \"object\" && recu) \n            this.keyDUnder2Dot(obj, recu);\n    })     \n}\n\n\ncommon.keyToObjId = keyToObjId;\ncommon.keyDot2DUnder = keyDot2DUnder;\ncommon.keyDUnder2Dot = keyDUnder2Dot;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 460,
        "wires": [
            [
                "5cddc77aa8c606cd"
            ]
        ]
    },
    {
        "id": "fc89e9165d2ffb12",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "数据补全",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\n\ncommon.expandTopic.expand(data.ids);   \ncommon.expandTopic.expand(data.topics.subs);\ncommon.expandTopic.expand(data.topics.services);\n\n\ndata.app.id = data.ids.app;\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 580,
        "wires": [
            [
                "6423346762c80c34",
                "1188b78d61e6e2a8"
            ]
        ]
    },
    {
        "id": "a6a4ebf94a8b8924",
        "type": "switch",
        "z": "7c7a09edf982e2f4",
        "name": "是否激活？",
        "property": "IOT_ENABLE_LOG",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 180,
        "wires": [
            [
                "c0624055eec65ac4"
            ],
            []
        ]
    },
    {
        "id": "c0624055eec65ac4",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "配置文件",
        "func": "\nreturn {\n    filename: env.get(\"IOT_CONFIG_FILE\")\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 180,
        "wires": [
            [
                "387bc8ba683df91f"
            ]
        ]
    },
    {
        "id": "874e2ff0304f3dd7",
        "type": "json",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 180,
        "wires": [
            [
                "1924f7fd90ef314c"
            ]
        ]
    },
    {
        "id": "387bc8ba683df91f",
        "type": "file in",
        "z": "7c7a09edf982e2f4",
        "name": "读配置文件",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 590,
        "y": 180,
        "wires": [
            [
                "874e2ff0304f3dd7"
            ]
        ]
    },
    {
        "id": "1924f7fd90ef314c",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "获取数据节点",
        "func": "let config = msg.payload;\nlet log = config.log;\nif (log && log.global) {\n    return {\n        payload: log.global\n    };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 180,
        "wires": [
            [
                "4754da03d64fad4b"
            ]
        ]
    },
    {
        "id": "683f9c514d3dc3f8",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "version",
        "rules": [
            {
                "t": "set",
                "p": "version",
                "pt": "global",
                "to": "0.0.1",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "ids",
                "pt": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 100,
        "wires": [
            [
                "52f82eb73840e302"
            ]
        ]
    },
    {
        "id": "0666cb29a70a9804",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "GUID函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n   \nlet guid = function(len, start) {\n    let result = 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c){\n        let r = Math.random()*16|0;\n        let v = c == 'x' ? r : (r&0x3|0x8);\n        return v.toString(16);\n    })\n    len = len ? len : result.length;\n    return result.substr(start, len);\n}\n\ncommon.guid = guid;\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 380,
        "wires": [
            [
                "fe1774a6b4d68308"
            ]
        ]
    },
    {
        "id": "0f989c13f4e0c1cb",
        "type": "mqtt in",
        "z": "e93bbc67912b9178",
        "name": "订阅",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "4f298837cfcb1b75",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 430,
        "y": 160,
        "wires": [
            [
                "0050c31c1969d8ff",
                "c503d35a9ca051ed"
            ]
        ]
    },
    {
        "id": "906bb62a708b4c0c",
        "type": "link in",
        "z": "e93bbc67912b9178",
        "name": "",
        "links": [
            "f70a2bb4819417da",
            "1188b78d61e6e2a8"
        ],
        "x": 175,
        "y": 260,
        "wires": [
            [
                "922cb1ac3370ad75"
            ]
        ]
    },
    {
        "id": "589883c5ddd06e17",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "订阅主题",
        "func": "let data = global.get(\"data\")\nlet topics = data.topics;\nlet ids = data.ids;\nif (ids.app) {\n    node.send({\n            action: \"unsubscribe\",\n            topic: Object.values(topics.subs)\n    })\n    node.send({\n            action: \"subscribe\",\n            topic: Object.values(topics.subs)\n    })\n} \n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 160,
        "wires": [
            [
                "0f989c13f4e0c1cb",
                "f6ce25be1914c84e"
            ]
        ]
    },
    {
        "id": "745ba2affb87c4cd",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 80,
        "wires": []
    },
    {
        "id": "13403285d1db57b7",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "时间戳",
        "func": "let date = new Date()\nmsg.topics = msg.topic.split(\"/\");\nif (msg.payload.hd) {\n    msg.payload.hd.tpc = msg.topic;\n    msg.payload.hd.tms=date.valueOf();\n    msg.payload.hd.tm=date.toLocaleString();\n} else {\n    msg.payload.tpc = msg.topic;\n    msg.payload.tms=date.valueOf();\n    msg.payload.tm=date.toLocaleString();\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 160,
        "wires": [
            [
                "745ba2affb87c4cd",
                "b14a961d18e43bc3",
                "bfd58d78e99f4d22"
            ]
        ]
    },
    {
        "id": "f6ce25be1914c84e",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 80,
        "wires": []
    },
    {
        "id": "0050c31c1969d8ff",
        "type": "json",
        "z": "e93bbc67912b9178",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 160,
        "wires": [
            [
                "13403285d1db57b7"
            ]
        ]
    },
    {
        "id": "c503d35a9ca051ed",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 80,
        "wires": []
    },
    {
        "id": "922cb1ac3370ad75",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "自动连接",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet ids = data.ids;\ndata.mqtt.clientid = data.mqtt.clientid || (data.ids.app + \"-log-\" + common.guid(8));\n\nmsg = {};\nmsg.action = \"connect\";\nmsg.broker = {\n    autoConnect: true,\n    force: false,\n    clientid: data.mqtt.clientid\n}\nObject.assign(msg.broker, data.mqtt.broker);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 260,
        "wires": [
            [
                "0f989c13f4e0c1cb",
                "589883c5ddd06e17"
            ]
        ]
    },
    {
        "id": "b14a961d18e43bc3",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topics",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 240,
        "wires": []
    },
    {
        "id": "bfd58d78e99f4d22",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "数据表",
        "func": "if (msg.topics.length == 8 && \n    (msg.topics[7] == \"penet\" || msg.topics[7] == \"set_z2m_datafile\")) {\n    return;\n}\n\nlet table = msg.topics[0];\nif (table == \"0\")\n    table = global.get(\"data\").ids.app;\n\nlet tm = new Date(msg.payload.tms || msg.payload.hd.tms)\nlet year = tm.getFullYear().toString()\nlet month = (tm.getMonth() + 101).toString().substr(1,2)\nlet date = (tm.getDate() + 100).toString().substr(1,2)\nmsg.collection=table + \"_\" + year+month+date\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 160,
        "wires": [
            [
                "adc25cedfc423e9f",
                "b2fd630d762a6d27"
            ]
        ]
    },
    {
        "id": "adc25cedfc423e9f",
        "type": "link out",
        "z": "e93bbc67912b9178",
        "name": "存储输出",
        "mode": "link",
        "links": [
            "16086666a5330f52"
        ],
        "x": 1035,
        "y": 160,
        "wires": []
    },
    {
        "id": "b2fd630d762a6d27",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "collection",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 220,
        "wires": []
    },
    {
        "id": "28d8f4e7d3ea22d7",
        "type": "mqtt in",
        "z": "6a12f38f815b4b86",
        "name": "边缘终端上行数据",
        "topic": "business/svcgate/#",
        "qos": "2",
        "datatype": "json",
        "broker": "4f298837cfcb1b75",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 140,
        "wires": [
            [
                "7baad2ac838fa909"
            ]
        ]
    },
    {
        "id": "9d2b3b155c3a6c64",
        "type": "function",
        "z": "6a12f38f815b4b86",
        "name": "数据表",
        "func": "let hd = msg.payload.hd;\nif (!hd.tpc) hd.tpc = msg.topic;\nif (!hd.gid) hd.gid = hd.tpc.substr(hd.tpc.lastIndexOf(\"/\") + 1);\n\nlet tm = new Date(msg.payload.tms)\nlet year = tm.getFullYear().toString()\nlet month = (tm.getMonth() + 101).toString().substr(1,2)\nlet date = (tm.getDate() + 100).toString().substr(1,2)\nmsg.collection=hd.gid + \"_\" + year+month+date\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 140,
        "wires": [
            [
                "a9c0bda48830a8eb",
                "84364af3b17d1951",
                "e1bdc0cff71a3dbf"
            ]
        ]
    },
    {
        "id": "a9c0bda48830a8eb",
        "type": "debug",
        "z": "6a12f38f815b4b86",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 260,
        "wires": []
    },
    {
        "id": "7baad2ac838fa909",
        "type": "function",
        "z": "6a12f38f815b4b86",
        "name": "时间戳",
        "func": "let date = new Date()\nmsg.payload.tms=date.valueOf()\nmsg.payload.tm=date.toLocaleString()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 140,
        "wires": [
            [
                "9d2b3b155c3a6c64"
            ]
        ]
    },
    {
        "id": "84364af3b17d1951",
        "type": "debug",
        "z": "6a12f38f815b4b86",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "collection",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 320,
        "wires": []
    },
    {
        "id": "490f1640aef91798",
        "type": "mqtt in",
        "z": "6a12f38f815b4b86",
        "name": "边缘网关下行数据",
        "topic": "business/cmdgate/#",
        "qos": "2",
        "datatype": "json",
        "broker": "4f298837cfcb1b75",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 260,
        "wires": [
            [
                "a2997be811fa25e0",
                "7baad2ac838fa909"
            ]
        ]
    },
    {
        "id": "a2997be811fa25e0",
        "type": "debug",
        "z": "6a12f38f815b4b86",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 320,
        "wires": []
    },
    {
        "id": "e1bdc0cff71a3dbf",
        "type": "link out",
        "z": "6a12f38f815b4b86",
        "name": "存储输出",
        "mode": "link",
        "links": [
            "16086666a5330f52"
        ],
        "x": 765,
        "y": 140,
        "wires": []
    },
    {
        "id": "67526184107b3e32",
        "type": "link in",
        "z": "edb25e171bdb8773",
        "name": "连接输入",
        "links": [
            "1188b78d61e6e2a8"
        ],
        "x": 285,
        "y": 160,
        "wires": [
            [
                "14734f13f94c272f"
            ]
        ]
    },
    {
        "id": "14734f13f94c272f",
        "type": "function",
        "z": "edb25e171bdb8773",
        "name": "获取环境连接",
        "func": "let data = global.get(\"data\");\nlet ids = data.ids;\n\nlet podname = env.get(\"POD_NAME\") || \"\";\n// if (podname) {\nif (true) {\n    let name = \"develop\";\n    if (podname.indexOf(\"-preproduct-\") >=0 )\n        name = \"preproduct\";\n    else if (podname.indexOf(\"-product-\") >=0 )\n        name = \"product\";\n    else if (podname.indexOf(\"-test-\") >=0 )\n        name = \"test\";\n    \n    \n    let mgUrl = data.mongodb[name] || data.mongodb[develop];\n    \n    return {\n        action: \"connect\",\n        url: mgUrl.url\n    };\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 160,
        "wires": [
            [
                "ecd4b9fb7586dc9f",
                "3a662ea2a5b96e5e",
                "fd6b9aa1bce027a4"
            ]
        ]
    },
    {
        "id": "3a662ea2a5b96e5e",
        "type": "debug",
        "z": "edb25e171bdb8773",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "url",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 100,
        "wires": []
    },
    {
        "id": "ecd4b9fb7586dc9f",
        "type": "nd-mg-out",
        "z": "edb25e171bdb8773",
        "mongodb": "8652d5d20cc13242",
        "name": "save",
        "collection": "",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 770,
        "y": 200,
        "wires": []
    },
    {
        "id": "16086666a5330f52",
        "type": "link in",
        "z": "edb25e171bdb8773",
        "name": "存储输入",
        "links": [
            "075507d108ce592a",
            "160e3ce504dc0b49",
            "adc25cedfc423e9f",
            "e1bdc0cff71a3dbf"
        ],
        "x": 285,
        "y": 240,
        "wires": [
            [
                "ecd4b9fb7586dc9f"
            ]
        ]
    },
    {
        "id": "fd6b9aa1bce027a4",
        "type": "nd-mg-out",
        "z": "edb25e171bdb8773",
        "mongodb": "8652d5d20cc13242",
        "name": "upset",
        "collection": "",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "update",
        "x": 750,
        "y": 560,
        "wires": []
    },
    {
        "id": "3af1abc48fae5f0c",
        "type": "link in",
        "z": "edb25e171bdb8773",
        "name": "更新或新增",
        "links": [
            "8733b4729c2b3329"
        ],
        "x": 315,
        "y": 560,
        "wires": [
            [
                "fd6b9aa1bce027a4"
            ]
        ]
    },
    {
        "id": "9c88fd5568c36785",
        "type": "http request",
        "z": "05ab6743f31497ca",
        "name": "http获取设备",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://nd-iot-edge.debug.ndaeweb.com/dio/shadows_get_devices",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 560,
        "y": 320,
        "wires": [
            [
                "728f165358bdc6bc",
                "35cf1e9005e8cb0a"
            ]
        ]
    },
    {
        "id": "3b2f3e44ab9a8250",
        "type": "inject",
        "z": "05ab6743f31497ca",
        "name": "同步设备数据",
        "props": [
            {
                "p": "payload.edg_id",
                "v": "ndiot-plf-bfy",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 310,
        "y": 340,
        "wires": [
            [
                "9c88fd5568c36785"
            ]
        ]
    },
    {
        "id": "728f165358bdc6bc",
        "type": "debug",
        "z": "05ab6743f31497ca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 440,
        "wires": []
    },
    {
        "id": "35cf1e9005e8cb0a",
        "type": "function",
        "z": "05ab6743f31497ca",
        "name": "设备补全",
        "func": "let devices = msg.payload;\ndevices.forEach(device => {\n    delete device._id;\n    let _msg = {};\n    _msg.collection = \"ndiot_devices\";\n    _msg.operation = \"update\";\n    \n    _msg.payload = device;\n    _msg.query = {\n        \"id\": device.id\n    }\n    \n    node.send(_msg)\n})\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 320,
        "wires": [
            [
                "7b365c51d1bfe085",
                "8733b4729c2b3329",
                "7c0e4049300cacde"
            ]
        ]
    },
    {
        "id": "7b365c51d1bfe085",
        "type": "debug",
        "z": "05ab6743f31497ca",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 340,
        "wires": []
    },
    {
        "id": "8733b4729c2b3329",
        "type": "link out",
        "z": "05ab6743f31497ca",
        "name": "",
        "mode": "link",
        "links": [
            "3af1abc48fae5f0c"
        ],
        "x": 1015,
        "y": 260,
        "wires": []
    },
    {
        "id": "7c0e4049300cacde",
        "type": "nd-mg-out",
        "z": "05ab6743f31497ca",
        "mongodb": "50bb7e3aeb2787cf",
        "name": "qa_update",
        "collection": "",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "update",
        "x": 1010,
        "y": 600,
        "wires": []
    },
    {
        "id": "a5fab40b8a440bb5",
        "type": "mqtt in",
        "z": "a94bd1cc5a6fde26",
        "name": "南向输入订阅",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "acbe893ce0e86722",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 530,
        "y": 340,
        "wires": [
            [
                "615669b1330a651f",
                "39e5ad23d4337e8e"
            ]
        ]
    },
    {
        "id": "160e3ce504dc0b49",
        "type": "link out",
        "z": "a94bd1cc5a6fde26",
        "name": "南向数据",
        "mode": "link",
        "links": [
            "16086666a5330f52"
        ],
        "x": 975,
        "y": 360,
        "wires": []
    },
    {
        "id": "821bd3a334fab03b",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "设备ID",
        "func": "msg.id =  msg.topic.split(\"/\")[3]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 280,
        "wires": [
            [
                "489eca10a9043253"
            ]
        ]
    },
    {
        "id": "489eca10a9043253",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "数据表",
        "func": "\nlet tm = new Date()\nmsg.tms=tm.valueOf();\nmsg.tm=tm.toLocaleString();\nmsg.from = \"south\"\n\nlet year = tm.getFullYear().toString()\nlet month = (tm.getMonth() + 101).toString().substr(1,2)\nlet date = (tm.getDate() + 100).toString().substr(1,2)\n\nlet _msg = {}\n_msg.collection=\"ndiot_shadows_\" + year+month+date\n_msg.payload = msg;\n\n\nreturn _msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 360,
        "wires": [
            [
                "160e3ce504dc0b49",
                "2eb444bcc2d2bf9a"
            ]
        ]
    },
    {
        "id": "d43f3585a9691357",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "南向输入订阅",
        "func": "node.send({\n        action: \"subscribe\",\n        topic: \"+/+/dev/+/+/+/+/+\"\n})",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 340,
        "wires": [
            [
                "a5fab40b8a440bb5"
            ]
        ]
    },
    {
        "id": "1a767b83756902e3",
        "type": "mqtt in",
        "z": "a94bd1cc5a6fde26",
        "name": "南向输出订阅",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "790bcfc072decbef",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 530,
        "y": 380,
        "wires": [
            [
                "05c96c86f6fe24ae"
            ]
        ]
    },
    {
        "id": "05c96c86f6fe24ae",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "设备ID",
        "func": "msg.id =  msg.topic.split(\"/\")[5]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 380,
        "wires": [
            [
                "489eca10a9043253"
            ]
        ]
    },
    {
        "id": "6e5c83e13f8d8156",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "南向输出订阅",
        "func": "node.send({\n        action: \"subscribe\",\n        topic: \"+/+/+/+/dev/+/+/+\"\n})",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 380,
        "wires": [
            [
                "1a767b83756902e3"
            ]
        ]
    },
    {
        "id": "630c60951558c248",
        "type": "mqtt in",
        "z": "a94bd1cc5a6fde26",
        "name": "北向输出订阅",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "7a928bcc4b06cbcc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 530,
        "y": 700,
        "wires": [
            [
                "2b6aef5620e1034d"
            ]
        ]
    },
    {
        "id": "075507d108ce592a",
        "type": "link out",
        "z": "a94bd1cc5a6fde26",
        "name": "南向数据",
        "mode": "link",
        "links": [
            "16086666a5330f52"
        ],
        "x": 995,
        "y": 680,
        "wires": []
    },
    {
        "id": "af75deeb2568b54e",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "设备ID",
        "func": "msg.id =  msg.topic.split(\"/\")[5]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 660,
        "wires": [
            [
                "5b2fe407e41c33a9"
            ]
        ]
    },
    {
        "id": "5b2fe407e41c33a9",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "数据表",
        "func": "\nlet tm = new Date()\nmsg.tms=tm.valueOf();\nmsg.tm=tm.toLocaleString();\nmsg.from = \"north\"\n\nlet year = tm.getFullYear().toString()\nlet month = (tm.getMonth() + 101).toString().substr(1,2)\nlet date = (tm.getDate() + 100).toString().substr(1,2)\n\nlet _msg = {}\n_msg.collection=\"ndiot_shadows_\" + year+month+date\n_msg.payload = msg;\n\n\nreturn _msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 680,
        "wires": [
            [
                "075507d108ce592a",
                "d3114cba1c023b6f"
            ]
        ]
    },
    {
        "id": "fc7833f37a875434",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "北向输出订阅",
        "func": "node.send({\n        action: \"subscribe\",\n        topic: \"+/+/dev/+/+/+/+/+\"\n})",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 700,
        "wires": [
            [
                "630c60951558c248"
            ]
        ]
    },
    {
        "id": "12e60e1c4abf3055",
        "type": "mqtt in",
        "z": "a94bd1cc5a6fde26",
        "name": "北向输入订阅",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "b5ef31a7a90ee4e8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 530,
        "y": 660,
        "wires": [
            [
                "af75deeb2568b54e"
            ]
        ]
    },
    {
        "id": "2b6aef5620e1034d",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "设备ID",
        "func": "msg.id =  msg.topic.split(\"/\")[3]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 700,
        "wires": [
            [
                "5b2fe407e41c33a9"
            ]
        ]
    },
    {
        "id": "8c09ccba3e53bf78",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "北向输入订阅",
        "func": "node.send({\n        action: \"subscribe\",\n        topic: \"+/+/+/+/dev/+/+/+\"\n})",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 660,
        "wires": [
            [
                "12e60e1c4abf3055"
            ]
        ]
    },
    {
        "id": "2eb444bcc2d2bf9a",
        "type": "debug",
        "z": "a94bd1cc5a6fde26",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 460,
        "wires": []
    },
    {
        "id": "d3114cba1c023b6f",
        "type": "debug",
        "z": "a94bd1cc5a6fde26",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 580,
        "wires": []
    },
    {
        "id": "f0e01503ad0e1b42",
        "type": "link in",
        "z": "a94bd1cc5a6fde26",
        "name": "连接输入",
        "links": [
            "1188b78d61e6e2a8"
        ],
        "x": 105,
        "y": 380,
        "wires": [
            [
                "eb9e9fa256d0641d",
                "d8f1c129a601bcb8"
            ]
        ]
    },
    {
        "id": "eb9e9fa256d0641d",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "南向连接",
        "func": "let data = global.get(\"data\");\n\nmsg = {};\nmsg.action = \"connect\";\nmsg.broker = {\n    autoConnect: true,\n    cleansession: false,\n    force: false\n}\nObject.assign(msg.broker, data.shadows.mqtt.south.broker);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 240,
        "wires": [
            [
                "f1a0ac73c19ca88a",
                "52c6cafec2fba95c"
            ]
        ]
    },
    {
        "id": "d8f1c129a601bcb8",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "北向连接",
        "func": "let data = global.get(\"data\");\n\nmsg = {};\nmsg.action = \"connect\";\nmsg.broker = {\n    autoConnect: true,\n    cleansession: false,\n    force: false,\n}\nObject.assign(msg.broker, data.shadows.mqtt.north.broker);\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 580,
        "wires": [
            [
                "552c7e9a7e20e7fd",
                "857e4fed962e8f46"
            ]
        ]
    },
    {
        "id": "f1a0ac73c19ca88a",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "south_input",
        "func": "let common = global.get(\"common\");\n \nmsg.broker.clientid = \"south_input_\" + common.guid(8)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 220,
        "wires": [
            [
                "d43f3585a9691357",
                "a5fab40b8a440bb5"
            ]
        ]
    },
    {
        "id": "52c6cafec2fba95c",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "south_output",
        "func": "let common = global.get(\"common\");\n\nmsg.broker.clientid = \"south_output_\" + common.guid(8)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 260,
        "wires": [
            [
                "6e5c83e13f8d8156",
                "1a767b83756902e3"
            ]
        ]
    },
    {
        "id": "552c7e9a7e20e7fd",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "north_input",
        "func": "let common = global.get(\"common\");\n \nmsg.broker.clientid = \"north_input_\" + common.guid(8)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 560,
        "wires": [
            [
                "8c09ccba3e53bf78",
                "12e60e1c4abf3055"
            ]
        ]
    },
    {
        "id": "857e4fed962e8f46",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "north_output",
        "func": "let common = global.get(\"common\");\n\nmsg.broker.clientid = \"north_output_\" + common.guid(8)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 600,
        "wires": [
            [
                "fc7833f37a875434",
                "630c60951558c248"
            ]
        ]
    },
    {
        "id": "b1b26ec4df650231",
        "type": "status",
        "z": "a94bd1cc5a6fde26",
        "name": "",
        "scope": [
            "a5fab40b8a440bb5",
            "1a767b83756902e3",
            "630c60951558c248",
            "12e60e1c4abf3055"
        ],
        "x": 850,
        "y": 160,
        "wires": [
            [
                "21f8b284430ba53f"
            ]
        ]
    },
    {
        "id": "21f8b284430ba53f",
        "type": "function",
        "z": "a94bd1cc5a6fde26",
        "name": "",
        "func": "let date = new Date()\nmsg.tm=date.toLocaleString();\n\nreturn {payload: msg};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 160,
        "wires": [
            [
                "d6cadcc63d204593",
                "fee3b5c053f26757"
            ]
        ]
    },
    {
        "id": "d6cadcc63d204593",
        "type": "debug",
        "z": "a94bd1cc5a6fde26",
        "name": "连接断开",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 160,
        "wires": []
    },
    {
        "id": "fee3b5c053f26757",
        "type": "file",
        "z": "a94bd1cc5a6fde26",
        "name": "",
        "filename": "log.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1210,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "615669b1330a651f",
        "type": "json",
        "z": "a94bd1cc5a6fde26",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 320,
        "wires": [
            [
                "821bd3a334fab03b"
            ]
        ]
    },
    {
        "id": "39e5ad23d4337e8e",
        "type": "debug",
        "z": "a94bd1cc5a6fde26",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 240,
        "wires": []
    }
]