[
    {
        "id": "830e6099ab0b63c9",
        "type": "tab",
        "label": "全局配置(NDV2平台)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1b87c586f8186580",
        "type": "tab",
        "label": "订阅/发布",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ab2973b47f51fab7",
        "type": "tab",
        "label": "接口调用",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6a098faa50c428e7",
        "type": "tab",
        "label": "接口处理",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3f5531b19892a842",
        "type": "tab",
        "label": "流程 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4f298837cfcb1b75",
        "type": "mqtt-broker",
        "name": "push",
        "broker": "push-access.sdp.101.com",
        "port": "1780",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "8ca095982007a8dc",
        "type": "mqtt-broker",
        "name": "platform",
        "broker": "172.24.135.38",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "5e344991e8549e2f",
        "type": "inject",
        "z": "830e6099ab0b63c9",
        "name": "初始化",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "e1e68e434919e348"
            ]
        ]
    },
    {
        "id": "e23ab7754ea9d051",
        "type": "OS",
        "z": "830e6099ab0b63c9",
        "name": "",
        "x": 490,
        "y": 100,
        "wires": [
            [
                "29dd067752f24f84"
            ]
        ]
    },
    {
        "id": "29dd067752f24f84",
        "type": "change",
        "z": "830e6099ab0b63c9",
        "name": "OS",
        "rules": [
            {
                "t": "set",
                "p": "os",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 100,
        "wires": [
            [
                "75442b52bbca115d"
            ]
        ]
    },
    {
        "id": "75442b52bbca115d",
        "type": "home-dir",
        "z": "830e6099ab0b63c9",
        "x": 780,
        "y": 100,
        "wires": [
            [
                "315a66230a068a3e"
            ]
        ]
    },
    {
        "id": "315a66230a068a3e",
        "type": "change",
        "z": "830e6099ab0b63c9",
        "name": "datadir",
        "rules": [
            {
                "t": "set",
                "p": "os.datadir",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 100,
        "wires": [
            [
                "d5ab8eced294379f"
            ]
        ]
    },
    {
        "id": "1277ba405f162891",
        "type": "inject",
        "z": "830e6099ab0b63c9",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "data",
        "payloadType": "global",
        "x": 280,
        "y": 680,
        "wires": [
            [
                "726372e989cf332e"
            ]
        ]
    },
    {
        "id": "726372e989cf332e",
        "type": "debug",
        "z": "830e6099ab0b63c9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 680,
        "wires": []
    },
    {
        "id": "9a6b106ca9bc18fb",
        "type": "link out",
        "z": "830e6099ab0b63c9",
        "name": "配置完成",
        "mode": "link",
        "links": [
            "e38fb099ed043b99",
            "50426774948d2ec4"
        ],
        "x": 975,
        "y": 540,
        "wires": []
    },
    {
        "id": "7665542f0efa9c7e",
        "type": "debug",
        "z": "830e6099ab0b63c9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 500,
        "wires": []
    },
    {
        "id": "a63c5d83f29a96e6",
        "type": "function",
        "z": "830e6099ab0b63c9",
        "name": "数据初始化",
        "func": "let config = msg.payload;\n\nlet _ids = global.get(\"ids\");\n\nObject.keys(config).forEach(key => {\n    global.set(key, config[key])\n})\n\nlet data = global.get(\"data\");\nif (_ids) global.set(\"ids\", _ids);\nlet ids = global.get(\"ids\");\n\nlet app = data.app;\nlet plf = app.platform;\nplf.devices = plf.devices || {};\n\ndata.platform = plf\ndata.devices = plf.devices || {};\ndata.mqtt = plf.mqtt;\ndata.topics = plf.mqtt.topics;\ndata.ids = ids;\n\nreturn {payload: data};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 380,
        "wires": [
            [
                "48c35b678a70ae5c"
            ]
        ]
    },
    {
        "id": "48c35b678a70ae5c",
        "type": "function",
        "z": "830e6099ab0b63c9",
        "name": "展开主题函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet gids = global.get(\"ids\");\n\nlet expandTopic = {\n    expandStr : function(v, _ids) {\n        let ids = Object.assign({}, gids);\n        ids = Object.assign(ids, _ids || {});\n\n        if (typeof v == \"string\") {\n            v = v.replace(/\\{APP_ID\\}/g, env.get(\"IOT_APP_ID\") || \"\");\n            v = v.replace(/\\{DOM_ID\\}/g, env.get(\"IOT_DOM_ID\") || \"\");\n            v = v.replace(/\\{DSP_ID\\}/g, env.get(\"IOT_DSP_ID\") || \"\");\n            v = v.replace(/\\{EDG_ID\\}/g, env.get(\"IOT_EDG_ID\") || \"\");\n            v = v.replace(/\\{DIO_ID\\}/g, env.get(\"IOT_DIO_ID\") || \"\");\n            v = v.replace(/\\{PLF_ID\\}/g, env.get(\"IOT_PLF_ID\") || \"\");\n            v = v.replace(/\\{HOSTNAME\\}/g, env.get(\"HOSTNAME\") || env.get(\"COMPUTERNAME\") || \"\");\n            \n            v = v.replace(/\\{app\\}/g, ids.app || \"\");\n            v = v.replace(/\\{dom\\}/g, ids.dom || \"\");\n            v = v.replace(/\\{dsp\\}/g, ids.dsp || \"\");\n            v = v.replace(/\\{edg\\}/g, ids.edg || \"\");\n            v = v.replace(/\\{dio\\}/g, ids.dio || \"\");\n            v = v.replace(/\\{plf\\}/g, ids.plf || \"\");\n            if (ids.dev)\n                v = v.replace(/\\{dev\\}/g, ids.dev || \"\");\n        }\n        return v;\n    },\n    expandArray : function(v, _ids) {\n        if (Array.isArray(v)) {\n            for(let i=0; i < v.length; i++) {\n                v[i] = this.expand(v[i], _ids);\n            }\n        }\n        return arr;\n    },\n    expandObj : function(v, _ids) {\n        if (typeof v == \"object\") {\n            let keys = Object.keys(v);\n            keys.forEach(k => {\n                v[k] = this.expand(v[k], _ids);\n            });\n        }\n        return v;        \n    },\n    expand : function(v, _ids) {\n        if (typeof v == \"string\")\n            v = this.expandStr(v, _ids);\n                    \n        if (Array.isArray(v)) {\n            v = expandArray(v, _ids);\n        }\n        \n        if (typeof v == \"object\") {\n            v = this.expandObj(v, _ids)\n        }\n                \n        return v\n    }\n}\n    \n\n\ncommon.expandTopic = expandTopic;\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 380,
        "wires": [
            [
                "5ce0d4ea7f72f239"
            ]
        ]
    },
    {
        "id": "5ce0d4ea7f72f239",
        "type": "function",
        "z": "830e6099ab0b63c9",
        "name": "缓存数据函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet online = function(){\n    let events = this.events;\n    if (events && events.status)\n        return events.status.pld.online;\n    return 0;\n}\n\nlet cachePayload = function(payload) {\n    let hd = payload.hd;\n    if (hd.from.type == \"dev\") {\n        let dysub = false;\n        let dev = data.devices[hd.from.id];\n        if (!dev) {\n            dev = {};\n            dysub = true;\n        }\n        dev.id = hd.from.id;\n        dev.events = dev.events || {};\n        if (hd.from.pid)\n            dev.pid = hd.from.pid;\n        dev.events[hd.entry.id] = payload;\n        dev.online = online;\n        data.devices[hd.from.id] = dev;\n        if (dysub) node.send({device: dev}, null);\n    }\n\n}\n\ncommon.cachePayload = cachePayload;\n\nreturn [null, {payload: data}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 420,
        "wires": [
            [
                "1fed3291d735a4cb"
            ],
            [
                "2e61947cad055440"
            ]
        ]
    },
    {
        "id": "5a733f4c05e66482",
        "type": "function",
        "z": "830e6099ab0b63c9",
        "name": "获取HD主题函数",
        "func": "let common = global.get(\"common\");\nlet ids = global.get(\"data\").ids;\n\nlet getHDTopic = function(hd) {\n    let tpc = \"\";\n    if (!hd.pref) hd.pref = {};\n    if (!hd.pref.app) hd.pref.app = (ids.app ? ids.app : \"0\");\n    if (!hd.pref.dom) hd.pref.dom = (ids.dom ? ids.dom : \"0\");\n    \n    if (!hd.from) hd.from = {};\n    if (!hd.from.type) hd.from.type = \"plf\";\n    if (!hd.from.id) hd.from.id = ids.plf;\n    if (!hd.to) hd.to = {};\n    if (!hd.to.type) hd.to.type = \"0\";\n    if (!hd.to.id) hd.to.id = \"0\";\n    if (!hd.entry) hd.entry = {};\n    if (!hd.entry.type) hd.entry.type = \"0\";\n    if (!hd.entry.id) hd.entry.id = \"0\";\n    if (!hd.sid) hd.sid = \"0\";\n    if (!hd.stp) hd.stp = 0;\n    if (!hd.version) hd.version = global.get(\"version\");\n    \n    tpc =   hd.pref.app + \"/\" + hd.pref.dom + \"/\" + \n            hd.from.type + \"/\" + hd.from.id + \"/\" + \n            hd.to.type + \"/\" + hd.to.id + \"/\" + \n            hd.entry.type + \"/\" + hd.entry.id;\n    return tpc;\n}\n\n\ncommon.getHDTopic = getHDTopic;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 500,
        "wires": [
            [
                "714ac6065cde5a65"
            ]
        ]
    },
    {
        "id": "2e61947cad055440",
        "type": "function",
        "z": "830e6099ab0b63c9",
        "name": "键值转ID函数",
        "func": "let common = global.get(\"common\");\n\nlet keyToObjId = function(objs) {\n    let keys = Object.keys(objs);\n    keys.forEach(key => {\n        let obj = objs[key];\n        if (typeof obj == \"object\") \n            obj.id = key;\n    })        \n}\n    \nlet keyDot2DUnder = function (objs, recu) {\n    Object.keys(objs).forEach(key => {\n        let obj = objs[key];\n        delete objs[key];\n        key = key.replace(/\\./g, \"__\");\n        objs[key] = obj;\n        if (typeof obj == \"object\" && recu) \n            this.keyDot2DUnder(obj, recu);\n    })     \n}\n\nlet keyDUnder2Dot = function (objs, recu) {\n    Object.keys(objs).forEach(key => {\n        let obj = objs[key];\n        delete objs[key];\n        key = key.replace(/__/g, \".\");\n        objs[key] = obj;\n        if (typeof obj == \"object\" && recu) \n            this.keyDUnder2Dot(obj, recu);\n    })     \n}\n\n\ncommon.keyToObjId = keyToObjId;\ncommon.keyDot2DUnder = keyDot2DUnder;\ncommon.keyDUnder2Dot = keyDUnder2Dot;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 460,
        "wires": [
            [
                "5a733f4c05e66482"
            ]
        ]
    },
    {
        "id": "714ac6065cde5a65",
        "type": "function",
        "z": "830e6099ab0b63c9",
        "d": true,
        "name": "数据补全",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\n\ncommon.expandTopic.expand(data.ids);   \ncommon.expandTopic.expand(data.app);   \ncommon.expandTopic.expand(data.topics.subs);\ncommon.expandTopic.expand(data.topics.services);\n\ncommon.keyToObjId(data.devices);\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 540,
        "wires": [
            [
                "7665542f0efa9c7e",
                "9a6b106ca9bc18fb",
                "0c099849a6952611"
            ]
        ]
    },
    {
        "id": "d5ab8eced294379f",
        "type": "switch",
        "z": "830e6099ab0b63c9",
        "name": "是否激活？",
        "property": "IOT_ENABLE_PLF_BFY",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 180,
        "wires": [
            [
                "bd998246e1c7869b"
            ],
            [
                "19b64a634de99da2"
            ]
        ]
    },
    {
        "id": "bd998246e1c7869b",
        "type": "function",
        "z": "830e6099ab0b63c9",
        "name": "配置文件",
        "func": "\nreturn {\n    filename: env.get(\"IOT_CONFIG_FILE\")\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 180,
        "wires": [
            [
                "3983a23fa7ea20a3"
            ]
        ]
    },
    {
        "id": "656f12d01ee0608f",
        "type": "json",
        "z": "830e6099ab0b63c9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 180,
        "wires": [
            [
                "0ee931f4f689037f"
            ]
        ]
    },
    {
        "id": "3983a23fa7ea20a3",
        "type": "file in",
        "z": "830e6099ab0b63c9",
        "name": "读配置文件",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 590,
        "y": 180,
        "wires": [
            [
                "656f12d01ee0608f"
            ]
        ]
    },
    {
        "id": "28563d57299b212c",
        "type": "link in",
        "z": "830e6099ab0b63c9",
        "name": "重载配置输入",
        "links": [
            "dc90b1f191aa5f6b"
        ],
        "x": 125,
        "y": 240,
        "wires": [
            [
                "d5ab8eced294379f"
            ]
        ]
    },
    {
        "id": "0ee931f4f689037f",
        "type": "function",
        "z": "830e6099ab0b63c9",
        "name": "获取数据节点",
        "func": "let config = msg.payload;\nlet plf = config.platforms[\"bfy\"];\nif (plf && plf.global) {\n    return {\n        payload: plf.global\n    };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 180,
        "wires": [
            [
                "a63c5d83f29a96e6"
            ]
        ]
    },
    {
        "id": "19b64a634de99da2",
        "type": "debug",
        "z": "830e6099ab0b63c9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 240,
        "wires": []
    },
    {
        "id": "1fed3291d735a4cb",
        "type": "function",
        "z": "830e6099ab0b63c9",
        "name": "订阅上下线主题",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet topic;\nlet ids = {};\nif (msg.dispatcher) {\n    topic = data.topics.dysubs.dsp_evt_status;\n    ids.dsp = msg.dispatcher.id;\n}\n\nif (msg.edge) {\n    topic = data.topics.dysubs.edg_evt_status;\n    ids.edg = msg.edge.id;    \n}\n\nif (msg.device) {\n    topic = data.topics.dysubs.dev_evt_status;\n    ids.dev = msg.device.id;    \n}\n\nif (msg.platform) {\n    topic = data.topics.dysubs.plf_evt_status;\n    ids.plf = msg.platform.id;      \n}\n\nif (topic) {\n    topic = common.expandTopic.expandStr(topic, ids);\n\n    node.send({\n            action: \"unsubscribe\",\n            topic: topic\n    })\n    \n    node.send({\n            action: \"subscribe\",\n            topic: topic\n    })\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 420,
        "wires": [
            [
                "080320fdfe8bbcc0"
            ]
        ]
    },
    {
        "id": "080320fdfe8bbcc0",
        "type": "link out",
        "z": "830e6099ab0b63c9",
        "name": "订阅上下线主题输出",
        "mode": "link",
        "links": [
            "a83b5348326ff6f7"
        ],
        "x": 975,
        "y": 420,
        "wires": []
    },
    {
        "id": "0c099849a6952611",
        "type": "function",
        "z": "830e6099ab0b63c9",
        "name": "上线通知",
        "func": "let data = global.get(\"data\")\nlet ids = data.ids;\nif (ids.app && ids.dio) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 580,
        "wires": [
            [
                "002af4323e67ab16"
            ]
        ]
    },
    {
        "id": "002af4323e67ab16",
        "type": "delay",
        "z": "830e6099ab0b63c9",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 580,
        "wires": [
            [
                "3993a480bc4186d7",
                "cac3b6720ce9e55c"
            ]
        ]
    },
    {
        "id": "3993a480bc4186d7",
        "type": "link out",
        "z": "830e6099ab0b63c9",
        "name": "上线通知输出",
        "mode": "link",
        "links": [
            "77fb61e230c79669"
        ],
        "x": 975,
        "y": 580,
        "wires": []
    },
    {
        "id": "cac3b6720ce9e55c",
        "type": "debug",
        "z": "830e6099ab0b63c9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 660,
        "wires": []
    },
    {
        "id": "e1e68e434919e348",
        "type": "change",
        "z": "830e6099ab0b63c9",
        "name": "version",
        "rules": [
            {
                "t": "set",
                "p": "version",
                "pt": "global",
                "to": "0.0.1",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "ids",
                "pt": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 100,
        "wires": [
            [
                "e23ab7754ea9d051"
            ]
        ]
    },
    {
        "id": "85448a00b0560aa8",
        "type": "mqtt in",
        "z": "1b87c586f8186580",
        "name": "终端订阅",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "4f298837cfcb1b75",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 400,
        "y": 140,
        "wires": [
            [
                "d8e41524b46999fa",
                "1a330aaace02e9e7"
            ]
        ]
    },
    {
        "id": "e38fb099ed043b99",
        "type": "link in",
        "z": "1b87c586f8186580",
        "name": "",
        "links": [
            "f70a2bb4819417da",
            "9a6b106ca9bc18fb"
        ],
        "x": 115,
        "y": 240,
        "wires": [
            [
                "c848ab6f02f8cd24"
            ]
        ]
    },
    {
        "id": "bc47147654b00232",
        "type": "function",
        "z": "1b87c586f8186580",
        "name": "订阅主题",
        "func": "let data = global.get(\"data\")\nlet topics = data.topics;\nlet ids = data.ids;\nif (ids.app && ids.dio) {\n    node.send({\n            action: \"unsubscribe\",\n            topic: Object.values(topics.subs)\n    })\n    \n    node.send({\n            action: \"unsubscribe\",\n            topic: Object.values(topics.services)\n    })  \n    \n    node.send({\n            action: \"subscribe\",\n            topic: Object.values(topics.subs)\n    })\n    \n    node.send({\n            action: \"subscribe\",\n            topic: Object.values(topics.services)\n    })    \n} else {\n    node.send({\n            action: \"unsubscribe\",\n            topic: topics.services.plf_svc_login\n    })  \n    \n    node.send({\n            action: \"subscribe\",\n            topic: topics.services.plf_svc_login\n    })      \n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 140,
        "wires": [
            [
                "85448a00b0560aa8",
                "6ffc16cd7ca30817"
            ]
        ]
    },
    {
        "id": "2df31896a9078b25",
        "type": "debug",
        "z": "1b87c586f8186580",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 60,
        "wires": []
    },
    {
        "id": "0d58cf082745cb95",
        "type": "function",
        "z": "1b87c586f8186580",
        "name": "缓存数据",
        "func": "msg.topics = msg.topic.split(\"/\");\nlet hd = msg.payload.hd;\nif (!hd.pref) {\n    hd.pref = {\n        app: msg.topics[0],\n        dom: msg.topics[1]\n    }\n}\n\nlet common = global.get(\"common\");\ncommon.cachePayload(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 140,
        "wires": [
            [
                "eab54143930686f6"
            ]
        ]
    },
    {
        "id": "eab54143930686f6",
        "type": "link out",
        "z": "1b87c586f8186580",
        "name": "订阅输出",
        "mode": "link",
        "links": [
            "2ff5101df1ab6584",
            "47b4149d1dc4b567"
        ],
        "x": 965,
        "y": 140,
        "wires": []
    },
    {
        "id": "a25ee73689325e62",
        "type": "function",
        "z": "1b87c586f8186580",
        "name": "时间戳",
        "func": "let date = new Date()\nmsg.payload.hd.tpc = msg.topic;\nmsg.payload.hd.tms=date.valueOf();\nmsg.payload.hd.tm=date.toLocaleString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 140,
        "wires": [
            [
                "2df31896a9078b25",
                "0d58cf082745cb95"
            ]
        ]
    },
    {
        "id": "a83b5348326ff6f7",
        "type": "link in",
        "z": "1b87c586f8186580",
        "name": "动态订阅主题",
        "links": [
            "83c403b1c017c665",
            "080320fdfe8bbcc0"
        ],
        "x": 125,
        "y": 100,
        "wires": [
            [
                "85448a00b0560aa8",
                "6ffc16cd7ca30817"
            ]
        ]
    },
    {
        "id": "6ffc16cd7ca30817",
        "type": "debug",
        "z": "1b87c586f8186580",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 60,
        "wires": []
    },
    {
        "id": "d8e41524b46999fa",
        "type": "json",
        "z": "1b87c586f8186580",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 550,
        "y": 140,
        "wires": [
            [
                "a25ee73689325e62"
            ]
        ]
    },
    {
        "id": "1a330aaace02e9e7",
        "type": "debug",
        "z": "1b87c586f8186580",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 60,
        "wires": []
    },
    {
        "id": "c848ab6f02f8cd24",
        "type": "function",
        "z": "1b87c586f8186580",
        "name": "自动连接",
        "func": "let data = global.get(\"data\");\nmsg = {};\nmsg.action = \"connect\";\nmsg.broker = {\n    autoConnect: true,\n    force: false\n}\nObject.assign(msg.broker, data.mqtt.broker);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 240,
        "wires": [
            [
                "f17fd87f9448a1af"
            ]
        ]
    },
    {
        "id": "0ab2325532437559",
        "type": "json",
        "z": "1b87c586f8186580",
        "name": "",
        "property": "broker.will.payload",
        "action": "str",
        "pretty": false,
        "x": 550,
        "y": 240,
        "wires": [
            [
                "85448a00b0560aa8",
                "bc47147654b00232"
            ]
        ]
    },
    {
        "id": "fe3f6b11faf04749",
        "type": "function",
        "z": "1b87c586f8186580",
        "d": true,
        "name": "出生消息",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet hd = {\n    from: {\n        type: \"plf\",\n        id: data.ids.plf\n    },\n    to: {\n        type: \"0\",\n        id: \"0\"\n    },\n    entry: {\n        type: \"evt\",\n        id: \"status\"\n    },\n    version: global.get(\"version\")\n};\n\nlet pld = {\n    id: data.ids.plf,\n    online: 1\n};\n\nlet topic = common.getHDTopic(hd);\n\n\nlet birth = {\n    topic: topic,\n    qos: 2,\n    retain: true,\n    payload: {\n        hd: hd,\n        pld: pld\n    }\n}\n\nmsg.broker = msg.broker || {};\nmsg.broker.birth = birth;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 380,
        "wires": [
            [
                "f17fd87f9448a1af"
            ]
        ]
    },
    {
        "id": "f17fd87f9448a1af",
        "type": "function",
        "z": "1b87c586f8186580",
        "name": "遗嘱消息",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet hd = {\n    pref: {\n      app: \"0\",\n      dom: \"0\"\n    },\n    from: {\n        type: \"plf\",\n        id: data.ids.plf\n    },\n    to: {\n        type: \"0\",\n        id: \"0\"\n    },\n    entry: {\n        type: \"evt\",\n        id: \"status\"\n    },\n    version: global.get(\"version\")\n};\n\nlet pld = {\n    id: data.ids.dsp,\n    online: 0\n};\n\nlet topic = common.getHDTopic(hd);\n\n\nlet will = {\n    topic: topic,\n    qos: 2,\n    retain: true,\n    payload: {\n        hd: hd,\n        pld: pld\n    }\n}\n\n\nmsg.broker.will = will;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 240,
        "wires": [
            [
                "0ab2325532437559"
            ]
        ]
    },
    {
        "id": "6a2109f77935a50c",
        "type": "function",
        "z": "1b87c586f8186580",
        "name": "发布主题",
        "func": "let common = global.get(\"common\")\nif (!msg.topic)\n    msg.topic = common.getHDTopic(msg.payload.hd);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 540,
        "wires": [
            [
                "0a35e6473fcce0dd",
                "2f8eb8d5628ab0cd",
                "df677fd677a7bd1f"
            ]
        ]
    },
    {
        "id": "0a35e6473fcce0dd",
        "type": "mqtt out",
        "z": "1b87c586f8186580",
        "name": "mqtt发布",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4f298837cfcb1b75",
        "x": 500,
        "y": 540,
        "wires": []
    },
    {
        "id": "68950cc0a8d36b24",
        "type": "link in",
        "z": "1b87c586f8186580",
        "name": "mqtt发布",
        "links": [
            "9b3a8e543bd70406",
            "5002cb933f4b4eb5",
            "cb5a80219ea82576",
            "befe5b1ac4389423",
            "8f5000be83384a7a",
            "a6df7d880adde7dd",
            "8be32a2bfaeef920",
            "eba33b6f8581520f",
            "39e8f7396c3a0702",
            "11f2e3f15fcd06aa"
        ],
        "x": 225,
        "y": 540,
        "wires": [
            [
                "6a2109f77935a50c"
            ]
        ]
    },
    {
        "id": "2f8eb8d5628ab0cd",
        "type": "debug",
        "z": "1b87c586f8186580",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 620,
        "wires": []
    },
    {
        "id": "df677fd677a7bd1f",
        "type": "debug",
        "z": "1b87c586f8186580",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 700,
        "wires": []
    },
    {
        "id": "6abe85752f7acd88",
        "type": "inject",
        "z": "1b87c586f8186580",
        "name": "定时检查连接",
        "props": [
            {
                "p": "action",
                "v": "connect",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "x": 200,
        "y": 300,
        "wires": [
            [
                "85448a00b0560aa8"
            ]
        ]
    },
    {
        "id": "101dd8163641eae2",
        "type": "inject",
        "z": "ab2973b47f51fab7",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 980,
        "wires": [
            [
                "0bc0de09154141a3"
            ]
        ]
    },
    {
        "id": "0bc0de09154141a3",
        "type": "function",
        "z": "ab2973b47f51fab7",
        "name": "",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet ids = data.ids;\nlet hd = {\n    pref: {\n        app: ids.app,\n        dom: \"\"\n    },\n    from: {\n        type: \"0\",\n        id: \"0\"\n    },\n    to: {\n        type: \"dev\",\n        id: \"0x00158d0003539f17\",\n    },\n    entry: {\n        type: \"svc\",\n        id: \"request\",\n        name: \"set\"\n    },\n    sid: \"0\",\n    stp: 0\n}\nlet pld = {\"state\":\"OFF\"}\n\n// let topic = \"ndiot/test/0/0/dev/ESP8266x00068a16/svc/request\";\n\nlet topic = common.getHDTopic({\n    pref: {app: ids.app, dom: \"0\"},\n    to: {type: \"dio\", id: ids.dio},\n    entry: {type: \"svc\", id: \"turn\"}\n    \n});\n\n\nreturn {\n    topic: topic,\n    payload: {\n        hd: hd,\n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 980,
        "wires": [
            [
                "8be32a2bfaeef920"
            ]
        ]
    },
    {
        "id": "8be32a2bfaeef920",
        "type": "link out",
        "z": "ab2973b47f51fab7",
        "name": "",
        "mode": "link",
        "links": [
            "68950cc0a8d36b24"
        ],
        "x": 615,
        "y": 980,
        "wires": []
    },
    {
        "id": "f2f178f58d4dd23f",
        "type": "function",
        "z": "ab2973b47f51fab7",
        "name": "",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet ids = data.ids;\nlet hd = {\n    pref: {\n        app: ids.app,\n        dom: \"\"\n    },\n    from: {\n        type: \"0\",\n        id: \"0\"\n    },\n    to: {\n        type: \"dev\",\n        id: \"0x00158d0003539f17\",\n    },\n    entry: {\n        type: \"svc\",\n        id: \"request\",\n        name: \"set\"\n    },\n    sid: \"0\",\n    stp: 0\n}\nlet pld = {\"state\":\"ON\"}\n\n// let topic = \"ndiot/test/0/0/dev/ESP8266x00068a16/svc/request\";\n\nlet topic = common.getHDTopic({\n    pref: {app: ids.app, dom: \"0\"},\n    to: {type: \"dio\", id: ids.dio},\n    entry: {type: \"svc\", id: \"turn\"}\n    \n});\n\n\nreturn {\n    topic: topic,\n    payload: {\n        hd: hd,\n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1060,
        "wires": [
            [
                "8be32a2bfaeef920"
            ]
        ]
    },
    {
        "id": "6453fa49aaf2ab3f",
        "type": "inject",
        "z": "ab2973b47f51fab7",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 1080,
        "wires": [
            [
                "f2f178f58d4dd23f"
            ]
        ]
    },
    {
        "id": "50426774948d2ec4",
        "type": "link in",
        "z": "ab2973b47f51fab7",
        "name": "请求",
        "links": [
            "9a6b106ca9bc18fb"
        ],
        "x": 165,
        "y": 200,
        "wires": [
            [
                "b99212d592c77413"
            ]
        ]
    },
    {
        "id": "05ea96f96ed1b42f",
        "type": "delay",
        "z": "ab2973b47f51fab7",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 200,
        "wires": [
            [
                "05232d996f54076e"
            ]
        ]
    },
    {
        "id": "05232d996f54076e",
        "type": "function",
        "z": "ab2973b47f51fab7",
        "name": "登入请求",
        "func": "let data = global.get(\"data\");\nlet ids = data.ids;\nreturn {\n    payload: {\n        hd: {\n            pref: {\n                app: ids.app,\n                dom: \"0\"\n            },\n            to: {\n                type: \"0\",\n                id: \"0\"\n            },\n            entry: {\n                type: \"svc\",\n                id: \"login\"\n            }\n        },\n        pld: {\n            id: data.ids.plf\n        }\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 200,
        "wires": [
            [
                "d1a1520394a83e70",
                "ded9120e5c17747e",
                "eba33b6f8581520f"
            ]
        ]
    },
    {
        "id": "d1a1520394a83e70",
        "type": "trigger",
        "z": "ab2973b47f51fab7",
        "name": "超时5秒",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "overrideDelay": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 540,
        "y": 260,
        "wires": [
            [],
            [
                "05ea96f96ed1b42f"
            ]
        ]
    },
    {
        "id": "546de47fd53d920e",
        "type": "change",
        "z": "ab2973b47f51fab7",
        "name": "重置",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 260,
        "wires": [
            [
                "d1a1520394a83e70"
            ]
        ]
    },
    {
        "id": "78517c0f048dd2b3",
        "type": "link in",
        "z": "ab2973b47f51fab7",
        "name": "重置登入请求",
        "links": [
            "87bda24bd97b90b7",
            "77d19c6b68bc8a7b",
            "e15f8affc75b6294"
        ],
        "x": 165,
        "y": 260,
        "wires": [
            [
                "546de47fd53d920e"
            ]
        ]
    },
    {
        "id": "f75815674e70edeb",
        "type": "comment",
        "z": "ab2973b47f51fab7",
        "name": "登入",
        "info": "",
        "x": 170,
        "y": 100,
        "wires": []
    },
    {
        "id": "ded9120e5c17747e",
        "type": "debug",
        "z": "ab2973b47f51fab7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 160,
        "wires": []
    },
    {
        "id": "eba33b6f8581520f",
        "type": "link out",
        "z": "ab2973b47f51fab7",
        "name": "",
        "mode": "link",
        "links": [
            "68950cc0a8d36b24"
        ],
        "x": 1005,
        "y": 280,
        "wires": []
    },
    {
        "id": "1c6ab20cd8c91b39",
        "type": "inject",
        "z": "ab2973b47f51fab7",
        "name": "ESP8266x0098b096",
        "props": [
            {
                "p": "payload.id",
                "v": "ESP8266x0098b096",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 1180,
        "wires": [
            [
                "3ed760be4a65fddc"
            ]
        ]
    },
    {
        "id": "3ed760be4a65fddc",
        "type": "function",
        "z": "ab2973b47f51fab7",
        "name": "reboot",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet ids = data.ids;\nlet hd = {\n    pref: {\n        app: ids.app,\n        dom: \"test\"\n    },\n    from: {\n        type: \"0\",\n        id: \"0\"\n    },\n    to: {\n        type: \"dev\",\n        id: msg.payload.id,\n    },\n    entry: {\n        type: \"svc\",\n        id: \"reboot\"\n    },\n    sid: \"0\",\n    stp: 0\n}\nlet pld = {id: msg.payload.id}\n\n\n\nreturn {\n\n    payload: {\n        hd: hd,\n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1220,
        "wires": [
            [
                "8be32a2bfaeef920"
            ]
        ]
    },
    {
        "id": "00d7a283a51ee230",
        "type": "inject",
        "z": "ab2973b47f51fab7",
        "name": "ESP8266x0006dbe5",
        "props": [
            {
                "p": "payload.id",
                "v": "ESP8266x0006dbe5",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "3ed760be4a65fddc"
            ]
        ]
    },
    {
        "id": "d6717b8d57b63ade",
        "type": "inject",
        "z": "ab2973b47f51fab7",
        "name": "ESP8266x00c17ca1",
        "props": [
            {
                "p": "payload.id",
                "v": "ESP8266x00c17ca1",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 1260,
        "wires": [
            [
                "3ed760be4a65fddc"
            ]
        ]
    },
    {
        "id": "68473ad7d5ab4aa8",
        "type": "inject",
        "z": "ab2973b47f51fab7",
        "name": "ESP8266x00068a16",
        "props": [
            {
                "p": "payload.id",
                "v": "ESP8266x00068a16",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 1300,
        "wires": [
            [
                "3ed760be4a65fddc"
            ]
        ]
    },
    {
        "id": "05039c487fd6c1b6",
        "type": "function",
        "z": "ab2973b47f51fab7",
        "name": "注册",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet ids = data.ids;\nlet hd = {\n    pref: {\n        app: ids.app,\n        dom: \"test\"\n    },\n    from: {\n        type: \"dev\",\n        id: msg.payload.id\n    },\n    to: {\n        type: \"dio\",\n        id: data.ids.dio,\n    },\n    entry: {\n        type: \"evt\",\n        id: \"device_joined\"\n    },\n    sid: \"0\",\n    stp: 0\n}\nlet pld = msg.payload\n\n\nreturn {\n\n    payload: {\n        hd: hd,\n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 880,
        "wires": [
            [
                "8be32a2bfaeef920"
            ]
        ]
    },
    {
        "id": "85b8cff8b2c1cabf",
        "type": "inject",
        "z": "ab2973b47f51fab7",
        "name": "",
        "props": [
            {
                "p": "payload.id",
                "v": "ESP8266x0098b1f8",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 880,
        "wires": [
            [
                "05039c487fd6c1b6"
            ]
        ]
    },
    {
        "id": "ad9e694061c6093d",
        "type": "function",
        "z": "ab2973b47f51fab7",
        "name": "状态发布",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet hd = {\n    pref: {\n        app: \"0\",\n        dom: \"0\"\n    },\n    from: {\n        type: \"plf\",\n        id: data.ids.plf\n    },\n    to: {\n        type: \"0\",\n        id: \"0\"\n    },\n    entry: {\n        type: \"evt\",\n        id: \"status\"\n    },\n    version: global.get(\"version\")\n};\n\nlet pld = {\n    id: data.ids.plf,\n    online: 1\n};\n\nreturn {\n    payload:{\n        hd: hd,\n        pld: pld\n    },\n    qos: 2,\n    retain: true\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 380,
        "wires": [
            [
                "8141ec918351b80f",
                "eba33b6f8581520f"
            ]
        ]
    },
    {
        "id": "77fb61e230c79669",
        "type": "link in",
        "z": "ab2973b47f51fab7",
        "name": "状态发布输入",
        "links": [
            "3993a480bc4186d7",
            "09cf3f2506fb6591",
            "810c9c146d81321c",
            "bd442c488be65a35"
        ],
        "x": 165,
        "y": 380,
        "wires": [
            [
                "ad9e694061c6093d"
            ]
        ]
    },
    {
        "id": "8141ec918351b80f",
        "type": "debug",
        "z": "ab2973b47f51fab7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 420,
        "wires": []
    },
    {
        "id": "b99212d592c77413",
        "type": "function",
        "z": "ab2973b47f51fab7",
        "name": "未登入？",
        "func": "let data = global.get(\"data\");\nif (!data.ids.app || !data.ids.dio) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 200,
        "wires": [
            [
                "05ea96f96ed1b42f"
            ]
        ]
    },
    {
        "id": "47b4149d1dc4b567",
        "type": "link in",
        "z": "6a098faa50c428e7",
        "name": "接口处理输入",
        "links": [
            "eab54143930686f6"
        ],
        "x": 165,
        "y": 160,
        "wires": [
            [
                "2fe59698779d4231",
                "e3efc5ce2e80ef06"
            ]
        ]
    },
    {
        "id": "2fe59698779d4231",
        "type": "function",
        "z": "6a098faa50c428e7",
        "name": "数据服务响应",
        "func": "let hd = msg.payload.hd;\nif (hd.stp == 1 && hd.entry.type == \"svc\" && hd.from.type == \"dio\" ) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 160,
        "wires": [
            [
                "8fe966b2dedc8bb4"
            ]
        ]
    },
    {
        "id": "8fe966b2dedc8bb4",
        "type": "switch",
        "z": "6a098faa50c428e7",
        "name": "",
        "property": "payload.hd.entry.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "login",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 160,
        "wires": [
            [
                "a40c5a49244e0c23"
            ]
        ]
    },
    {
        "id": "a40c5a49244e0c23",
        "type": "function",
        "z": "6a098faa50c428e7",
        "name": "登入响应处理",
        "func": "let data = global.get(\"data\");\nlet pld = msg.payload.pld;\nif (pld.app_id && pld.dio_id && pld.plf_id) {\n    data.ids.app = pld.app_id;\n    data.ids.dio = pld.dio_id;\n    data.ids.plf = pld.plf_id;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 120,
        "wires": [
            [
                "77d19c6b68bc8a7b",
                "dc90b1f191aa5f6b"
            ]
        ]
    },
    {
        "id": "77d19c6b68bc8a7b",
        "type": "link out",
        "z": "6a098faa50c428e7",
        "name": "",
        "mode": "link",
        "links": [
            "78517c0f048dd2b3"
        ],
        "x": 945,
        "y": 80,
        "wires": []
    },
    {
        "id": "dc90b1f191aa5f6b",
        "type": "link out",
        "z": "6a098faa50c428e7",
        "name": "重载配置",
        "mode": "link",
        "links": [
            "28563d57299b212c"
        ],
        "x": 945,
        "y": 140,
        "wires": []
    },
    {
        "id": "e3efc5ce2e80ef06",
        "type": "function",
        "z": "6a098faa50c428e7",
        "name": "数据事件请求",
        "func": "let hd = msg.payload.hd;\nif (hd.stp == 0 && hd.entry.type == \"evt\" && hd.from.type == \"dio\" ) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 220,
        "wires": [
            [
                "034db2c219b783d9"
            ]
        ]
    },
    {
        "id": "034db2c219b783d9",
        "type": "switch",
        "z": "6a098faa50c428e7",
        "name": "",
        "property": "payload.hd.entry.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "status",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 220,
        "wires": [
            [
                "fd111729edd5b641",
                "dac55ce74b2fb7df"
            ]
        ]
    },
    {
        "id": "fd111729edd5b641",
        "type": "function",
        "z": "6a098faa50c428e7",
        "name": "上线",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 220,
        "wires": [
            [
                "bd442c488be65a35"
            ]
        ]
    },
    {
        "id": "bd442c488be65a35",
        "type": "link out",
        "z": "6a098faa50c428e7",
        "name": "状态发布",
        "mode": "link",
        "links": [
            "77fb61e230c79669"
        ],
        "x": 945,
        "y": 220,
        "wires": []
    },
    {
        "id": "dac55ce74b2fb7df",
        "type": "debug",
        "z": "6a098faa50c428e7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 300,
        "wires": []
    },
    {
        "id": "6e4df35cc38705d0",
        "type": "function",
        "z": "3f5531b19892a842",
        "name": "设备入网",
        "func": "let data = global.get(\"data\")\nlet hd = {\n    pref: {\n        app: \"ndiot\",\n        dom: \"test\"\n    },\n    from: {\n        type :\"dev\",\n        id: \"test_joined\"\n    },\n    to: {\n        type: \"dio\",\n        id: data.ids.dio\n    },\n    entry: {\n        type: \"evt\",\n        id: \"device_joined\"\n    }\n}\n\nreturn {\n    payload: {\n        hd: hd,\n        pld: {}\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 180,
        "wires": [
            [
                "11f2e3f15fcd06aa",
                "a0a9ec9c5c2403e6"
            ]
        ]
    },
    {
        "id": "6c0e6194bcaa48be",
        "type": "inject",
        "z": "3f5531b19892a842",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "6e4df35cc38705d0"
            ]
        ]
    },
    {
        "id": "a0a9ec9c5c2403e6",
        "type": "debug",
        "z": "3f5531b19892a842",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 200,
        "wires": []
    },
    {
        "id": "11f2e3f15fcd06aa",
        "type": "link out",
        "z": "3f5531b19892a842",
        "name": "",
        "mode": "link",
        "links": [
            "68950cc0a8d36b24"
        ],
        "x": 555,
        "y": 160,
        "wires": []
    },
    {
        "id": "6b3f66b762ef9a2f",
        "type": "function",
        "z": "3f5531b19892a842",
        "name": "设备脱网",
        "func": "let data = global.get(\"data\")\nlet hd = {\n    pref: {\n        app: \"ndiot\",\n        dom: \"test\"\n    },\n    from: {\n        type :\"dev\",\n        id: \"test_joined\"\n    },\n    to: {\n        type: \"dio\",\n        id: data.ids.dio\n    },\n    entry: {\n        type: \"evt\",\n        id: \"device_leave\"\n    }\n}\n\nreturn {\n    payload: {\n        hd: hd,\n        pld: {}\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 280,
        "wires": [
            [
                "11f2e3f15fcd06aa"
            ]
        ]
    },
    {
        "id": "c72069963e79c6f3",
        "type": "inject",
        "z": "3f5531b19892a842",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "6b3f66b762ef9a2f"
            ]
        ]
    }
]