[
    {
        "id": "7c7a09edf982e2f4",
        "type": "tab",
        "label": "全局配置(巴法云平台)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e93bbc67912b9178",
        "type": "tab",
        "label": "订阅/发布",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "46a5ba0d798d87c3",
        "type": "tab",
        "label": "接口调用",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f7e96a32e56d72eb",
        "type": "tab",
        "label": "接口处理",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "396cbecdd6c41306",
        "type": "tab",
        "label": "巴法云",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b772149e45b504b7",
        "type": "tab",
        "label": "流程 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4f298837cfcb1b75",
        "type": "mqtt-broker",
        "name": "push",
        "broker": "push-access.sdp.101.com",
        "port": "1780",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "8ca095982007a8dc",
        "type": "mqtt-broker",
        "name": "platform",
        "broker": "172.24.135.38",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ec385154ba1b4fae",
        "type": "mqtt-broker",
        "name": "bemfa",
        "broker": "bemfa.com",
        "port": "9501",
        "clientid": "aa11295e7e7a275d41580a1fbdc787ec",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "f544f205.d51a7",
        "type": "inject",
        "z": "7c7a09edf982e2f4",
        "name": "初始化",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "683f9c514d3dc3f8"
            ]
        ]
    },
    {
        "id": "52f82eb73840e302",
        "type": "OS",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "x": 490,
        "y": 100,
        "wires": [
            [
                "705cd1a4e7548610"
            ]
        ]
    },
    {
        "id": "705cd1a4e7548610",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "OS",
        "rules": [
            {
                "t": "set",
                "p": "os",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 100,
        "wires": [
            [
                "c27b74647cc92e82"
            ]
        ]
    },
    {
        "id": "c27b74647cc92e82",
        "type": "home-dir",
        "z": "7c7a09edf982e2f4",
        "x": 780,
        "y": 100,
        "wires": [
            [
                "3e822ed879b8777e"
            ]
        ]
    },
    {
        "id": "3e822ed879b8777e",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "datadir",
        "rules": [
            {
                "t": "set",
                "p": "os.datadir",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 100,
        "wires": [
            [
                "a6a4ebf94a8b8924"
            ]
        ]
    },
    {
        "id": "4aa5b949a197bcb7",
        "type": "inject",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "data",
        "payloadType": "global",
        "x": 280,
        "y": 680,
        "wires": [
            [
                "61299e55f08ac3e1"
            ]
        ]
    },
    {
        "id": "61299e55f08ac3e1",
        "type": "debug",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 680,
        "wires": []
    },
    {
        "id": "1188b78d61e6e2a8",
        "type": "link out",
        "z": "7c7a09edf982e2f4",
        "name": "配置完成",
        "mode": "link",
        "links": [
            "906bb62a708b4c0c",
            "59181471dbc6175b"
        ],
        "x": 995,
        "y": 560,
        "wires": []
    },
    {
        "id": "6423346762c80c34",
        "type": "debug",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 500,
        "wires": []
    },
    {
        "id": "4754da03d64fad4b",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "数据初始化",
        "func": "let config = msg.payload;\n\nObject.keys(config).forEach(key => {\n    global.set(key, config[key])\n})\n\nlet data = global.get(\"data\");\nlet ids = global.get(\"ids\");\n\nlet app = data.app;\nlet plf = app.platform;\nplf.devices = plf.devices || {};\n\ndata.platform = plf\ndata.devices = plf.devices || {};\ndata.mqtt = plf.mqtt;\ndata.topics = plf.mqtt.topics;\ndata.ids = ids;\n\nreturn {payload: data};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 360,
        "wires": [
            [
                "fe1774a6b4d68308"
            ]
        ]
    },
    {
        "id": "fe1774a6b4d68308",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "展开主题函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet gids = global.get(\"ids\");\n\nlet expandTopic = {\n    expandStr : function(v, _ids) {\n        let ids = Object.assign({}, gids);\n        ids = Object.assign(ids, _ids || {});\n\n        if (typeof v == \"string\") {\n            v = v.replace(/\\{APP_ID\\}/g, env.get(\"IOT_APP_ID\") || \"\");\n            v = v.replace(/\\{DOM_ID\\}/g, env.get(\"IOT_DOM_ID\") || \"\");\n            v = v.replace(/\\{DSP_ID\\}/g, env.get(\"IOT_DSP_ID\") || \"\");\n            v = v.replace(/\\{EDG_ID\\}/g, env.get(\"IOT_EDG_ID\") || \"\");\n            v = v.replace(/\\{DIO_ID\\}/g, env.get(\"IOT_DIO_ID\") || \"\");\n            v = v.replace(/\\{PLF_ID\\}/g, env.get(\"IOT_PLF_ID\") || \"\");\n            v = v.replace(/\\{HOSTNAME\\}/g, env.get(\"HOSTNAME\") || env.get(\"COMPUTERNAME\") || \"\");\n            \n            v = v.replace(/\\{app\\}/g, ids.app || \"\");\n            v = v.replace(/\\{dom\\}/g, ids.dom || \"\");\n            v = v.replace(/\\{dsp\\}/g, ids.dsp || \"\");\n            v = v.replace(/\\{edg\\}/g, ids.edg || \"\");\n            v = v.replace(/\\{dio\\}/g, ids.dio || \"\");\n            v = v.replace(/\\{plf\\}/g, ids.plf || \"\");\n            if (ids.dev)\n                v = v.replace(/\\{dev\\}/g, ids.dev || \"\");\n        }\n        return v;\n    },\n    expandArray : function(v, _ids) {\n        if (Array.isArray(v)) {\n            for(let i=0; i < v.length; i++) {\n                v[i] = this.expand(v[i], _ids);\n            }\n        }\n        return arr;\n    },\n    expandObj : function(v, _ids) {\n        if (typeof v == \"object\") {\n            let keys = Object.keys(v);\n            keys.forEach(k => {\n                v[k] = this.expand(v[k], _ids);\n            });\n        }\n        return v;        \n    },\n    expand : function(v, _ids) {\n        if (typeof v == \"string\")\n            v = this.expandStr(v, _ids);\n                    \n        if (Array.isArray(v)) {\n            v = expandArray(v, _ids);\n        }\n        \n        if (typeof v == \"object\") {\n            v = this.expandObj(v, _ids)\n        }\n                \n        return v\n    }\n}\n    \n\n\ncommon.expandTopic = expandTopic;\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 360,
        "wires": [
            [
                "de1af31ddcf813b0"
            ]
        ]
    },
    {
        "id": "de1af31ddcf813b0",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "缓存数据函数",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet online = function(){\n    let events = this.events;\n    if (events && events.status)\n        return events.status.pld.online;\n    return 0;\n}\n\nlet cachePayload = function(payload) {\n    let hd = payload.hd;\n    let pld = payload.pld;\n    \n    if (hd.from.type == \"dev\") {\n        let dev = data.devices[hd.from.id] || {};\n        dev.id = hd.from.id;\n        dev.events = dev.events || {};\n        if (hd.from.pid)\n            dev.pid = hd.from.pid;\n        dev.events[hd.entry.id] = payload;\n        dev.online = online;\n        data.devices[hd.from.id] = dev;\n    }\n    return payload;\n\n}\n\ncommon.cachePayload = cachePayload;\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 400,
        "wires": [
            [
                "aea3af329e2e33ba"
            ]
        ]
    },
    {
        "id": "5cddc77aa8c606cd",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "获取HD主题函数",
        "func": "let common = global.get(\"common\");\nlet ids = global.get(\"data\").ids;\n\nlet getHDTopic = function(hd) {\n    let tpc = \"\";\n    // let ids = hd.ids || gids;\n    if (!hd.pref) hd.pref = {};\n    if (!hd.pref.app) hd.pref.app = (ids.app ? ids.app : \"0\");\n    if (!hd.pref.dom) hd.pref.dom = (ids.dom ? ids.dom : \"0\");\n    \n    if (!hd.from) hd.from = {};\n    if (!hd.from.type) hd.from.type = \"plf\";\n    if (!hd.from.id) hd.from.id = ids.plf;\n    if (!hd.to) hd.to = {};\n    if (!hd.to.type) hd.to.type = \"0\";\n    if (!hd.to.id) hd.to.id = \"0\";\n    if (!hd.entry) hd.entry = {};\n    if (!hd.entry.type) hd.entry.type = \"0\";\n    if (!hd.entry.id) hd.entry.id = \"0\";\n    if (!hd.sid) hd.sid = \"0\";\n    if (!hd.stp) hd.stp = 0;\n    if (!hd.version) hd.version = global.get(\"version\")\n\n\n    tpc =   hd.pref.app + \"/\" + hd.pref.dom + \"/\" + \n            hd.from.type + \"/\" + hd.from.id + \"/\" + \n            hd.to.type + \"/\" + hd.to.id + \"/\" + \n            hd.entry.type + \"/\" + hd.entry.id;\n    return tpc;\n}\n\n\ncommon.getHDTopic = getHDTopic;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 480,
        "wires": [
            [
                "fc89e9165d2ffb12"
            ]
        ]
    },
    {
        "id": "aea3af329e2e33ba",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "键值转ID函数",
        "func": "let common = global.get(\"common\");\n\nlet keyToObjId = function(objs) {\n    let keys = Object.keys(objs);\n    keys.forEach(key => {\n        let obj = objs[key];\n        if (typeof obj == \"object\") \n            obj.id = key;\n    })        \n}\n    \nlet keyDot2DUnder = function (objs, recu) {\n    Object.keys(objs).forEach(key => {\n        let obj = objs[key];\n        delete objs[key];\n        key = key.replace(/\\./g, \"__\");\n        objs[key] = obj;\n        if (typeof obj == \"object\" && recu) \n            this.keyDot2DUnder(obj, recu);\n    })     \n}\n\nlet keyDUnder2Dot = function (objs, recu) {\n    Object.keys(objs).forEach(key => {\n        let obj = objs[key];\n        delete objs[key];\n        key = key.replace(/__/g, \".\");\n        objs[key] = obj;\n        if (typeof obj == \"object\" && recu) \n            this.keyDUnder2Dot(obj, recu);\n    })     \n}\n\n\ncommon.keyToObjId = keyToObjId;\ncommon.keyDot2DUnder = keyDot2DUnder;\ncommon.keyDUnder2Dot = keyDUnder2Dot;\n\nreturn {payload: common};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 440,
        "wires": [
            [
                "5cddc77aa8c606cd"
            ]
        ]
    },
    {
        "id": "fc89e9165d2ffb12",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "数据补全",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet fixUpData = function() {\n\n}\n\ncommon.fixUpData = fixUpData;\n\ncommon.expandTopic.expand(data.ids);   \ncommon.expandTopic.expand(data.app);   \n\ncommon.fixUpData();\ncommon.keyToObjId(data.devices);\n\n\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 540,
        "wires": [
            [
                "6423346762c80c34",
                "1188b78d61e6e2a8"
            ]
        ]
    },
    {
        "id": "a6a4ebf94a8b8924",
        "type": "switch",
        "z": "7c7a09edf982e2f4",
        "name": "是否激活？",
        "property": "IOT_ENABLE_PLF_BFY",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 180,
        "wires": [
            [
                "c0624055eec65ac4"
            ],
            [
                "222a754589dfce9c"
            ]
        ]
    },
    {
        "id": "c0624055eec65ac4",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "配置文件",
        "func": "\nreturn {\n    filename: env.get(\"IOT_CONFIG_FILE\")\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 180,
        "wires": [
            [
                "387bc8ba683df91f"
            ]
        ]
    },
    {
        "id": "874e2ff0304f3dd7",
        "type": "json",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 180,
        "wires": [
            [
                "1924f7fd90ef314c",
                "9d7e17320b6ef853"
            ]
        ]
    },
    {
        "id": "387bc8ba683df91f",
        "type": "file in",
        "z": "7c7a09edf982e2f4",
        "name": "读配置文件",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 590,
        "y": 180,
        "wires": [
            [
                "874e2ff0304f3dd7"
            ]
        ]
    },
    {
        "id": "683f9c514d3dc3f8",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "version",
        "rules": [
            {
                "t": "set",
                "p": "version",
                "pt": "global",
                "to": "0.0.1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 100,
        "wires": [
            [
                "52f82eb73840e302"
            ]
        ]
    },
    {
        "id": "b1a104c8f9b78d59",
        "type": "link in",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "links": [
            "13a9b4457054c058"
        ],
        "x": 175,
        "y": 440,
        "wires": [
            [
                "4754da03d64fad4b"
            ]
        ]
    },
    {
        "id": "1924f7fd90ef314c",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "获取数据节点",
        "func": "let config = msg.payload;\nlet plf = config.platforms[\"bfy\"];\nif (plf && plf.global) {\n    return {\n        payload: plf.global\n    };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 180,
        "wires": [
            [
                "4754da03d64fad4b",
                "9d7e17320b6ef853"
            ]
        ]
    },
    {
        "id": "d85b9cc42425cc33",
        "type": "inject",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "IOT_PLATFORM_BFY_ID",
        "payloadType": "env",
        "x": 780,
        "y": 380,
        "wires": [
            [
                "9d7e17320b6ef853"
            ]
        ]
    },
    {
        "id": "9d7e17320b6ef853",
        "type": "debug",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 320,
        "wires": []
    },
    {
        "id": "222a754589dfce9c",
        "type": "debug",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 240,
        "wires": []
    },
    {
        "id": "0f989c13f4e0c1cb",
        "type": "mqtt in",
        "z": "e93bbc67912b9178",
        "name": "终端订阅",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "4f298837cfcb1b75",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 400,
        "y": 140,
        "wires": [
            [
                "0050c31c1969d8ff",
                "c503d35a9ca051ed"
            ]
        ]
    },
    {
        "id": "906bb62a708b4c0c",
        "type": "link in",
        "z": "e93bbc67912b9178",
        "name": "",
        "links": [
            "f70a2bb4819417da",
            "1188b78d61e6e2a8"
        ],
        "x": 115,
        "y": 240,
        "wires": [
            [
                "922cb1ac3370ad75"
            ]
        ]
    },
    {
        "id": "589883c5ddd06e17",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "订阅主题",
        "func": "let data = global.get(\"data\")\nlet topics = data.topics;\n\nnode.send({\n        action: \"unsubscribe\",\n        topic: Object.values(topics.subs)\n})\n\nnode.send({\n        action: \"subscribe\",\n        topic: Object.values(topics.subs)\n})\n\nnode.send({\n        action: \"unsubscribe\",\n        topic: Object.values(topics.services)\n})\n\nnode.send({\n        action: \"subscribe\",\n        topic: Object.values(topics.services)\n})\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 140,
        "wires": [
            [
                "0f989c13f4e0c1cb",
                "f6ce25be1914c84e"
            ]
        ]
    },
    {
        "id": "745ba2affb87c4cd",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 60,
        "wires": []
    },
    {
        "id": "ee0217ceba515222",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "缓存数据",
        "func": "let common = global.get(\"common\");\ncommon.cachePayload(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 140,
        "wires": [
            [
                "be8cd487c69c6c5a"
            ]
        ]
    },
    {
        "id": "be8cd487c69c6c5a",
        "type": "link out",
        "z": "e93bbc67912b9178",
        "name": "订阅输出",
        "mode": "link",
        "links": [
            "2ff5101df1ab6584",
            "b293cfb8b41ad91f"
        ],
        "x": 965,
        "y": 140,
        "wires": []
    },
    {
        "id": "13403285d1db57b7",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "时间戳",
        "func": "let date = new Date()\nmsg.payload.hd.tpc = msg.topic;\nmsg.payload.hd.tms=date.valueOf();\nmsg.payload.hd.tm=date.toLocaleString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 140,
        "wires": [
            [
                "745ba2affb87c4cd",
                "ee0217ceba515222"
            ]
        ]
    },
    {
        "id": "1fbea7baf2a0c450",
        "type": "link in",
        "z": "e93bbc67912b9178",
        "name": "动态订阅主题",
        "links": [
            "83c403b1c017c665"
        ],
        "x": 125,
        "y": 100,
        "wires": [
            [
                "0f989c13f4e0c1cb",
                "f6ce25be1914c84e"
            ]
        ]
    },
    {
        "id": "f6ce25be1914c84e",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 60,
        "wires": []
    },
    {
        "id": "0050c31c1969d8ff",
        "type": "json",
        "z": "e93bbc67912b9178",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 550,
        "y": 140,
        "wires": [
            [
                "13403285d1db57b7"
            ]
        ]
    },
    {
        "id": "c503d35a9ca051ed",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 60,
        "wires": []
    },
    {
        "id": "922cb1ac3370ad75",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "自动连接",
        "func": "let data = global.get(\"data\");\nmsg = {};\nmsg.action = \"connect\";\nmsg.broker = {\n    autoConnect: true,\n    force: true\n}\nObject.assign(msg.broker, data.mqtt.broker);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 240,
        "wires": [
            [
                "d4cd2db5e5a2688f"
            ]
        ]
    },
    {
        "id": "e8ef1027fa074cf4",
        "type": "json",
        "z": "e93bbc67912b9178",
        "name": "",
        "property": "broker.will.payload",
        "action": "str",
        "pretty": false,
        "x": 710,
        "y": 240,
        "wires": [
            [
                "0f989c13f4e0c1cb",
                "589883c5ddd06e17"
            ]
        ]
    },
    {
        "id": "d4cd2db5e5a2688f",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "出生消息",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\n\nlet hd = {\n    from: {\n        type: \"plf\",\n        id: data.ids.plf\n    },\n    to: {\n        type: \"0\",\n        id: \"0\"\n    },\n    entry: {\n        type: \"evt\",\n        id: \"status\"\n    },\n    version: global.get(\"version\")\n};\n\nlet pld = {\n    id: data.ids.plf,\n    online: 1\n};\n\nlet topic = common.getHDTopic(hd);\n\n\nlet birth = {\n    topic: topic,\n    qos: 2,\n    retain: true,\n    payload: {\n        hd: hd,\n        pld: pld\n    }\n}\n\nmsg.broker = msg.broker || {};\nmsg.broker.birth = birth;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 240,
        "wires": [
            [
                "fcc0eb8cbb3816df"
            ]
        ]
    },
    {
        "id": "fcc0eb8cbb3816df",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "遗嘱消息",
        "func": "let birth = msg.broker.birth;\n\nlet pld = Object.assign({}, birth.payload.pld);\npld.online = 0;\n\n\n\nlet will = {\n    topic: birth.topic,\n    qos: 2,\n    retain: true,\n    payload: {\n        hd: birth.payload.hd,\n        pld: pld\n    }\n}\n\n\nmsg.broker.will = will;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 240,
        "wires": [
            [
                "e8ef1027fa074cf4"
            ]
        ]
    },
    {
        "id": "43bf37762f52e71c",
        "type": "function",
        "z": "e93bbc67912b9178",
        "name": "发布主题",
        "func": "let common = global.get(\"common\")\nif (!msg.topic)\n    msg.topic = common.getHDTopic(msg.payload.hd);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 540,
        "wires": [
            [
                "120048209dc2727c",
                "32bbd9c52100b210",
                "bc16ce4047ca6ec7"
            ]
        ]
    },
    {
        "id": "120048209dc2727c",
        "type": "mqtt out",
        "z": "e93bbc67912b9178",
        "name": "mqtt发布",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4f298837cfcb1b75",
        "x": 500,
        "y": 540,
        "wires": []
    },
    {
        "id": "774d0cb8ef787fc2",
        "type": "link in",
        "z": "e93bbc67912b9178",
        "name": "mqtt发布",
        "links": [
            "9b3a8e543bd70406",
            "5002cb933f4b4eb5",
            "cb5a80219ea82576",
            "befe5b1ac4389423",
            "8f5000be83384a7a",
            "a6df7d880adde7dd",
            "9bdce921275b0acd",
            "b45b2eba09115dae",
            "f2d3874c6b2d73f3",
            "250ffb893d37d89a"
        ],
        "x": 225,
        "y": 540,
        "wires": [
            [
                "43bf37762f52e71c"
            ]
        ]
    },
    {
        "id": "32bbd9c52100b210",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 620,
        "wires": []
    },
    {
        "id": "bc16ce4047ca6ec7",
        "type": "debug",
        "z": "e93bbc67912b9178",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 700,
        "wires": []
    },
    {
        "id": "c730d99f09571fa2",
        "type": "inject",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 520,
        "wires": [
            [
                "288f169baa4b62b3"
            ]
        ]
    },
    {
        "id": "288f169baa4b62b3",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet ids = data.ids;\nlet hd = {\n    pref: {\n        app: ids.app,\n        dom: \"\"\n    },\n    from: {\n        type: \"0\",\n        id: \"0\"\n    },\n    to: {\n        type: \"dev\",\n        id: \"0x00158d0003539f17\",\n    },\n    entry: {\n        type: \"svc\",\n        id: \"request\",\n        name: \"set\"\n    },\n    sid: \"0\",\n    stp: 0\n}\nlet pld = {\"state\":\"OFF\"}\n\n// let topic = \"ndiot/test/0/0/dev/ESP8266x00068a16/svc/request\";\n\nlet topic = common.getHDTopic({\n    pref: {app: ids.app, dom: \"0\"},\n    to: {type: \"dio\", id: ids.dio},\n    entry: {type: \"svc\", id: \"turn\"}\n    \n});\n\n\nreturn {\n    topic: topic,\n    payload: {\n        hd: hd,\n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 520,
        "wires": [
            [
                "9bdce921275b0acd"
            ]
        ]
    },
    {
        "id": "9bdce921275b0acd",
        "type": "link out",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "mode": "link",
        "links": [
            "774d0cb8ef787fc2"
        ],
        "x": 615,
        "y": 520,
        "wires": []
    },
    {
        "id": "26b03579838bb361",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet ids = data.ids;\nlet hd = {\n    pref: {\n        app: ids.app,\n        dom: \"\"\n    },\n    from: {\n        type: \"0\",\n        id: \"0\"\n    },\n    to: {\n        type: \"dev\",\n        id: \"0x00158d0003539f17\",\n    },\n    entry: {\n        type: \"svc\",\n        id: \"request\",\n        name: \"set\"\n    },\n    sid: \"0\",\n    stp: 0\n}\nlet pld = {\"state\":\"ON\"}\n\n// let topic = \"ndiot/test/0/0/dev/ESP8266x00068a16/svc/request\";\n\nlet topic = common.getHDTopic({\n    pref: {app: ids.app, dom: \"0\"},\n    to: {type: \"dio\", id: ids.dio},\n    entry: {type: \"svc\", id: \"turn\"}\n    \n});\n\n\nreturn {\n    topic: topic,\n    payload: {\n        hd: hd,\n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 600,
        "wires": [
            [
                "9bdce921275b0acd"
            ]
        ]
    },
    {
        "id": "4026664a021455be",
        "type": "inject",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 620,
        "wires": [
            [
                "26b03579838bb361"
            ]
        ]
    },
    {
        "id": "59181471dbc6175b",
        "type": "link in",
        "z": "46a5ba0d798d87c3",
        "name": "请求",
        "links": [
            "1188b78d61e6e2a8"
        ],
        "x": 165,
        "y": 200,
        "wires": [
            [
                "9b39f6a45516c881"
            ]
        ]
    },
    {
        "id": "9b39f6a45516c881",
        "type": "delay",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 200,
        "wires": [
            [
                "b5c10fec2a171dec"
            ]
        ]
    },
    {
        "id": "b5c10fec2a171dec",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "登入请求",
        "func": "let data = global.get(\"data\");\nlet ids = data.ids;\nreturn {\n    payload: {\n        hd: {\n            pref: {\n                app: ids.app,\n                dom: \"0\"\n            },\n            to: {\n                type: \"0\",\n                id: \"0\"\n            },\n            entry: {\n                type: \"svc\",\n                id: \"login\"\n            }\n        },\n        pld: {\n            id: data.ids.plf\n        }\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 200,
        "wires": [
            [
                "daa6a0cef19c038d",
                "fa0afe6023cff548",
                "b45b2eba09115dae"
            ]
        ]
    },
    {
        "id": "daa6a0cef19c038d",
        "type": "trigger",
        "z": "46a5ba0d798d87c3",
        "name": "超时5秒",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "overrideDelay": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 540,
        "y": 260,
        "wires": [
            [],
            [
                "9b39f6a45516c881"
            ]
        ]
    },
    {
        "id": "a08e3843c15e944d",
        "type": "change",
        "z": "46a5ba0d798d87c3",
        "name": "重置",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 260,
        "wires": [
            [
                "daa6a0cef19c038d"
            ]
        ]
    },
    {
        "id": "81d871be6af1b2a9",
        "type": "link in",
        "z": "46a5ba0d798d87c3",
        "name": "重置登入请求",
        "links": [
            "87bda24bd97b90b7",
            "7cc27320956b5354"
        ],
        "x": 165,
        "y": 260,
        "wires": [
            [
                "a08e3843c15e944d"
            ]
        ]
    },
    {
        "id": "1c8bebd4730ca10f",
        "type": "comment",
        "z": "46a5ba0d798d87c3",
        "name": "登入",
        "info": "",
        "x": 170,
        "y": 100,
        "wires": []
    },
    {
        "id": "fa0afe6023cff548",
        "type": "debug",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 160,
        "wires": []
    },
    {
        "id": "b45b2eba09115dae",
        "type": "link out",
        "z": "46a5ba0d798d87c3",
        "name": "",
        "mode": "link",
        "links": [
            "774d0cb8ef787fc2"
        ],
        "x": 1005,
        "y": 280,
        "wires": []
    },
    {
        "id": "1824d5d7cbf864c9",
        "type": "inject",
        "z": "46a5ba0d798d87c3",
        "name": "ESP8266x0098b096",
        "props": [
            {
                "p": "payload.id",
                "v": "ESP8266x0098b096",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 720,
        "wires": [
            [
                "c552a06182e3ca45"
            ]
        ]
    },
    {
        "id": "c552a06182e3ca45",
        "type": "function",
        "z": "46a5ba0d798d87c3",
        "name": "reboot",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet ids = data.ids;\nlet hd = {\n    pref: {\n        app: ids.app,\n        dom: \"test\"\n    },\n    from: {\n        type: \"0\",\n        id: \"0\"\n    },\n    to: {\n        type: \"dev\",\n        id: msg.payload.id,\n    },\n    entry: {\n        type: \"svc\",\n        id: \"reboot\"\n    },\n    sid: \"0\",\n    stp: 0\n}\nlet pld = {id: msg.payload.id}\n\n\n\nreturn {\n\n    payload: {\n        hd: hd,\n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 760,
        "wires": [
            [
                "9bdce921275b0acd"
            ]
        ]
    },
    {
        "id": "3fa9fcd54c78334f",
        "type": "inject",
        "z": "46a5ba0d798d87c3",
        "name": "ESP8266x0006dbe5",
        "props": [
            {
                "p": "payload.id",
                "v": "ESP8266x0006dbe5",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 760,
        "wires": [
            [
                "c552a06182e3ca45"
            ]
        ]
    },
    {
        "id": "3287fe114d8ea737",
        "type": "inject",
        "z": "46a5ba0d798d87c3",
        "name": "ESP8266x00c17ca1",
        "props": [
            {
                "p": "payload.id",
                "v": "ESP8266x00c17ca1",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 800,
        "wires": [
            [
                "c552a06182e3ca45"
            ]
        ]
    },
    {
        "id": "f1cf34b3aa953436",
        "type": "inject",
        "z": "46a5ba0d798d87c3",
        "name": "ESP8266x00068a16",
        "props": [
            {
                "p": "payload.id",
                "v": "ESP8266x00068a16",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 840,
        "wires": [
            [
                "c552a06182e3ca45"
            ]
        ]
    },
    {
        "id": "b293cfb8b41ad91f",
        "type": "link in",
        "z": "f7e96a32e56d72eb",
        "name": "接口处理输入",
        "links": [
            "be8cd487c69c6c5a"
        ],
        "x": 165,
        "y": 160,
        "wires": [
            [
                "f3fbccc82b509675"
            ]
        ]
    },
    {
        "id": "f3fbccc82b509675",
        "type": "function",
        "z": "f7e96a32e56d72eb",
        "name": "数据服务响应",
        "func": "let hd = msg.payload.hd;\nif (hd.stp == 1 && hd.entry.type == \"svc\" && hd.from.type == \"dio\" ) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 160,
        "wires": [
            [
                "43bd55a5970c54c2"
            ]
        ]
    },
    {
        "id": "43bd55a5970c54c2",
        "type": "switch",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "property": "payload.hd.entry.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "login",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 160,
        "wires": [
            [
                "c3275c69d557b333"
            ]
        ]
    },
    {
        "id": "c3275c69d557b333",
        "type": "function",
        "z": "f7e96a32e56d72eb",
        "name": "登入响应处理",
        "func": "let data = global.get(\"data\");\nlet pld = msg.payload.pld;\nif (pld.app_id && pld.dio_id && pld.plf_id) {\n    data.ids.app = pld.app_id;\n    data.ids.dio = pld.dio_id;\n    data.ids.plf = pld.plf_id;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 120,
        "wires": [
            [
                "7cc27320956b5354",
                "3be6aa741efc38c0"
            ]
        ]
    },
    {
        "id": "7cc27320956b5354",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "",
        "mode": "link",
        "links": [
            "81d871be6af1b2a9"
        ],
        "x": 945,
        "y": 80,
        "wires": []
    },
    {
        "id": "3be6aa741efc38c0",
        "type": "link out",
        "z": "f7e96a32e56d72eb",
        "name": "重载配置",
        "mode": "link",
        "links": [
            "49a324141b826dec"
        ],
        "x": 945,
        "y": 140,
        "wires": []
    },
    {
        "id": "495b2151060ac9ea",
        "type": "mqtt in",
        "z": "396cbecdd6c41306",
        "name": "bemfa",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "ec385154ba1b4fae",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 330,
        "y": 260,
        "wires": [
            [
                "2e518fac66237f3d",
                "554aef77843aa777",
                "ebad675731c9f853"
            ]
        ]
    },
    {
        "id": "2e518fac66237f3d",
        "type": "debug",
        "z": "396cbecdd6c41306",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 100,
        "wires": []
    },
    {
        "id": "c167ac0254e12076",
        "type": "function",
        "z": "396cbecdd6c41306",
        "name": "订阅主题",
        "func": "let topics = [\n    \"0x00158d0003539f17\",\n    \"0x00158d000353c53f\",\n    \"ESP8266x00c17ca1\"\n    ]\n\n\nnode.send({\n        action: \"unsubscribe\",\n        topic: topics\n})\n\nnode.send({\n        action: \"subscribe\",\n        topic: topics\n})\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 200,
        "wires": [
            [
                "495b2151060ac9ea"
            ]
        ]
    },
    {
        "id": "681cf9f3977b8b71",
        "type": "inject",
        "z": "396cbecdd6c41306",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "c167ac0254e12076"
            ]
        ]
    },
    {
        "id": "554aef77843aa777",
        "type": "switch",
        "z": "396cbecdd6c41306",
        "name": "协调器",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ESP8266x00c17ca1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 400,
        "wires": [
            [
                "3c5c174ae97a1079"
            ]
        ]
    },
    {
        "id": "ebad675731c9f853",
        "type": "switch",
        "z": "396cbecdd6c41306",
        "name": "子设备开关",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0x00158d0003539f17",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0x00158d000353c53f",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 480,
        "wires": [
            [
                "c4a4de242e3bade7"
            ],
            [
                "c4a4de242e3bade7"
            ]
        ]
    },
    {
        "id": "c4a4de242e3bade7",
        "type": "function",
        "z": "396cbecdd6c41306",
        "name": "协议转换",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet ids = data.ids;\nlet devId = msg.topic;\n\nlet hd = {\n    pref: {\n        app: ids.app,\n        dom: \"\"\n    },\n    from: {\n        type: \"0\",\n        id: \"0\"\n    },\n    to: {\n        type: \"dev\",\n        id: devId,\n    },\n    entry: {\n        type: \"svc\",\n        id: \"request\",\n        func: \"set\"\n    },\n    sid: \"0\",\n    stp: 0\n}\nlet pld = {\"state\": msg.payload}\n\n\n\nreturn {\n    payload: {\n        hd: hd,\n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 460,
        "wires": [
            [
                "f782abfd31d4bf71"
            ]
        ]
    },
    {
        "id": "f782abfd31d4bf71",
        "type": "function",
        "z": "396cbecdd6c41306",
        "name": "中转",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet ids = data.ids;\n\nlet topic = common.getHDTopic({\n    pref: {app: ids.app, dom: \"0\"},\n    to: {type: \"dio\", id: ids.dio},\n    entry: {type: \"svc\", id: \"turn\"}\n    \n});\n\n\nreturn {\n    topic: topic,\n    payload: msg.payload\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 420,
        "wires": [
            [
                "f2d3874c6b2d73f3",
                "f5cb5e8b4bab0cae"
            ]
        ]
    },
    {
        "id": "f2d3874c6b2d73f3",
        "type": "link out",
        "z": "396cbecdd6c41306",
        "name": "",
        "mode": "link",
        "links": [
            "774d0cb8ef787fc2"
        ],
        "x": 945,
        "y": 340,
        "wires": []
    },
    {
        "id": "3c5c174ae97a1079",
        "type": "function",
        "z": "396cbecdd6c41306",
        "name": "协议转换",
        "func": "let data = global.get(\"data\");\nlet common = global.get(\"common\");\nlet ids = data.ids;\nlet devId = msg.topic;\n\nlet hd = {\n    pref: {\n        app: ids.app,\n        dom: \"\"\n    },\n    from: {\n        type: \"0\",\n        id: \"0\"\n    },\n    to: {\n        type: \"dev\",\n        id: devId,\n    },\n    entry: {\n        type: \"svc\",\n        id: \"request\",\n        func: \"permit_join\"\n    },\n    sid: \"0\",\n    stp: 0\n}\n\nlet value = msg.payload.toLowerCase() == \"on\" ? true : false;\n\nlet pld = {\"value\": value, \"time\": 254}\n\n\n\nreturn {\n    payload: {\n        hd: hd,\n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 380,
        "wires": [
            [
                "f782abfd31d4bf71"
            ]
        ]
    },
    {
        "id": "f5cb5e8b4bab0cae",
        "type": "debug",
        "z": "396cbecdd6c41306",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 500,
        "wires": []
    },
    {
        "id": "47446fad18d0c295",
        "type": "function",
        "z": "b772149e45b504b7",
        "name": "设备入网",
        "func": "let data = global.get(\"data\")\nlet hd = {\n    pref: {\n        app: \"ndiot\",\n        dom: \"test\"\n    },\n    from: {\n        type :\"dev\",\n        id: \"test_joined\"\n    },\n    to: {\n        type: \"dio\",\n        id: data.ids.dio\n    },\n    entry: {\n        type: \"evt\",\n        id: \"device_joined\"\n    }\n}\n\nreturn {\n    payload: {\n        hd: hd,\n        pld: {}\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 180,
        "wires": [
            [
                "250ffb893d37d89a",
                "b510678e48f8ad64"
            ]
        ]
    },
    {
        "id": "4bbfc7a04824f358",
        "type": "inject",
        "z": "b772149e45b504b7",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "47446fad18d0c295"
            ]
        ]
    },
    {
        "id": "b510678e48f8ad64",
        "type": "debug",
        "z": "b772149e45b504b7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 200,
        "wires": []
    },
    {
        "id": "250ffb893d37d89a",
        "type": "link out",
        "z": "b772149e45b504b7",
        "name": "",
        "mode": "link",
        "links": [
            "774d0cb8ef787fc2"
        ],
        "x": 555,
        "y": 160,
        "wires": []
    },
    {
        "id": "422b622465d8ef43",
        "type": "function",
        "z": "b772149e45b504b7",
        "name": "设备脱网",
        "func": "let data = global.get(\"data\")\nlet hd = {\n    pref: {\n        app: \"ndiot\",\n        dom: \"test\"\n    },\n    from: {\n        type :\"dev\",\n        id: \"test_joined\"\n    },\n    to: {\n        type: \"dio\",\n        id: data.ids.dio\n    },\n    entry: {\n        type: \"evt\",\n        id: \"device_leave\"\n    }\n}\n\nreturn {\n    payload: {\n        hd: hd,\n        pld: {}\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 280,
        "wires": [
            [
                "250ffb893d37d89a"
            ]
        ]
    },
    {
        "id": "2fc157cc93fe0e87",
        "type": "inject",
        "z": "b772149e45b504b7",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "422b622465d8ef43"
            ]
        ]
    }
]